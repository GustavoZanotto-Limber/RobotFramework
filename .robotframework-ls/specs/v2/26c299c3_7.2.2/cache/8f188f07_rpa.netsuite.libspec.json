mtime:1741376718.6396258
{"name": "RPA.Netsuite", "doc": "Netsuite is a library for accessing Netsuite using NetSuite SOAP web service SuiteTalk.\nThe library extends the [netsuitesdk library](https://github.com/fylein/netsuite-sdk-py).\n\nMore information available at [NetSuite SOAP webservice SuiteTalk](http://www.netsuite.com/portal/platform/developer/suitetalk.shtml).\n\n**Examples**\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Netsuite\nLibrary     RPA.Excel.Files\nLibrary     RPA.Tables\nTask Setup  Authorize Netsuite\n\n*** Tasks ***\nGet data from Netsuite and Store into Excel files\n    ${accounts}=        Get Accounts   account_type=_expense\n    ${accounts}=        Create table    ${accounts}\n    Create Workbook\n    Append Rows To Worksheet  ${accounts}\n    Save Workbook       netsuite_accounts.xlsx\n    Close Workbook\n    ${bills}=           Get Vendor Bills\n    ${bills}=           Create table    ${bills}\n    Create Workbook\n    Append Rows To Worksheet  ${bills}\n    Save Workbook       netsuite_bills.xlsx\n    Close Workbook\n\n\n*** Keywords ***\nAuthorize Netsuite\n    ${secrets}=     Get Secret   netsuite\n    Connect\n    ...        account=${secrets}[ACCOUNT]\n    ...        consumer_key=${secrets}[CONSUMER_KEY]\n    ...        consumer_secret=${secrets}[CONSUMER_KEY]\n    ...        token_key=${secrets}[CONSUMER_SECRET]\n    ...        token_secret=${secrets}[TOKEN_KEY]\n```\n\n**Python**\n\n```python\nfrom RPA.Netsuite import Netsuite\n\nns = Netsuite()\nns.connect()\naccounts = ns.get_accounts()\ncurrencies = ns.get_currencies()\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Netsuite.py", "lineno": 34, "tags": [], "inits": [], "keywords": [{"name": "Connect", "args": [{"name": "account", "kind": "POSITIONAL_OR_NAMED", "repr": "account: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "consumer_key", "kind": "POSITIONAL_OR_NAMED", "repr": "consumer_key: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "consumer_secret", "kind": "POSITIONAL_OR_NAMED", "repr": "consumer_secret: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "token_key", "kind": "POSITIONAL_OR_NAMED", "repr": "token_key: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "token_secret", "kind": "POSITIONAL_OR_NAMED", "repr": "token_secret: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Connect to Netsuite with credentials from environment\nvariables.\n\nParameters are not logged into Robot Framework log.\n\nparam account\n\n:   parameter or environment variable NS\\_ACCOUNT\n\nparam consumer_key\n\n:   parameter or environment variable NS\\_CONSUMER\\_KEY\n\nparam consumer_secret\n\n:   parameter or environment variable NS\\_CONSUMER\\_SECRET\n\nparam token_key\n\n:   parameter or environment variable NS\\_TOKEN\\_KEY\n\nparam token_secret\n\n:   parameter or environment variable NS\\_TOKEN\\_SECRET\n", "tags": [], "source": null, "shortdoc": "Connect to Netsuite with credentials from environment variables.", "lineno": 108}, {"name": "Get Accounts", "args": [{"name": "count", "kind": "POSITIONAL_OR_NAMED", "repr": "count: int = 100", "required": true, "defaultValue": "100", "types": ["int"], "typedocs": []}, {"name": "account_type", "kind": "POSITIONAL_OR_NAMED", "repr": "account_type: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Get Accounts of any type or specified type.\n\nparam count\n\n:   number of Accounts to return, defaults to 100\n\nparam account_type\n\n:   if None returns all account types, example. \"_expense\",\n    defaults to None\n\nreturn\n\n:   accounts\n", "tags": [], "source": null, "shortdoc": "Get Accounts of any type or specified type.", "lineno": 268}, {"name": "Get Classifications", "args": [], "doc": "Get all Netsuite Classifications\n\nreturn\n\n:   classifications\n", "tags": [], "source": null, "shortdoc": "Get all Netsuite Classifications", "lineno": 317}, {"name": "Get Currencies", "args": [], "doc": "Get all Netsuite Currencies\n\nreturn\n\n:   currencies\n", "tags": [], "source": null, "shortdoc": "Get all Netsuite Currencies", "lineno": 293}, {"name": "Get Currency", "args": [{"name": "currency_id", "kind": "POSITIONAL_OR_NAMED", "repr": "currency_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get all a Netsuite Currency by its ID\n\nparam currency_id\n\n:   ID of the currency to get\n\nreturn\n\n:   currency\n", "tags": [], "source": null, "shortdoc": "Get all a Netsuite Currency by its ID", "lineno": 284}, {"name": "Get Departments", "args": [], "doc": "Get all Netsuite Departments\n\nreturn\n\n:   departments\n", "tags": [], "source": null, "shortdoc": "Get all Netsuite Departments", "lineno": 309}, {"name": "Get Locations", "args": [], "doc": "Get all Netsuite Locations\n\nreturn\n\n:   locations\n", "tags": [], "source": null, "shortdoc": "Get all Netsuite Locations", "lineno": 301}, {"name": "Get Vendor Bills", "args": [{"name": "count", "kind": "POSITIONAL_OR_NAMED", "repr": "count: int = 10", "required": true, "defaultValue": "10", "types": ["int"], "typedocs": []}], "doc": "Get list of vendor bills\n\nparam count\n\n:   number of vendor bills to return, defaults to 10\n\nreturn\n\n:   list of vendor bills\n", "tags": [], "source": null, "shortdoc": "Get list of vendor bills", "lineno": 334}, {"name": "Get Vendors", "args": [{"name": "count", "kind": "POSITIONAL_OR_NAMED", "repr": "count: int = 10", "required": true, "defaultValue": "10", "types": ["int"], "typedocs": []}], "doc": "Get list of vendors\n\nparam count\n\n:   number of vendors to return, defaults to 10\n\nreturn\n\n:   list of vendors\n", "tags": [], "source": null, "shortdoc": "Get list of vendors", "lineno": 325}, {"name": "Login", "args": [{"name": "account", "kind": "POSITIONAL_OR_NAMED", "repr": "account: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "email", "kind": "POSITIONAL_OR_NAMED", "repr": "email: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "password", "kind": "POSITIONAL_OR_NAMED", "repr": "password: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "role", "kind": "POSITIONAL_OR_NAMED", "repr": "role: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "appid", "kind": "POSITIONAL_OR_NAMED", "repr": "appid: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Login to Netsuite with credentials from environment variables\n\nParameters are not logged into Robot Framework log.\n\nparam account\n\n:   parameter or environment variable NS\\_ACCOUNT\n\nparam email\n\n:   parameter or environment variable NS\\_EMAIL\n\nparam password\n\n:   parameter or environment variable NS\\_PASSWORD\n\nparam role\n\n:   parameter or environment variable NS\\_ROLE\n\nparam appid\n\n:   parameter or environment variable NS\\_APPID\n", "tags": [], "source": null, "shortdoc": "Login to Netsuite with credentials from environment variables", "lineno": 145}, {"name": "Netsuite Get", "args": [{"name": "record_type", "kind": "POSITIONAL_OR_NAMED", "repr": "record_type: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "internal_id", "kind": "POSITIONAL_OR_NAMED", "repr": "internal_id: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "external_id", "kind": "POSITIONAL_OR_NAMED", "repr": "external_id: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Get all records of given type and internalId and/or externalId.\n\nparam record_type\n\n:   type of Netsuite record to get\n\nparam internal_id\n\n:   internalId of the type, default None\n\nparam external_id\n\n:   external_id of the type, default None\n\nraises ValueError\n\n:   if record_type is not given\n\nreturn\n\n:   records as a list or None\n", "tags": [], "source": null, "shortdoc": "Get all records of given type and internalId and/or externalId.", "lineno": 182}, {"name": "Netsuite Get All", "args": [{"name": "record_type", "kind": "POSITIONAL_OR_NAMED", "repr": "record_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get all records of given type.\n\nparam record_type\n\n:   type of Netsuite record to get\n\nraises ValueError\n\n:   if record_type is not given\n\nreturn\n\n:   records as a list or None\n", "tags": [], "source": null, "shortdoc": "Get all records of given type.", "lineno": 209}, {"name": "Netsuite Search", "args": [{"name": "type_name", "kind": "POSITIONAL_OR_NAMED", "repr": "type_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "search_value", "kind": "POSITIONAL_OR_NAMED", "repr": "search_value: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "operator", "kind": "POSITIONAL_OR_NAMED", "repr": "operator: str = contains", "required": true, "defaultValue": "contains", "types": ["str"], "typedocs": []}, {"name": "page_size", "kind": "POSITIONAL_OR_NAMED", "repr": "page_size: int = 5", "required": true, "defaultValue": "5", "types": ["int"], "typedocs": []}], "doc": "Search Netsuite for value from a type. Default operator is\ncontains.\n\nparam type_name\n\n:   search target type name\n\nparam search_value\n\n:   what to search for within type\n\nparam operator\n\n:   name of the operation, defaults to \"contains\"\n\nparam page_size\n\n:   result items within one page, defaults to 5\n\nreturn\n\n:   paginated search object\n", "tags": [], "source": null, "shortdoc": "Search Netsuite for value from a type. Default operator is contains.", "lineno": 222}, {"name": "Netsuite Search All", "args": [{"name": "type_name", "kind": "POSITIONAL_OR_NAMED", "repr": "type_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "page_size", "kind": "POSITIONAL_OR_NAMED", "repr": "page_size: int = 20", "required": true, "defaultValue": "20", "types": ["int"], "typedocs": []}], "doc": "Search Netsuite for a type results.\n\nparam type_name\n\n:   search target type name\n\nparam page_size\n\n:   result items within one page, defaults to 5\n\nreturn\n\n:   paginated search object\n", "tags": [], "source": null, "shortdoc": "Search Netsuite for a type results.", "lineno": 253}], "dataTypes": {}, "typedocs": []}