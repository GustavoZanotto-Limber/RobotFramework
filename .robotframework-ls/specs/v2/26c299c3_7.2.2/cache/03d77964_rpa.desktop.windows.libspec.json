mtime:1741376725.005082
{"name": "RPA.Desktop.Windows", "doc": "Windows is a library for managing the Windows operating system.\n\n**DEPRECATION WARNING! USE RPA.Windows library instead.**\n\nFor Windows desktop automation Robocorp recommends the `RPA.Windows` library.\n\nNo further updates will be released for this library and new functionality will continue\nto be developed in `RPA.Windows` library.\n\n**Running Windows applications**\n\nWindows applications can be started in several ways. The library supports\nthe following keywords:\n\n* Open Application (dispatch Office applications)\n\n* Open File (open the file as process which opens the associated application)\n\n* Open Executable (uses pywinauto start)\n\n* Open Using Run Dialog (uses Windows run dialog)\n\n* Open From Search (uses Windows search dialog)\n\n**Locators**\n\nLocator is used to identify the element for interaction - usually for a mouse click.\n\nLocators can investigated for application once it has been opened by calling\nthe keyword get\\_windows\\_elements which can store locator information into JSON file\nand screenshot of the element into an image file.\n\n**Identifying locator**\n\nThe element needs to be identified by a unique method, for example, \"Three\" for button 3\nin the Calculator application. It can be given either as Three or name:Three.\n\nPossible search criterias:\n\n* name\n\n* class (class_name)\n\n* type (control_type)\n\n* id (automation_id)\n\n* any if none was defined\n\nThe current method of inspecting elements on Windows is inspect.exe which is part\nof [Windows SDK](https://docs.microsoft.com/en-us/windows/win32/winauto/inspect-objects).\n\n**Keyboard**\n\nThe keyword send\\_keys can be used to send keys to the active window. The keyword\ntype\\_keys sends keys to the active window element.\n\nSpecial key codes are documented on [pywinauto](https://pywinauto.readthedocs.io/en/latest/code/pywinauto.keyboard.html#)\ndocumentation page.\n\n**FAQ**\n\n1. I see error message AttributeError: module 'win32com.gen\\_py.00020813-0000-0000-C000-000000000046x0x1x9' has no attribute 'CLSIDToClassMap'\n\n1. From PowerShell run this command: Remove-Item -path $env:LOCALAPPDATATempgen\\_py -recurse\n\n**Examples**\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary          RPA.Desktop.Windows\nSuite Teardown   Close all applications\n\n*** Tasks ***\nOpen Calculator using run dialog\n    ${result}=              Open using run dialog    calc.exe   Calculator\n    ${result}=              Get Window Elements\n    Send Keys               5*2=\n    ${result}=              Get element             partial name:Display is\n    Log Many                ${result}\n    ${result}=              Get element rich text   id:CalculatorResults\n    Should Be Equal As Strings  ${result}  Display is 10\n    ${result}=              Get element rectangle   partial name:Display is\n    ${result}=              Is Element Visible      CalculatorResults\n    ${result}=              Is Element Enabled      partial name:Display is\n```\n\n**Python**\n\n```python\nfrom RPA.Desktop.Windows import Windows\n\nwin = Windows()\n\ndef open_calculator():\n    win.open_from_search(\"calc.exe\", \"Calculator\")\n    elements = win.get_window_elements()\n\ndef make_calculations(expression):\n    win.send_keys(expression)\n    result = win.get_element_rich_text('id:CalculatorResults')\n    return int(result.strip('Display is '))\n\nif __name__ == \"__main__\":\n    open_calculator()\n    exp = '5*2='\n    result = make_calculations(exp)\n    print(f\"Calculation result of '{exp}' is '{result}'\")\n    win.close_all_applications()\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\Windows.py", "lineno": 110, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "backend", "kind": "POSITIONAL_OR_NAMED", "repr": "backend: str = uia", "required": true, "defaultValue": "uia", "types": ["str"], "typedocs": []}], "doc": "Initialize self.  See help(type(self)) for accurate signature.\n", "tags": [], "source": null, "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.", "lineno": 220}], "keywords": [{"name": "Boot Time In Seconds From Epoch", "args": [], "doc": "Get machine boot time\n\nreturn\n\n:   boot time in seconds from Epoch\n\nExample:\n\n```robotframework\n${epoch}  Boot Time In Seconds From Epoch\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Get machine boot time", "lineno": 92}, {"name": "Calculate Rectangle Center", "args": [{"name": "rectangle", "kind": "POSITIONAL_OR_NAMED", "repr": "rectangle: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}], "doc": "Calculate x and y center coordinates from rectangle.\n\nparam rectangle\n\n:   element rectangle coordinates\n\nreturn\n\n:   x and y coordinates of rectangle center\n\nExample:\n\n```robotframework\nOpen Using Run Dialog   calc  Calculator\n&{rect}=        Get Element Rectangle    CalculatorResults\n${x}  ${y}=     Calculate Rectangle Center   ${rect}\n```\n", "tags": [], "source": null, "shortdoc": "Calculate x and y center coordinates from rectangle.", "lineno": 1953}, {"name": "Click Type", "args": [{"name": "x", "kind": "POSITIONAL_OR_NAMED", "repr": "x: int = None", "required": true, "defaultValue": "None", "types": ["int"], "typedocs": []}, {"name": "y", "kind": "POSITIONAL_OR_NAMED", "repr": "y: int = None", "required": true, "defaultValue": "None", "types": ["int"], "typedocs": []}, {"name": "click_type", "kind": "POSITIONAL_OR_NAMED", "repr": "click_type: str = click", "required": true, "defaultValue": "click", "types": ["str"], "typedocs": []}], "doc": "Mouse click on coordinates x and y.\n\nDefault click type is click meaning left\n\nparam x\n\n:   horizontal coordinate for click, defaults to None\n\nparam y\n\n:   vertical coordinate for click, defaults to None\n\nparam click_type\n\n:   \"click\", \"right\" or \"double\", defaults to \"click\"\n\nraises ValueError\n\n:   if coordinates are not valid\n\nExample:\n\n```robotframework\nClick Type  x=450  y=100\nClick Type  x=450  y=100  click_type=right\nClick Type  x=450  y=100  click_type=double\n```\n", "tags": [], "source": null, "shortdoc": "Mouse click on coordinates x and y.", "lineno": 1485}, {"name": "Close All Applications", "args": [], "doc": "Close all applications\n\nExample:\n\n```robotframework\nOpen Application   Excel\nOpen Application   Word\nOpen Executable    notepad.exe   Untitled - Notepad\nClose All Applications\n```\n", "tags": [], "source": null, "shortdoc": "Close all applications", "lineno": 817}, {"name": "Connect By Handle", "args": [{"name": "handle", "kind": "POSITIONAL_OR_NAMED", "repr": "handle: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}, {"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "existing_app", "kind": "POSITIONAL_OR_NAMED", "repr": "existing_app: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "parse_elements", "kind": "POSITIONAL_OR_NAMED", "repr": "parse_elements: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Connect to application by its handle\n\nparam handle\n\n:   handle of the application\n\nparam windowtitle\n\n:   name of the window, defaults to active window if None\n\nparam existing_app\n\n:   set True if selecting window which library has already\n    accessed, default False\n\nparam parse_elements\n\n:   set False to not to parse elements of the window,\n    default True\n\nExample:\n\n```robotframework\n${appid}  Connect By Handle  88112\n```\n", "tags": [], "source": null, "shortdoc": "Connect to application by its handle", "lineno": 773}, {"name": "Connect By Pid", "args": [{"name": "app_pid", "kind": "POSITIONAL_OR_NAMED", "repr": "app_pid: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Connect to application by its pid\n\nparam app_pid\n\n:   process id of the application\n\nparam windowtitle\n\n:   name of the window, defaults to active window if None\n\nExample:\n\n```robotframework\n${appid}  Connect By PID  3231\n```\n", "tags": [], "source": null, "shortdoc": "Connect to application by its pid", "lineno": 749}, {"name": "Drag And Drop", "args": [{"name": "src", "kind": "POSITIONAL_OR_NAMED", "repr": "src: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}, {"name": "target", "kind": "POSITIONAL_OR_NAMED", "repr": "target: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}, {"name": "src_locator", "kind": "POSITIONAL_OR_NAMED", "repr": "src_locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "target_locator", "kind": "POSITIONAL_OR_NAMED", "repr": "target_locator: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "handle_ctrl_key", "kind": "POSITIONAL_OR_NAMED", "repr": "handle_ctrl_key: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "drop_delay", "kind": "POSITIONAL_OR_NAMED", "repr": "drop_delay: float = 2.0", "required": true, "defaultValue": "2.0", "types": ["float"], "typedocs": []}, {"name": "origin", "kind": "POSITIONAL_OR_NAMED", "repr": "origin: str = middle", "required": true, "defaultValue": "middle", "types": ["str"], "typedocs": []}], "doc": "Drag elements from source and drop them on target.\n\nPlease note that if CTRL is not pressed down during drag and drop then\noperation is MOVE operation, on CTRL down the operation is COPY operation.\n\nThere will be also overwrite notification if dropping over existing files.\n\nparam src\n\n:   application object or instance id\n\nparam target\n\n:   application object or instance id\n\nparam src_locator\n\n:   elements to move\n\nparam handle_ctrl_key\n\n:   True if keyword should press CTRL down dragging\n\nparam drop_delay\n\n:   how many seconds to wait until releasing mouse drop,\n    default 2.0\n\nraises ValueError\n\n:   on validation errors\n\nExample:\n\n```robotframework\n${app1}=        Open Using Run Dialog    explorer.exe{VK_SPACE}C:\\workfiles\\movethese   movethese\n${app2}=        Open Using Run Dialog    wordpad.exe   Document - WordPad\nDrag And Drop   ${app1}   ${app2}   regexp:testfile_\\d.txt  name:Rich Text Window   handle_ctrl_key=${True}\nDrag And Drop   ${app1}   ${app1}   regexp:testfile_\\d.txt  name:subdir  handle_ctrl_key=${True}\n```\n", "tags": [], "source": null, "shortdoc": "Drag elements from source and drop them on target.", "lineno": 1860}, {"name": "Find Element", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "search_criteria", "kind": "POSITIONAL_OR_NAMED", "repr": "search_criteria: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Find element from window by locator and criteria.\n\nparam locator\n\n:   name of the locator\n\nparam search_criteria\n\n:   criteria by which element is matched\n\nreturn\n\n:   list of matching elements and locators that were found on the window\n\nExample:\n\n```robotframework\n@{elements}   Find Element   CalculatorResults\nLog Many  ${elements[0]}     # list of matching elements\nLog Many  ${elements[1]}     # list of all available locators\n```\n", "tags": [], "source": null, "shortdoc": "Find element from window by locator and criteria.", "lineno": 1319}, {"name": "Get App", "args": [{"name": "app_id", "kind": "POSITIONAL_OR_NAMED", "repr": "app_id: int = None", "required": true, "defaultValue": "None", "types": ["int"], "typedocs": []}], "doc": "Get application object by id\n\nBy default returns active_application application object.\n\nparam app_id\n\n:   id of the application to get, defaults to None\n\nreturn\n\n:   application object\n\nExample:\n\n```robotframework\n${app1}        Open Application   Excel\n&{appdetails}  Get App   ${app1}\n```\n", "tags": [], "source": null, "shortdoc": "Get application object by id", "lineno": 343}, {"name": "Get Boot Time", "args": [{"name": "as_datetime", "kind": "POSITIONAL_OR_NAMED", "repr": "as_datetime: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "datetime_format", "kind": "POSITIONAL_OR_NAMED", "repr": "datetime_format: str = %Y-%m-%d %H:%M:%S", "required": true, "defaultValue": "%Y-%m-%d %H:%M:%S", "types": ["str"], "typedocs": []}], "doc": "Get computer boot time in seconds from Epoch or in datetime string.\n\nparam as_datetime\n\n:   if True returns datetime string, otherwise seconds,\n    defaults to False\n\nparam datetime_format\n\n:   datetime string format, defaults to \"%Y-%m-%d %H:%M:%S\"\n\nreturn\n\n:   seconds from Epoch or datetime string\n\nExample:\n\n```robotframework\n${boottime}  Get Boot Time\n${boottime}  Get Boot Time   as_datetime=True\n${boottime}  Get Boot Time   as_datetime=True  datetime_format=%d.%m.%Y\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Get computer boot time in seconds from Epoch or in datetime string.", "lineno": 67}, {"name": "Get Dialog Rectangle", "args": [{"name": "ctrl", "kind": "POSITIONAL_OR_NAMED", "repr": "ctrl: Any = None", "required": true, "defaultValue": "None", "types": ["Any"], "typedocs": []}, {"name": "as_dict", "kind": "POSITIONAL_OR_NAMED", "repr": "as_dict: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Get dialog rectangle coordinates\n\nIf ctrl is None then get coordinates from dialog\n\nparam ctrl\n\n:   name of the window control object, defaults to None\n\nreturn\n\n:   coordinates: left, top, right, bottom\n\nExample:\n\n```robotframework\n${left}  ${top}  ${right}  ${bottom}=  Get Dialog Rectangle\n&{coords}  Get Dialog Rectangle  as_dict=True\nLog  top=${coords.top} left=${coords.left}\n```\n", "tags": [], "source": null, "shortdoc": "Get dialog rectangle coordinates", "lineno": 1435}, {"name": "Get Element", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "screenshot", "kind": "POSITIONAL_OR_NAMED", "repr": "screenshot: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "open_dialog", "kind": "POSITIONAL_OR_NAMED", "repr": "open_dialog: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Get element by locator.\n\nparam locator\n\n:   name of the locator\n\nparam screenshot\n\n:   takes element screenshot if True, defaults to False\n\nparam open_dialog\n\n:   True if dialog should be reopened, default to True\n\nreturn\n\n:   element if element was identified, else False\n\nExample:\n\n```robotframework\n${element}  Get Element  CalculatorResults\n${element}  Get Element  Result      screenshot=True\n```\n", "tags": [], "source": null, "shortdoc": "Get element by locator.", "lineno": 1102}, {"name": "Get Element Center", "args": [{"name": "element", "kind": "POSITIONAL_OR_NAMED", "repr": "element: dict", "required": true, "defaultValue": null, "types": ["dict"], "typedocs": []}], "doc": "Get element center coordinates\n\nparam element\n\n:   dictionary of element items\n\nreturn\n\n:   coordinates, x and y\n\nExample:\n\n```robotframework\n@{element}   Find Element  CalculatorResults\n${x}  ${y}=  Get Element Center  ${elements[0][0]}\n```\n", "tags": [], "source": null, "shortdoc": "Get element center coordinates", "lineno": 1469}, {"name": "Get Element Rectangle", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "as_dict", "kind": "POSITIONAL_OR_NAMED", "repr": "as_dict: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Get value of element rectangle attribute.\n\nparam locator\n\n:   element locator\n\nparam as_dict\n\n:   return values in a dictionary, default False\n\nreturn\n\n:   (left, top, right, bottom) values if found, else False\n\nExample:\n\n```robotframework\n${left}  ${top}  ${right}  ${bottom}=  Get Element Rectangle  CalculatorResults\n&{coords}  Get Element Rectangle  CalculatorResults  as_dict=True\nLog  top=${coords.top} left=${coords.left}\n```\n", "tags": [], "source": null, "shortdoc": "Get value of element rectangle attribute.", "lineno": 1175}, {"name": "Get Element Rich Text", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get value of element rich text attribute.\n\nparam locator\n\n:   element locator\n\nreturn\n\n:   rich\\_text value if found, else False\n\nExample:\n\n```robotframework\n${text}  Get Element Rich Text  CalculatorResults\n```\n", "tags": [], "source": null, "shortdoc": "Get value of element rich text attribute.", "lineno": 1150}, {"name": "Get Machine Name", "args": [], "doc": "Get machine name\n\nreturn\n\n:   machine name as string\n\nExample:\n\n```robotframework\n${machine}  Get Machine Name\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Get machine name", "lineno": 106}, {"name": "Get Memory Stats", "args": [{"name": "humanized", "kind": "POSITIONAL_OR_NAMED", "repr": "humanized: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Get computer memory stats and return those in bytes\nor in humanized memory format.\n\nparam humanized\n\n:   if False returns memory information in bytes, defaults to True\n\nreturn\n\n:   memory information in dictionary format\n\nExample:\n\n```robotframework\n&{mem}     Get Memory Stats\n&{mem}     Get Memory Stats   humanized=False\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Get computer memory stats and return those in bytes or in humanized memory format.", "lineno": 234}, {"name": "Get Open Applications", "args": [], "doc": "Get list of all open applications\n\nReturns a dictionary\n\nExample:\n\n```robotframework\n${app1}    Open Application   Excel\n${app2}    Open Executable    calc.exe  Calculator\n${app3}    Open File          /path/to/myfile.txt\n&{apps}    Get Open Applications\n```\n", "tags": [], "source": null, "shortdoc": "Get list of all open applications", "lineno": 326}, {"name": "Get Spaced String", "args": [{"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Replace spaces in a text with pywinauto.keyboard\nspace characters {VK\\_SPACE}\n\nparam text\n\n:   replace spaces in this string\n\nExample:\n\n```robotframework\n${txt}    Get Spaced String   My name is Bond\n# ${txt} = My{VK_SPACE}name{VK_SPACE}is{VK_SPACE}Bond\nSend Keys To Input  ${txt}\n```\n", "tags": [], "source": null, "shortdoc": "Replace spaces in a text with pywinauto.keyboard space characters {VK\\_SPACE}", "lineno": 561}, {"name": "Get Text", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get text from element\n\nparam locator\n\n:   element locator\n\nExample:\n\n```robotframework\nOpen Using Run Dialog  calc     Calculator\nType Into    CalculatorResults   11\nType Into    CalculatorResults   55\n&{val}       Get Text   CalculatorResults\n```\n", "tags": [], "source": null, "shortdoc": "Get text from element", "lineno": 932}, {"name": "Get Username", "args": [], "doc": "Get username of logged in user\n\nreturn\n\n:   username as string\n\nExample:\n\n```robotframework\n${user}  Get Username\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Get username of logged in user", "lineno": 120}, {"name": "Get Window Elements", "args": [{"name": "screenshot", "kind": "POSITIONAL_OR_NAMED", "repr": "screenshot: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "element_json", "kind": "POSITIONAL_OR_NAMED", "repr": "element_json: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "outline", "kind": "POSITIONAL_OR_NAMED", "repr": "outline: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Get element information about all window dialog controls\nand their descendants.\n\nparam screenshot\n\n:   save element screenshot if True, defaults to False\n\nparam element_json\n\n:   save element json if True, defaults to False\n\nparam outline\n\n:   highlight elements if True, defaults to False\n\nreturn\n\n:   all controls and all elements\n\nExample:\n\n```robotframework\n@{elements}   Get Window Elements\nLog Many      ${elements[0]}     # list of all available locators\nLog Many      ${elements[1]}     # list of matching elements\n@{elements}   Get Window Elements  screenshot=True  element_json=True  outline=True\n```\n", "tags": [], "source": null, "shortdoc": "Get element information about all window dialog controls and their descendants.", "lineno": 1516}, {"name": "Get Window List", "args": [], "doc": "Get list of open windows\n\nWindow dictionaries contain:\n\n* automation_id\n\n* control_id\n\n* title\n\n* pid\n\n* handle\n\n* is_active\n\n* keyboard_focus\n\n* rectangle\n\nreturn\n\n:   list of window dictionaries\n\nExample:\n\n```robotframework\n@{windows}    Get Window List\nFOR  ${window}  IN  @{windows}\n    Log Many  ${window}\nEND\n```\n", "tags": [], "source": null, "shortdoc": "Get list of open windows", "lineno": 1972}, {"name": "Is Element Enabled", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Is element enabled.\n\nparam locator\n\n:   element locator\n\nreturn\n\n:   True if enabled, else False\n\nExample:\n\n```robotframework\n${res}=   Is Element Enabled  CalculatorResults\n```\n", "tags": [], "source": null, "shortdoc": "Is element enabled.", "lineno": 1227}, {"name": "Is Element Matching", "args": [{"name": "itemdict", "kind": "POSITIONAL_OR_NAMED", "repr": "itemdict: dict", "required": true, "defaultValue": null, "types": ["dict"], "typedocs": []}, {"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "criteria", "kind": "POSITIONAL_OR_NAMED", "repr": "criteria: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "wildcard", "kind": "POSITIONAL_OR_NAMED", "repr": "wildcard: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Is element matching. Check if locator is found in any field\nor criteria field in the window items.\n\nparam itemDict\n\n:   dictionary of element items\n\nparam locator\n\n:   name of the locator\n\nparam criteria\n\n:   criteria on which to match element\n\nparam wildcard\n\n:   whether to do reg exp match or not, default False\n\nreturn\n\n:   True if element is matching locator and criteria, False if not\n", "tags": [], "source": null, "shortdoc": "Is element matching. Check if locator is found in any field or criteria field in the window items.", "lineno": 1421}, {"name": "Is Element Visible", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Is element visible.\n\nparam locator\n\n:   element locator\n\nreturn\n\n:   True if visible, else False\n\nExample:\n\n```robotframework\n${res}=   Is Element Visible  CalculatorResults\n```\n", "tags": [], "source": null, "shortdoc": "Is element visible.", "lineno": 1211}, {"name": "Kill Process", "args": [{"name": "process_name", "kind": "POSITIONAL_OR_NAMED", "repr": "process_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Kill process by name\n\nparam process_name\n\n:   name of the process\n\nreturn\n\n:   True if succeeds False if not\n\nExample:\n\n```robotframework\n${process}  Process Exists  calc  strict=False\n${status}   Kill Process    ${process.name()}\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Kill process by name", "lineno": 197}, {"name": "Kill Process By Pid", "args": [{"name": "pid", "kind": "POSITIONAL_OR_NAMED", "repr": "pid: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}], "doc": "Kill process by pid\n\nparam pid\n\n:   process identifier\n\nExample:\n\n```robotframework\n${process}  Process Exists  calc  strict=False\n${status}   Kill Process By PID   ${process.pid}\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Kill process by pid", "lineno": 218}, {"name": "Lock Screen", "args": [], "doc": "Put windows into lock mode\n\nExample:\n\n```robotframework\nLock Screen\n```\n", "tags": [], "source": null, "shortdoc": "Put windows into lock mode", "lineno": 1768}, {"name": "Log In", "args": [{"name": "username", "kind": "POSITIONAL_OR_NAMED", "repr": "username: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "password", "kind": "POSITIONAL_OR_NAMED", "repr": "password: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "domain", "kind": "POSITIONAL_OR_NAMED", "repr": "domain: str = .", "required": true, "defaultValue": ".", "types": ["str"], "typedocs": []}], "doc": "Log into Windows domain with username and password.\n\nparam username\n\n:   name of the user\n\nparam password\n\n:   password of the user\n\nparam domain\n\n:   windows domain for the user, defaults to \".\"\n\nreturn\n\n:   handle\n\nExample:\n\n```robotframework\nLog In  username=myname  password=mypassword  domain=company\n```\n", "tags": [], "source": null, "shortdoc": "Log into Windows domain with username and password.", "lineno": 1779}, {"name": "Menu Select", "args": [{"name": "menuitem", "kind": "POSITIONAL_OR_NAMED", "repr": "menuitem: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Select item from menu\n\nparam menuitem\n\n:   name of the menu item\n\nExample:\n\n```robotframework\nOpen Using Run Dialog   notepad     Untitled - Notepad\nMenu Select             File->Print\n```\n", "tags": [], "source": null, "shortdoc": "Select item from menu", "lineno": 1243}, {"name": "Minimize Dialog", "args": [{"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Minimize window by its title\n\nparam windowtitle\n\n:   name of the window, default None means that\n    active window is going to be minimized\n\nExample:\n\n```robotframework\nOpen Using Run Dialog  calc     Calculator\nOpen Using Run Dialog  notepad  Untitled - Notepad\nMinimize Dialog    # Current window (Notepad)\nMinimize Dialog    Calculator\n```\n", "tags": [], "source": null, "shortdoc": "Minimize window by its title", "lineno": 615}, {"name": "Mouse Click", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "x", "kind": "POSITIONAL_OR_NAMED", "repr": "x: int = 0", "required": true, "defaultValue": "0", "types": ["int"], "typedocs": []}, {"name": "y", "kind": "POSITIONAL_OR_NAMED", "repr": "y: int = 0", "required": true, "defaultValue": "0", "types": ["int"], "typedocs": []}, {"name": "off_x", "kind": "POSITIONAL_OR_NAMED", "repr": "off_x: int = 0", "required": true, "defaultValue": "0", "types": ["int"], "typedocs": []}, {"name": "off_y", "kind": "POSITIONAL_OR_NAMED", "repr": "off_y: int = 0", "required": true, "defaultValue": "0", "types": ["int"], "typedocs": []}, {"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "method", "kind": "POSITIONAL_OR_NAMED", "repr": "method: str = locator", "required": true, "defaultValue": "locator", "types": ["str"], "typedocs": []}, {"name": "ctype", "kind": "POSITIONAL_OR_NAMED", "repr": "ctype: str = click", "required": true, "defaultValue": "click", "types": ["str"], "typedocs": []}, {"name": "focus", "kind": "POSITIONAL_OR_NAMED", "repr": "focus: str = center", "required": true, "defaultValue": "center", "types": ["str"], "typedocs": []}, {"name": "tolerance", "kind": "POSITIONAL_OR_NAMED", "repr": "tolerance: int | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Mouse click locator, coordinates, or image\n\nWhen using method locator,\\`image\\` or ocr mouse is clicked by default at\ncenter coordinates.\n\nClick types are:\n\n* click normal left button mouse click\n\n* double\n\n* right\n\nparam locator\n\n:   element locator on active window\n\nparam x\n\n:   coordinate x on desktop\n\nparam y\n\n:   coordinate y on desktop\n\nparam off_x\n\n:   offset x (used for locator and image clicks)\n\nparam off_y\n\n:   offset y (used for locator and image clicks)\n\nparam image\n\n:   image to click on desktop\n\nparam method\n\n:   one of the available methods to mouse click, default \"locator\"\n\nparam ctype\n\n:   type of mouse click\n\nparam focus\n\n:   default point for element click is 'center', can be set to 'topleft'\n    to click top left corner of the element\n\nparam tolerance\n\n:   image matching tolerance between 0 and 1\n\nExample:\n\n```robotframework\nMouse Click  method=coordinates  100   100\nMouse Click  CalculatorResults\nMouse Click  method=image  image=myimage.png  off_x=10  off_y=10  ctype=right\nMouse Click  method=image  image=myimage.png  tolerance=0.8\n${elements}  ${other}=     Find Element  class:Button\nFOR  ${element}  IN  @{elements}\n    Run Keyword If   ${element}[visible]   Mouse Click  ${element}\nEND\nMouse Click  id:TrickyCheckbox  focus=topleft\n```\n", "tags": [], "source": null, "shortdoc": "Mouse click locator, coordinates, or image", "lineno": 969}, {"name": "Mouse Click Coords", "args": [{"name": "x", "kind": "POSITIONAL_OR_NAMED", "repr": "x: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}, {"name": "y", "kind": "POSITIONAL_OR_NAMED", "repr": "y: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}, {"name": "ctype", "kind": "POSITIONAL_OR_NAMED", "repr": "ctype: str = click", "required": true, "defaultValue": "click", "types": ["str"], "typedocs": []}, {"name": "delay_time", "kind": "POSITIONAL_OR_NAMED", "repr": "delay_time: float = None", "required": true, "defaultValue": "None", "types": ["float"], "typedocs": []}], "doc": "Click at coordinates on desktop\n\nparam x\n\n:   horizontal coordinate on the windows to click\n\nparam y\n\n:   vertical coordinate on the windows to click\n\nparam ctype\n\n:   click type \"click\", \"right\" or \"double\", defaults to \"click\"\n\nparam delay\n\n:   delay in seconds after, default is no delay\n\nExample:\n\n```robotframework\nMouse Click Coords  x=450  y=100\nMouse Click Coords  x=300  y=300  ctype=right\nMouse Click Coords  x=450  y=100  delay=5.0\n```\n", "tags": [], "source": null, "shortdoc": "Click at coordinates on desktop", "lineno": 1079}, {"name": "Mouse Click Image", "args": [{"name": "template", "kind": "POSITIONAL_OR_NAMED", "repr": "template: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "off_x", "kind": "POSITIONAL_OR_NAMED", "repr": "off_x: int = 0", "required": true, "defaultValue": "0", "types": ["int"], "typedocs": []}, {"name": "off_y", "kind": "POSITIONAL_OR_NAMED", "repr": "off_y: int = 0", "required": true, "defaultValue": "0", "types": ["int"], "typedocs": []}, {"name": "ctype", "kind": "POSITIONAL_OR_NAMED", "repr": "ctype: str = click", "required": true, "defaultValue": "click", "types": ["str"], "typedocs": []}, {"name": "tolerance", "kind": "POSITIONAL_OR_NAMED", "repr": "tolerance: float | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Click at template image on desktop\n\nparam image\n\n:   image to click on desktop\n\nparam off_x\n\n:   horizontal offset from top left corner to click on\n\nparam off_y\n\n:   vertical offset from top left corner to click on\n\nparam ctype\n\n:   type of mouse click\n\nparam tolerance\n\n:   matching tolerance between 0 and 1\n\nExample:\n\n```robotframework\nMouse Click  image=myimage.png  off_x=10  off_y=10  ctype=right\nMouse Click  image=myimage.png  tolerance=0.8\n```\n", "tags": [], "source": null, "shortdoc": "Click at template image on desktop", "lineno": 1047}, {"name": "Open Application", "args": [{"name": "application", "kind": "POSITIONAL_OR_NAMED", "repr": "application: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Open application by dispatch method\n\nThis keyword is used to launch Microsoft applications like\nExcel, Word, Outlook and Powerpoint.\n\nparam application\n\n:   name of the application as str\n\nreturn\n\n:   application instance id\n\nExample:\n\n```robotframework\n${app1}    Open Application   Excel\n${app2}    Open Application   Word\n```\n", "tags": [], "source": null, "shortdoc": "Open application by dispatch method", "lineno": 364}, {"name": "Open Dialog", "args": [{"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "highlight", "kind": "POSITIONAL_OR_NAMED", "repr": "highlight: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout: int = 10", "required": true, "defaultValue": "10", "types": ["int"], "typedocs": []}, {"name": "existing_app", "kind": "POSITIONAL_OR_NAMED", "repr": "existing_app: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "wildcard", "kind": "POSITIONAL_OR_NAMED", "repr": "wildcard: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "parse_elements", "kind": "POSITIONAL_OR_NAMED", "repr": "parse_elements: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Open window by its title.\n\nparam windowtitle\n\n:   name of the window, defaults to active window if None\n\nparam highlight\n\n:   draw outline for window if True, default False\n\nparam timeout\n\n:   time to wait for dialog to appear\n\nparam existing_app\n\n:   set True if selecting window which library has already\n    accessed, default False\n\nparam wildcard\n\n:   set True for inclusive window title search, default False\n\nparam parse_elements\n\n:   set False to not to parse elements of the window,\n    default True\n\nExample:\n\n```robotframework\nOpen Dialog       Untitled - Notepad\nOpen Dialog       Untitled - Notepad   highlight=True   timeout=5\nOpen Dialog       Notepad   wildcard=True\n```\n", "tags": [], "source": null, "shortdoc": "Open window by its title.", "lineno": 691}, {"name": "Open Executable", "args": [{"name": "executable", "kind": "POSITIONAL_OR_NAMED", "repr": "executable: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "backend", "kind": "POSITIONAL_OR_NAMED", "repr": "backend: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "work_dir", "kind": "POSITIONAL_OR_NAMED", "repr": "work_dir: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "wildcard", "kind": "POSITIONAL_OR_NAMED", "repr": "wildcard: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Open Windows executable. Window title name is required\nto get handle on the application.\n\nparam executable\n\n:   name of the executable\n\nparam windowtitle\n\n:   name of the window\n\nparam backend\n\n:   set Windows backend, default None means using\n    library default value\n\nparam work_dir\n\n:   path to working directory, default None\n\nparam wildcard\n\n:   set True for inclusive window title search, default False\n\nreturn\n\n:   application instance id\n\nExample:\n\n```robotframework\n${app1}    Open Executable   calc.exe  Calculator\n${app2}    Open Executable   notepad.exe  Notepad   wildcard=True\n```\n", "tags": [], "source": null, "shortdoc": "Open Windows executable. Window title name is required to get handle on the application.", "lineno": 437}, {"name": "Open File", "args": [{"name": "filename", "kind": "POSITIONAL_OR_NAMED", "repr": "filename: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "wildcard", "kind": "POSITIONAL_OR_NAMED", "repr": "wildcard: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout: int = 10", "required": true, "defaultValue": "10", "types": ["int"], "typedocs": []}], "doc": "Open associated application when opening file\n\nKeyword Open Dialog is used if windowtitle is given.\n\nparam filename\n\n:   path to file\n\nparam windowtitle\n\n:   name of the window\n\nparam wildcard\n\n:   set True for inclusive window title search, default False\n\nparam timeout\n\n:   time to wait for dialog to appear\n\nreturn\n\n:   application id or None\n\nExample:\n\n```robotframework\n${app1}    Open File   /path/to/myfile.txt\n```\n", "tags": [], "source": null, "shortdoc": "Open associated application when opening file", "lineno": 393}, {"name": "Open From Search", "args": [{"name": "executable", "kind": "POSITIONAL_OR_NAMED", "repr": "executable: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout: int = 10", "required": true, "defaultValue": "10", "types": ["int"], "typedocs": []}, {"name": "wildcard", "kind": "POSITIONAL_OR_NAMED", "repr": "wildcard: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Open application using Windows search dialog.\nWindow title name is required to get handle on the application.\n\nparam executable\n\n:   name of the executable\n\nparam windowtitle\n\n:   name of the window\n\nparam timeout\n\n:   time to wait for dialog to appear\n\nparam wildcard\n\n:   set True for inclusive window title search, default False\n\nreturn\n\n:   application instance id\n\nExample:\n\n```robotframework\n${app1}    Open From Search  calculator  Calculator\n${app2}    Open From Search  notepad  Notepad  wildcard=True\n```\n", "tags": [], "source": null, "shortdoc": "Open application using Windows search dialog. Window title name is required to get handle on the application.", "lineno": 511}, {"name": "Open Using Run Dialog", "args": [{"name": "executable", "kind": "POSITIONAL_OR_NAMED", "repr": "executable: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout: int = 10", "required": true, "defaultValue": "10", "types": ["int"], "typedocs": []}, {"name": "wildcard", "kind": "POSITIONAL_OR_NAMED", "repr": "wildcard: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Open application using Windows run dialog.\nWindow title name is required to get handle on the application.\n\nparam executable\n\n:   name of the executable\n\nparam windowtitle\n\n:   name of the window\n\nparam timeout\n\n:   time to wait for dialog to appear\n\nparam wildcard\n\n:   set True for inclusive window title search, default False\n\nreturn\n\n:   application instance id\n\nExample:\n\n```robotframework\n${app1}    Open Using Run Dialog  notepad  Untitled - Notepad\n${app2}    Open Using Run Dialog  notepad  Notepad    wildcard=True\n```\n", "tags": [], "source": null, "shortdoc": "Open application using Windows run dialog. Window title name is required to get handle on the application.", "lineno": 477}, {"name": "Process Exists", "args": [{"name": "process_name", "kind": "POSITIONAL_OR_NAMED", "repr": "process_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "strict", "kind": "POSITIONAL_OR_NAMED", "repr": "strict: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Check if process exists by its name\n\nparam process_name\n\n:   search for this process\n\nparam strict\n\n:   defines how match is made, default True\n    which means that process name needs to be exact match\n    and False does inclusive matching\n\nreturn\n\n:   process instance or False\n\nExample:\n\n```robotframework\n${process}  Process Exists  calc\n${process}  Process Exists  calc  strict=False\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Check if process exists by its name", "lineno": 151}, {"name": "Process Id Exists", "args": [{"name": "pid", "kind": "POSITIONAL_OR_NAMED", "repr": "pid: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}], "doc": "Check if process exists by its id\n\nparam pid\n\n:   process identifier\n\nreturn\n\n:   process instance or False\n\nExample:\n\n```robotframework\n${process}  Process ID Exists  4567\nRun Keyword If   ${process}  Log  Process exists\n```\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Desktop\\OperatingSystem.py", "shortdoc": "Check if process exists by its id", "lineno": 177}, {"name": "Put System To Sleep", "args": [], "doc": "Put Windows into sleep mode\n\nExample:\n\n```robotframework\nPut System To Sleep\n```\n", "tags": [], "source": null, "shortdoc": "Put Windows into sleep mode", "lineno": 1746}, {"name": "Quit Application", "args": [{"name": "app_id", "kind": "POSITIONAL_OR_NAMED", "repr": "app_id: int = None", "required": true, "defaultValue": "None", "types": ["int"], "typedocs": []}, {"name": "send_keys", "kind": "POSITIONAL_OR_NAMED", "repr": "send_keys: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Quit an application by application id or\nactive application if app\\_id is None.\n\nparam app_id\n\n:   application_id, defaults to None\n\nparam send_keys\n\n:   if ALT+F4 should be used to quit, default False\n\nExample:\n\n```robotframework\n${app1}   Open Application   Excel\n${app2}   Open Application   Word\nQuit Application  ${app1}\n```\n", "tags": [], "source": null, "shortdoc": "Quit an application by application id or active application if app\\_id is None.", "lineno": 836}, {"name": "Refresh Window", "args": [], "doc": "Get controls and elements for current windows.\n\nShould be called always when window content changes on\nWindows desktop.\n\nreturn\n\n:   controls (list) and elements (list)\n", "tags": [], "source": null, "shortdoc": "Get controls and elements for current windows.", "lineno": 2019}, {"name": "Restore Dialog", "args": [{"name": "windowtitle", "kind": "POSITIONAL_OR_NAMED", "repr": "windowtitle: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Restore window by its title\n\nparam windowtitle\n\n:   name of the window, default None means that\n    active window is going to be restored\n\nExample:\n\n```robotframework\nOpen Using Run Dialog  notepad  Untitled - Notepad\nMinimize Dialog\nSleep             1s\nRestore Dialog\nSleep             1s\nRestore Dialog    Untitled - Notepad\n```\n", "tags": [], "source": null, "shortdoc": "Restore window by its title", "lineno": 638}, {"name": "Screenshot", "args": [{"name": "filename", "kind": "POSITIONAL_OR_NAMED", "repr": "filename: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "element", "kind": "POSITIONAL_OR_NAMED", "repr": "element: dict = None", "required": true, "defaultValue": "None", "types": ["dict"], "typedocs": []}, {"name": "ctrl", "kind": "POSITIONAL_OR_NAMED", "repr": "ctrl: Any = None", "required": true, "defaultValue": "None", "types": ["Any"], "typedocs": []}, {"name": "desktop", "kind": "POSITIONAL_OR_NAMED", "repr": "desktop: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "overwrite", "kind": "POSITIONAL_OR_NAMED", "repr": "overwrite: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Save screenshot into filename.\n\nparam filename\n\n:   name of the file\n\nparam element\n\n:   take element screenshot, defaults to None\n\nparam ctrl\n\n:   take control screenshot, defaults to None\n\nparam desktop\n\n:   take desktop screenshot if True, defaults to False\n\nparam overwrite\n\n:   overwrite existing image (deprecated, always True)\n\nExample:\n\n```robotframework\n@{element}   Find Element  CalculatorResults\nScreenshot   element.png   ${elements[0][0]}\nScreenshot   desktop.png   desktop=True\nScreenshot   desktop.png   desktop=True  overwrite=True\n```\n", "tags": [], "source": null, "shortdoc": "Save screenshot into filename.", "lineno": 1622}, {"name": "Send Keys", "args": [{"name": "keys", "kind": "POSITIONAL_OR_NAMED", "repr": "keys: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Send keys into active windows.\n\nparam keys\n\n:   list of keys to send\n\nExample:\n\n```robotframework\nOpen Executable  calc.exe  Calculator\nSend Keys        2{+}3{=}\n```\n", "tags": [], "source": null, "shortdoc": "Send keys into active windows.", "lineno": 917}, {"name": "Send Keys To Input", "args": [{"name": "keys_to_type", "kind": "POSITIONAL_OR_NAMED", "repr": "keys_to_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "with_enter", "kind": "POSITIONAL_OR_NAMED", "repr": "with_enter: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}, {"name": "send_delay", "kind": "POSITIONAL_OR_NAMED", "repr": "send_delay: float = 0.5", "required": true, "defaultValue": "0.5", "types": ["float"], "typedocs": []}, {"name": "enter_delay", "kind": "POSITIONAL_OR_NAMED", "repr": "enter_delay: float = 1.5", "required": true, "defaultValue": "1.5", "types": ["float"], "typedocs": []}], "doc": "Send keys to windows and add ENTER if with\\_enter is True\n\nAt the end of send_keys there is by default 0.5 second delay.\nAt the end of ENTER there is by default 1.5 second delay.\n\nparam keys_to_type\n\n:   keys to type into Windows\n\nparam with_enter\n\n:   send ENTER if with\\_enter is True\n\nparam send_delay\n\n:   delay after send_keys\n\nparam enter_delay\n\n:   delay after ENTER\n\nExample:\n\n```robotframework\n${txt}    Get Spaced String   My name is Bond, James Bond\nSend Keys To Input  ${txt}    with_enter=False\nSend Keys To Input  {ENTER}THE   send_delay=5.0  with_enter=False\nSend Keys To Input  {VK_SPACE}-{VK_SPACE}END   enter_delay=5.0\n```\n", "tags": [], "source": null, "shortdoc": "Send keys to windows and add ENTER if with\\_enter is True", "lineno": 578}, {"name": "Set Automation Speed", "args": [{"name": "speed", "kind": "POSITIONAL_OR_NAMED", "repr": "speed: Speed = DEFAULT", "required": true, "defaultValue": "DEFAULT", "types": ["Speed"], "typedocs": []}], "doc": "Set global automation timings\n\nparam speed\n\n:   possible values 'default', 'fast' or 'slow'\n", "tags": [], "source": null, "shortdoc": "Set global automation timings", "lineno": 2059}, {"name": "Set Windows Backend", "args": [{"name": "backend", "kind": "POSITIONAL_OR_NAMED", "repr": "backend: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Set Windows backend which is used to interact with Windows\napplications\n\nAllowed values defined by SUPPORTED\\_BACKENDS\n\nparam backend\n\n:   name of the backend to use\n\nExample:\n\n```robotframework\nSet Windows Backend   uia\nOpen Executable   calc.exe  Calculator\nSet Windows Backend   win32\nOpen Executable   calc.exe  Calculator\n```\n", "tags": [], "source": null, "shortdoc": "Set Windows backend which is used to interact with Windows applications", "lineno": 240}, {"name": "Switch To Application", "args": [{"name": "app_id", "kind": "POSITIONAL_OR_NAMED", "repr": "app_id: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}], "doc": "Switch to application by id.\n\nparam app_id\n\n:   application's id\n\nraises ValueError\n\n:   if application is not found by given id\n\nExample:\n\n```robotframework\n${app1}    Open Application   Excel\n${app2}    Open Application   Word\nSwitch To Application   ${app1}\n```\n", "tags": [], "source": null, "shortdoc": "Switch to application by id.", "lineno": 300}, {"name": "Type Into", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "keys", "kind": "POSITIONAL_OR_NAMED", "repr": "keys: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "empty_field", "kind": "POSITIONAL_OR_NAMED", "repr": "empty_field: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Type keys into element matched by given locator.\n\nparam locator\n\n:   element locator\n\nparam keys\n\n:   list of keys to type\n\nparam empty_field\n\n:   if field should be emptied before typing, default False\n\nExample:\n\n```robotframework\nOpen Executable  calc.exe  Calculator\nType Into        CalculatorResults  11\nType Into        CalculatorResults  22  empty_field=True\n```\n", "tags": [], "source": null, "shortdoc": "Type keys into element matched by given locator.", "lineno": 893}, {"name": "Type Keys", "args": [{"name": "keys", "kind": "POSITIONAL_OR_NAMED", "repr": "keys: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Type keys into active window element.\n\nparam keys\n\n:   list of keys to type\n\nExample:\n\n```robotframework\nOpen Executable  notepad.exe  Untitled - Notepad\nType Keys   My text\n```\n", "tags": [], "source": null, "shortdoc": "Type keys into active window element.", "lineno": 876}, {"name": "Wait For Element", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "use_refreshing", "kind": "POSITIONAL_OR_NAMED", "repr": "use_refreshing: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "search_criteria", "kind": "POSITIONAL_OR_NAMED", "repr": "search_criteria: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout: float = 30.0", "required": true, "defaultValue": "30.0", "types": ["float"], "typedocs": []}, {"name": "interval", "kind": "POSITIONAL_OR_NAMED", "repr": "interval: float = 2.0", "required": true, "defaultValue": "2.0", "types": ["float"], "typedocs": []}], "doc": "Wait for element to appear into the window.\n\nCan return 1 or more elements matching locator, or raises\nElementNotFoundError if element is not found within timeout.\n\nparam locator\n\n:   name of the locator\n\nparam use_refreshing\n\n:   wait for element(s) which are not there yet e.g. listbox\n    item or popups, default False\n\nparam search_criteria\n\n:   criteria by which element is matched\n\nparam timeout\n\n:   defines how long to wait for element to appear,\n    defaults to 30.0 seconds\n\nparam interval\n\n:   how often to poll for element,\n    defaults to 2.0 seconds (minimum is 0.5 seconds)\n\nExample:\n\n```robotframework\n@{elements}  Wait For Element  CalculatorResults\n@{elements}  Wait For Element  Results   timeout=10  interval=1.5\n```\n", "tags": [], "source": null, "shortdoc": "Wait for element to appear into the window.", "lineno": 1266}], "dataTypes": {}, "typedocs": []}