mtime:1741376690.5265088
{"name": "RPA.Salesforce", "doc": "Salesforce is a library for accessing Salesforce using REST API.\nThe library extends [simple-salesforce library](https://github.com/simple-salesforce/simple-salesforce).\n\nMore information available at [Salesforce REST API Developer Guide](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/intro_what_is_rest_api.htm).\n\n**Dataloader**\n\nThe keyword execute\\_dataloader\\_import can be used to mimic\n[Salesforce Dataloader](https://developer.salesforce.com/docs/atlas.en-us.dataLoader.meta/dataLoader/data_loader.htm) import behaviour.\n\ninput\\_object can be given in different formats. Below is an example where\ninput is in RPA.Table format in **method a** and list format in **method b**.\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Salesforce\nLibrary     RPA.Database\nTask Setup  Authorize Salesforce\n\n*** Tasks ***\n# Method a\n${orders}=        Database Query Result As Table\n...               SELECT * FROM incoming_orders\n${status}=        Execute Dataloader Insert\n...               ${orders}  ${mapping_dict}  Tilaus__c\n# Method b\n${status}=        Execute Dataloader Insert\n...               ${WORKDIR}${/}orders.json  ${mapping_dict}  Tilaus__c\n```\n\nExample file **orders.json**\n\n```json\n[\n    {\n        \"asiakas\": \"0015I000002jBLIQA2\"\n    },\n    {\n        \"asiakas\": \"0015I000002jBLDQA2\"\n    },\n]\n```\n\nmapping\\_object describes how the input data fields are mapped into Salesforce\nobject attributes. In the example, the mapping defines that asiakas attribute in the\ninput object is mapped into Tilaaja\\_\\_c attribute of Tilaus\\_\\_c custom Salesforce object.\n\n```json\n{\n    \"Tilaus__c\": {\n        \"asiakas\": \"Tilaaja__c\"\n    },\n}\n```\n\nObject type could be, for example, Tilaus\\_\\_c.\n\n**Salesforce object operations**\n\nFollowing operations can be used to manage Salesforce objects:\n\n* Get Salesforce Object By Id\n\n* Create Salesforce Object\n\n* Update Salesforce Object\n\n* Upsert Salesforce Object\n\n* Delete Salesforce Object\n\n* Get Salesforce Object Metadata\n\n* Describe Salesforce Object\n\nThere are two ways to set the Salesforce domain. You can set the domain at time of\nlibrary import or using the Set Domain keyword.\n\nThere are several ways to declare a domain at time of library import:\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Salesforce    sandbox=${TRUE}\n```\n\nOr using the domain to your Salesforce My domain:\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Salesforce    domain=\"robocorp\"\n```\n\nThe domain can also be set using the keyword Set Domain:\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Salesforce\n\n*** Tasks ***\n# Sets the domain for a sandbox environment\nSet Domain    sandbox\n\n# Sets the domain to a Salseforce My domain\nSet Domain    robocorp\n\n# Sets to domain to the default of 'login'\nSet Domain\n```\n\n**Examples**\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Salesforce\nTask Setup  Authorize Salesforce\n\n*** Variables ***\n${ACCOUNT_NOKIA}    0015I000002jBLDQA2\n\n*** Tasks ***\nChange account details in Salesforce\n    &{account}=      Get Salesforce Object By Id   Account  ${ACCOUNT_NOKIA}\n    &{update_obj}=   Create Dictionary   Name=Nokia Ltd  BillingStreet=Nokia bulevard 1\n    ${result}=       Update Salesforce Object  Account  ${ACCOUNT_NOKIA}  ${update_obj}\n\n*** Keywords ***\nAuthorize Salesforce\n    ${secrets}=     Get Secret   salesforce\n    Auth With Token\n    ...        username=${secrets}[USERNAME]\n    ...        password=${secrets}[PASSWORD]\n    ...        api_token=${secrets}[API_TOKEN]\n```\n\n**Python**\n\n```python\nimport pprint\nfrom RPA.Salesforce import Salesforce\nfrom RPA.Robocorp.Vault import FileSecrets\n\npp = pprint.PrettyPrinter(indent=4)\nfilesecrets = FileSecrets(\"secrets.json\")\nsecrets = filesecrets.get_secret(\"salesforce\")\n\nsf = Salesforce()\nsf.auth_with_token(\n    username=secrets[\"USERNAME\"],\n    password=secrets[\"PASSWORD\"],\n    api_token=secrets[\"API_TOKEN\"],\n)\nnokia_account_id = \"0015I000002jBLDQA2\"\naccount = sf.get_salesforce_object_by_id(\"Account\", nokia_account_id)\npp.pprint(account)\nbilling_information = {\n    \"BillingStreet\": \"Nokia Bulevard 1\",\n    \"BillingCity\": \"Espoo\",\n    \"BillingPostalCode\": \"01210\",\n    \"BillingCountry\": \"Finland\",\n}\nresult = sf.update_salesforce_object(\"Account\", nokia_account_id, billing_information)\nprint(f\"Update result: {result}\")\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\Salesforce.py", "lineno": 26, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "sandbox", "kind": "POSITIONAL_OR_NAMED", "repr": "sandbox: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "domain", "kind": "POSITIONAL_OR_NAMED", "repr": "domain: str = login", "required": true, "defaultValue": "login", "types": ["str"], "typedocs": []}], "doc": "Initialize self.  See help(type(self)) for accurate signature.\n", "tags": [], "source": null, "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.", "lineno": 204}], "keywords": [{"name": "Add Product Into Opportunity", "args": [{"name": "product_name", "kind": "POSITIONAL_OR_NAMED", "repr": "product_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "quantity", "kind": "POSITIONAL_OR_NAMED", "repr": "quantity: int", "required": true, "defaultValue": null, "types": ["int"], "typedocs": []}, {"name": "opportunity_id", "kind": "POSITIONAL_OR_NAMED", "repr": "opportunity_id: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "pricebook_name", "kind": "POSITIONAL_OR_NAMED", "repr": "pricebook_name: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}, {"name": "custom_total_price", "kind": "POSITIONAL_OR_NAMED", "repr": "custom_total_price: float = None", "required": true, "defaultValue": "None", "types": ["float"], "typedocs": []}], "doc": "Add Salesforce Product into Opportunity.\n\nparam product_name\n\n:   type of the product in the Pricelist\n\nparam quantity\n\n:   number of products to add\n\nparam opportunity_id\n\n:   identifier of Opportunity, default None\n\nparam pricebook_name\n\n:   name of the pricelist, default None\n\nparam custom_total_price\n\n:   price that overrides quantity and product price,\n    default None\n\nreturn\n\n:   True is operation is successful or False\n", "tags": [], "source": null, "shortdoc": "Add Salesforce Product into Opportunity.", "lineno": 566}, {"name": "Auth With Connected App", "args": [{"name": "username", "kind": "POSITIONAL_OR_NAMED", "repr": "username: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "password", "kind": "POSITIONAL_OR_NAMED", "repr": "password: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "api_token", "kind": "POSITIONAL_OR_NAMED", "repr": "api_token: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "consumer_key", "kind": "POSITIONAL_OR_NAMED", "repr": "consumer_key: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "consumer_secret", "kind": "POSITIONAL_OR_NAMED", "repr": "consumer_secret: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "embed_api_token", "kind": "POSITIONAL_OR_NAMED", "repr": "embed_api_token: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Authorize to Salesforce with security token, username,\npassword, connected app key, and connected app secret\ncreating instance.\n\nparam username\n\n:   Salesforce API username\n\nparam password\n\n:   Salesforce API password\n\nparam api_token\n\n:   Salesforce API security token\n\nparam consumer_key\n\n:   Salesforce connected app client ID\n\nparam consumer_secret\n\n:   Salesforce connected app client secret\n\nparam embed_api_token\n\n:   Embed API token to password (default: False)\n\n**Python**\n\n```python\nfrom RPA.Salesforce import Salesforce\nfrom RPA.Robocorp.Vault import Vault\n\nSF = Salesforce(domain=\"robocorp-testing-stuff.develop.my\")\nVAULT = Vault()\n\nsecrets = VAULT.get_secret(\"salesforce\")\nSF.auth_with_connected_app(\n    username=secrets[\"USERNAME\"],\n    password=secrets[\"PASSWORD\"],\n    api_token=secrets[\"API_TOKEN\"],\n    consumer_key=secrets[\"CONSUMER_KEY\"],\n    consumer_secret=secrets[\"CONSUMER_SECRET\"],\n)\n```\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary  RPA.Salesforce   domain=robocop-testing-stuff.develop.my\nLibrary  RPA.Robocorp.Vault\n\n*** Tasks ***\nAuthenticate to Salesforce using connected app\n    ${secrets}=  Get Secret  salesforce\n\n    Auth with connected app\n    ...  username=${secrets}[USERNAME]\n    ...  password=${secrets}[PASSWORD]\n    ...  api_token=${secrets}[API_TOKEN]\n    ...  consumer_key=${secrets}[CONSUMER_KEY]\n    ...  consumer_secret=${secrets}[CONSUMER_SECRET]\n```\n", "tags": [], "source": null, "shortdoc": "Authorize to Salesforce with security token, username, password, connected app key, and connected app secret creating instance.", "lineno": 268}, {"name": "Auth With Token", "args": [{"name": "username", "kind": "POSITIONAL_OR_NAMED", "repr": "username: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "password", "kind": "POSITIONAL_OR_NAMED", "repr": "password: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "api_token", "kind": "POSITIONAL_OR_NAMED", "repr": "api_token: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Authorize to Salesforce with security token, username\nand password creating instance.\n\nparam username\n\n:   Salesforce API username\n\nparam password\n\n:   Salesforce API password\n\nparam api_token\n\n:   Salesforce API security token\n", "tags": [], "source": null, "shortdoc": "Authorize to Salesforce with security token, username and password creating instance.", "lineno": 250}, {"name": "Create New Opportunity", "args": [{"name": "close_date", "kind": "POSITIONAL_OR_NAMED", "repr": "close_date: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "opportunity_name", "kind": "POSITIONAL_OR_NAMED", "repr": "opportunity_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "stage_name", "kind": "POSITIONAL_OR_NAMED", "repr": "stage_name: str = Closed Won", "required": true, "defaultValue": "Closed Won", "types": ["str"], "typedocs": []}, {"name": "account_name", "kind": "POSITIONAL_OR_NAMED", "repr": "account_name: str = None", "required": true, "defaultValue": "None", "types": ["str"], "typedocs": []}], "doc": "Create Salesforce Opportunity object.\n\nparam close_date\n\n:   closing date for the Opportunity, format 'YYYY-MM-DD'\n\nparam opportunity_name\n\n:   as string\n\nparam stage_name\n\n:   needs to be one of the defined stages,\n    defaults to \"Closed Won\"\n\nparam account_name\n\n:   by default uses previously set account, defaults to None\n\nreturn\n\n:   created opportunity or False\n", "tags": [], "source": null, "shortdoc": "Create Salesforce Opportunity object.", "lineno": 606}, {"name": "Create Salesforce Object", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_data", "kind": "POSITIONAL_OR_NAMED", "repr": "object_data: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}], "doc": "Create Salesforce object by type and data.\n\nparam object_type\n\n:   Salesforce object type\n\nparam object_data\n\n:   Salesforce object data\n\nraises SalesforceDataNotAnDictionary\n\n:   when object\\_data is not dictionary\n\nreturn\n\n:   resulting object as dictionary\n", "tags": [], "source": null, "shortdoc": "Create Salesforce object by type and data.", "lineno": 734}, {"name": "Delete Salesforce Object", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_id", "kind": "POSITIONAL_OR_NAMED", "repr": "object_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Delete Salesfoce object by type and id.\n\nparam object_type\n\n:   Salesforce object type\n\nparam object_id\n\n:   Salesforce object id\n\nreturn\n\n:   True if successful\n", "tags": [], "source": null, "shortdoc": "Delete Salesfoce object by type and id.", "lineno": 785}, {"name": "Describe Salesforce Object", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get Salesfoce object description by type.\n\nparam object_type\n\n:   Salesforce object type\n\nreturn\n\n:   object description as dictionary\n", "tags": [], "source": null, "shortdoc": "Get Salesfoce object description by type.", "lineno": 807}, {"name": "Execute Apex", "args": [{"name": "apex", "kind": "POSITIONAL_OR_NAMED", "repr": "apex: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "apex_data", "kind": "POSITIONAL_OR_NAMED", "repr": "apex_data: Dict = None", "required": true, "defaultValue": "None", "types": ["Dict"], "typedocs": []}, {"name": "apex_method", "kind": "POSITIONAL_OR_NAMED", "repr": "apex_method: str = POST", "required": true, "defaultValue": "POST", "types": ["str"], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Execute APEX operation.\n\nThe APEX classes can be added via Salesforce Developer console\n(from menu: File > New > Apex Class).\n\nPermissions for the APEX classes can be set via Salesforce Setup\n(Apex Classes -> Security).\n\nparam apex\n\n:   endpoint of the APEX operation\n\nparam apex_data\n\n:   data to be sent to the APEX operation\n\nparam apex_method\n\n:   operation method\n\nparam kwargs\n\n:   additional arguments to be passed to the APEX request\n\nreturn\n\n:   result of the APEX operation\n\n**Python**\n\n```python\nfrom RPA.Salesforce import Salesforce\n\nSF = Salesforce(domain=\"robocorp-testing-stuff.develop.my\")\n# authenticate to Salesforce\nSF.execute_apex(apex=\"MyClass\", apex_data={\"data\": \"value\"})\nresult = SF.execute_apex(\n    apex=\"getAccount/?id=0017R00002xmXB1QAM\",\n    apex_method=\"GET\")\n```\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary  RPA.Salesforce   domain=robocop-testing-stuff.develop.my\n\n*** Tasks ***\nExecuting APEX operations\n    # Authenticate to Salesforce\n\n    &{apex_data}=  Create Dictionary  data=value\n    ${result}=     Execute APEX  MyClass  apex_data=${apex_data}\n    ${result}=     Execute APEX\n    ...  apex=getAccount/?id=0017R00002xmXB1QAM\n    ...  apex_method=GET\n```\n", "tags": [], "source": null, "shortdoc": "Execute APEX operation.", "lineno": 363}, {"name": "Execute Dataloader Insert", "args": [{"name": "input_object", "kind": "POSITIONAL_OR_NAMED", "repr": "input_object: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}, {"name": "mapping_object", "kind": "POSITIONAL_OR_NAMED", "repr": "mapping_object: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}, {"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Keyword mimics Salesforce Dataloader 'insert' behaviour by taking\nin a input\\_object`representing dictionary of data to input into Salesforce,\na `mapping\\_object representing dictionary mapping the input keys into\nSalesforce keys, an object\\_type representing Salesforce object which\nDatahandler will handle with operation type.\n\nStores operation successes into Salesforce.dataloader\\_success array.\nStores operation errors into Salesforce.dataloader\\_errors.\n\nThese can be retrieved with keywords get\\_dataloader\\_success\\_table and\nget\\_dataloader\\_error\\_table which return corresponding data as\nRPA.Table.\n\nparam input_object\n\n:   filepath or list of dictionaries\n\nparam mapping_object\n\n:   filepath or dictionary\n\nparam object_type\n\n:   Salesforce object type\n\nreturn\n\n:   True if operation is successful\n", "tags": [], "source": null, "shortdoc": "Keyword mimics Salesforce Dataloader 'insert' behaviour by taking in a input\\_object`representing dictionary of data to input into Salesforce, a `mapping\\_object representing dictionary mapping the input keys into Salesforce keys, an object\\_type representing Salesforce object which Datahandler will handle with operation type.", "lineno": 671}, {"name": "Get Dataloader Error Table", "args": [], "doc": "Return Dataloader error entries as RPA.Table\n", "tags": [], "source": null, "shortdoc": "Return Dataloader error entries as RPA.Table", "lineno": 719}, {"name": "Get Dataloader Success Table", "args": [], "doc": "Return Dataloader success entries as RPA.Table\n", "tags": [], "source": null, "shortdoc": "Return Dataloader success entries as RPA.Table", "lineno": 715}, {"name": "Get Domain", "args": [], "doc": "Used to determine the current domain that has been set\n\nreturns\n\n:   string of the currently set domain\n", "tags": [], "source": null, "shortdoc": "Used to determine the current domain that has been set", "lineno": 243}, {"name": "Get Opportunity Id", "args": [{"name": "opportunity_name", "kind": "POSITIONAL_OR_NAMED", "repr": "opportunity_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get ID of an Opportunity linked to set account.\n\nparam opportunity_name\n\n:   opportunity to query\n\nreturn\n\n:   Id of the opportunity or False\n", "tags": [], "source": null, "shortdoc": "Get ID of an Opportunity linked to set account.", "lineno": 505}, {"name": "Get Pricebook Entries", "args": [], "doc": "Get all pricebook entries.\n\nreturn\n\n:   query result\n", "tags": [], "source": null, "shortdoc": "Get all pricebook entries.", "lineno": 498}, {"name": "Get Pricebook Id", "args": [{"name": "pricebook_name", "kind": "POSITIONAL_OR_NAMED", "repr": "pricebook_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get ID of a pricelist.\n\nReturns False if unique Id is not found.\n\nparam pricebook_name\n\n:   pricelist to query\n\nreturn\n\n:   Id of the pricelist or False\n", "tags": [], "source": null, "shortdoc": "Get ID of a pricelist.", "lineno": 523}, {"name": "Get Products In Pricelist", "args": [{"name": "pricebook_name", "kind": "POSITIONAL_OR_NAMED", "repr": "pricebook_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get all products in a pricelist.\n\nparam pricebook_name\n\n:   pricelist to query\n\nreturn\n\n:   products in dictionary\n", "tags": [], "source": null, "shortdoc": "Get all products in a pricelist.", "lineno": 538}, {"name": "Get Salesforce Object By Id", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_id", "kind": "POSITIONAL_OR_NAMED", "repr": "object_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get Salesforce object by id and type.\n\nparam object_type\n\n:   Salesforce object type\n\nparam object_id\n\n:   Salesforce object id\n\nreturn\n\n:   dictionary of object attributes\n", "tags": [], "source": null, "shortdoc": "Get Salesforce object by id and type.", "lineno": 723}, {"name": "Get Salesforce Object Metadata", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get Salesfoce object metadata by type.\n\nparam object_type\n\n:   Salesforce object type\n\nreturn\n\n:   object metadata as dictionary\n", "tags": [], "source": null, "shortdoc": "Get Salesfoce object metadata by type.", "lineno": 797}, {"name": "Read Dictionary From File", "args": [{"name": "mapping_file", "kind": "POSITIONAL_OR_NAMED", "repr": "mapping_file: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Read dictionary from file.\n\nparam mapping_file\n\n:   path to the file\n\nreturn\n\n:   file content as dictionary\n", "tags": [], "source": null, "shortdoc": "Read dictionary from file.", "lineno": 642}, {"name": "Salesforce Query", "args": [{"name": "sql_string", "kind": "POSITIONAL_OR_NAMED", "repr": "sql_string: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "as_table", "kind": "POSITIONAL_OR_NAMED", "repr": "as_table: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Perform SQL query and return result as dict or Table.\n\nparam sql_string\n\n:   SQL clause to perform.\n\nparam as_table\n\n:   Set to True if the result should be of RPA.Tables.Table\n    type. (dictionary is returned by default)\n\nreturns\n\n:   Result of the SQL query.\n", "tags": [], "source": null, "shortdoc": "Perform SQL query and return result as dict or Table.", "lineno": 449}, {"name": "Salesforce Query Result As Table", "args": [{"name": "sql_string", "kind": "POSITIONAL_OR_NAMED", "repr": "sql_string: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Shorthand for `Salesforce Query    ${sql_string}    as_table=${True}`.\n\nparam sql_string\n\n:   SQL clause to perform.\n\nreturns\n\n:   Result of the SQL query as RPA.Tables.Table.\n", "tags": [], "source": null, "shortdoc": "Shorthand for `Salesforce Query    ${sql_string}    as_table=${True}`.", "lineno": 466}, {"name": "Set Account", "args": [{"name": "account_name", "kind": "POSITIONAL_OR_NAMED", "repr": "account_name: str = ", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "account_id", "kind": "POSITIONAL_OR_NAMED", "repr": "account_id: str = ", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Set account name and id by giving either parameter.\n\nCan be used together with keywords:\n\n:   * get_opportunity_id\n\n    * create_new_opportunity\n\nparam account_name\n\n:   string, defaults to \"\"\n\nparam account_id\n\n:   string, defaults to \"\"\n\nreturn\n\n:   True if account was found from Salesforce, else False\n", "tags": [], "source": null, "shortdoc": "Set account name and id by giving either parameter.", "lineno": 474}, {"name": "Set Domain", "args": [{"name": "domain", "kind": "POSITIONAL_OR_NAMED", "repr": "domain: str = login", "required": true, "defaultValue": "login", "types": ["str"], "typedocs": []}], "doc": "Used to set the domain the Auth With Token keyword will use. To set\nthe domain to 'test' or if using a sandbox environment use \"sandbox\" as the\ndomain. If you have a Salsesforce My domain you may also input that name. If\nthe domain argument is not used the default domain is \"login\".\n\nparam domain\n\n:   \"sandbox\" or the name of the Salesforce My domain;\n    if no argument provided defaults to \"login\"\n", "tags": [], "source": null, "shortdoc": "Used to set the domain the Auth With Token keyword will use. To set the domain to 'test' or if using a sandbox environment use \"sandbox\" as the domain. If you have a Salsesforce My domain you may also input that name. If the domain argument is not used the default domain is \"login\".", "lineno": 231}, {"name": "Set Pricebook", "args": [{"name": "pricebook_name", "kind": "POSITIONAL_OR_NAMED", "repr": "pricebook_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Sets Pricebook to be used in Salesforce operations.\n\nparam pricebook_name\n\n:   pricelist to use\n", "tags": [], "source": null, "shortdoc": "Sets Pricebook to be used in Salesforce operations.", "lineno": 559}, {"name": "Update Salesforce Object", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_id", "kind": "POSITIONAL_OR_NAMED", "repr": "object_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_data", "kind": "POSITIONAL_OR_NAMED", "repr": "object_data: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}], "doc": "Update Salesfoce object by type, id and data.\n\nparam object_type\n\n:   Salesforce object type\n\nparam object_id\n\n:   Salesforce object id\n\nparam object_data\n\n:   Salesforce object data\n\nraises SalesforceDataNotAnDictionary\n\n:   when object\\_data is not dictionary\n\nreturn\n\n:   True if successful\n", "tags": [], "source": null, "shortdoc": "Update Salesfoce object by type, id and data.", "lineno": 749}, {"name": "Upsert Salesforce Object", "args": [{"name": "object_type", "kind": "POSITIONAL_OR_NAMED", "repr": "object_type: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_id", "kind": "POSITIONAL_OR_NAMED", "repr": "object_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "object_data", "kind": "POSITIONAL_OR_NAMED", "repr": "object_data: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}], "doc": "Upsert Salesfoce object by type, id and data.\n\nparam object_type\n\n:   Salesforce object type\n\nparam object_id\n\n:   Salesforce object id\n\nparam object_data\n\n:   Salesforce object data\n\nraises SalesforceDataNotAnDictionary\n\n:   when object\\_data is not dictionary\n\nreturn\n\n:   True if successful\n", "tags": [], "source": null, "shortdoc": "Upsert Salesfoce object by type, id and data.", "lineno": 767}], "dataTypes": {}, "typedocs": []}