mtime:1741376701.6524787
{"name": "RPA.SAP", "doc": "This library wraps the upstream [SapGuiLibrary](https://frankvanderkuur.github.io/SapGuiLibrary.html).\n\n\nThe SapGuiLibrary is a library that enables users to create tests for the Sap Gui application\n\n\nThe library uses the Sap Scripting Engine, therefore Scripting must be enabled in Sap in order for this library to work.\n\n\n## Opening a connection / Before running tests\n\nFirst of all, you have to **make sure the Sap Logon Pad is started**. You can automate this process by using the AutoIT library or the Process Library.\n\n\nAfter the Sap Login Pad is started, you can connect to the Sap Session using the keyword `connect to session`.\n\n\nIf you have a successful connection you can use `Open Connection` to open a new connection from the Sap Logon Pad or `Connect To Existing Connection` to connect to a connection that is already open.\n\n\n## Locating or specifying elements\n\nYou need to specify elements starting from the window ID, for example, wnd[0]/tbar[1]/btn[8]. In some cases the SAP ID contains backslashes. Make sure you escape these backslashes by adding another backslash in front of it.\n\n\n## Screenshots (on error)\n\nThe SapGUILibrary offers an option for automatic screenshots on error. Default this option is enabled, use keyword `disable screenshots on error` to skip the screenshot functionality. Alternatively, this option can be set at import.\n\n", "version": "1.1", "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\RPA\\SAP.py", "lineno": 27, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sets default variables for the library\n\n", "tags": [], "source": null, "shortdoc": "Sets default variables for the library", "lineno": 36}], "keywords": [{"name": "Click Element", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Performs a single click on a given element. Used only for buttons, tabs and menu items.\n\n\nIn case you want to change a value of an element like checkboxes of selecting an option in dropdown lists, use `select checkbox` or `select from list by label` instead.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Performs a single click on a given element. Used only for buttons, tabs and menu items.", "lineno": 56}, {"name": "Click Toolbar Button", "args": [{"name": "table_id", "kind": "POSITIONAL_OR_NAMED", "repr": "table_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "button_id", "kind": "POSITIONAL_OR_NAMED", "repr": "button_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Clicks a button of a toolbar within a GridView 'table_id' which is contained within a shell object. Use the Scripting tracker recorder to find the 'button_id' of the button to click\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Clicks a button of a toolbar within a GridView 'table_id' which is contained within a shell object. Use the Scripting tracker recorder to find the 'button_id' of the button to click", "lineno": 76}, {"name": "Connect To Existing Connection", "args": [{"name": "connection_name", "kind": "POSITIONAL_OR_NAMED", "repr": "connection_name", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Connects to an open connection. If the connection matches the given connection_name, the session is connected to this connection.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Connects to an open connection. If the connection matches the given connection_name, the session is connected to this connection.", "lineno": 93}, {"name": "Connect To Session", "args": [{"name": "explicit_wait", "kind": "POSITIONAL_OR_NAMED", "repr": "explicit_wait=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Connects to an open session SAP.\n\n\nSee `Opening a connection / Before running tests` for details about requirements before connecting to a session.\n\n\nOptionally `set explicit wait` can be used to set the explicit wait time.\n\n\n**Examples**:\n\n\n|  |  |\n| :--- | :--- |\n| **Keyword** | **Attributes** |\n| connect to session |  |\n| connect to session | 3 |\n| connect to session | explicit_wait=500ms |\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Connects to an open session SAP.", "lineno": 105}, {"name": "Disable Screenshots On Error", "args": [], "doc": "Disables automatic screenshots on error.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Disables automatic screenshots on error.", "lineno": 143}, {"name": "Doubleclick Element", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "item_id", "kind": "POSITIONAL_OR_NAMED", "repr": "item_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "column_id", "kind": "POSITIONAL_OR_NAMED", "repr": "column_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Performs a double-click on a given element. Used only for shell objects.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Performs a double-click on a given element. Used only for shell objects.", "lineno": 148}, {"name": "Element Should Be Present", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "message", "kind": "POSITIONAL_OR_NAMED", "repr": "message=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Checks whether an element is present on the screen.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Checks whether an element is present on the screen.", "lineno": 162}, {"name": "Element Value Should Be", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "expected_value", "kind": "POSITIONAL_OR_NAMED", "repr": "expected_value", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "message", "kind": "POSITIONAL_OR_NAMED", "repr": "message=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Checks whether the element value is the same as the expected value. The possible expected values depend on the type of element (see usage).\n\n\nUsage:\n\n\n|  |  |\n| :--- | :--- |\n| **Element type** | **possible values** |\n| textfield | text |\n| label | text |\n| checkbox | checked / unchecked |\n| radiobutton | checked / unchecked |\n| combobox | text of the option to be expected |\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Checks whether the element value is the same as the expected value. The possible expected values depend on the type of element (see usage).", "lineno": 173}, {"name": "Element Value Should Contain", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "expected_value", "kind": "POSITIONAL_OR_NAMED", "repr": "expected_value", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "message", "kind": "POSITIONAL_OR_NAMED", "repr": "message=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Checks whether the element value contains the expected value. The possible expected values depend on the type of element (see usage).\n\n\nUsage:\n\n\n|  |  |\n| :--- | :--- |\n| **Element type** | **possible values** |\n| textfield | text |\n| label | text |\n| combobox | text of the option to be expected |\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Checks whether the element value contains the expected value. The possible expected values depend on the type of element (see usage).", "lineno": 235}, {"name": "Enable Screenshots On Error", "args": [], "doc": "Enables automatic screenshots on error.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Enables automatic screenshots on error.", "lineno": 270}, {"name": "Focus And Click", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "wait_time", "kind": "POSITIONAL_OR_NAMED", "repr": "wait_time: float | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set focus into the element and click it.\n\n\nNote. The default library wait time can be adjusted using `Set Explicit Wait` keyword. Library's `explicit_wait` will be used if `wait_time` parameter is not set.\n\n\n:param element_id: locator for the element :param wait_time: the wait time after the action\n\n", "tags": [], "source": null, "shortdoc": "Set focus into the element and click it.", "lineno": 59}, {"name": "Focus And Input Text", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "wait_time", "kind": "POSITIONAL_OR_NAMED", "repr": "wait_time: float | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set focus into the element and input text into it.\n\n\nNote. The default library wait time can be adjusted using `Set Explicit Wait` keyword. Library's `explicit_wait` will be used if `wait_time` parameter is not set.\n\n\n:param element_id: locator for the element :param text: text to be inputted :param wait_time: the wait time after the action\n\n", "tags": [], "source": null, "shortdoc": "Set focus into the element and input text into it.", "lineno": 75}, {"name": "Generic Click Element", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "click_type", "kind": "POSITIONAL_OR_NAMED", "repr": "click_type=press", "required": true, "defaultValue": "press", "types": [], "typedocs": []}], "doc": "Performs a single click on a given element.\n\n\nDiffers from `Click Element` keyword so that element type is ignored, instead `click_type` (either `press` or `select`) is performed on the element if possible.\n\n\nIn case you want to change a value of an element like checkboxes of selecting an option in dropdown lists, use `select checkbox` or `select from list by label` instead.\n\n\n:param element_id: locator for the element :param click_type: either `press` (default) or `select`\n\n", "tags": [], "source": null, "shortdoc": "Performs a single click on a given element.", "lineno": 150}, {"name": "Generic Input Password", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "password", "kind": "POSITIONAL_OR_NAMED", "repr": "password", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Inserts the given password into the text field identified by locator.\n\n\nThis keyword does NOT depend on the type of the element. Will set password to the element's 'text' attribute if possible.\n\n\nThe password is not recorded in the log.\n\n\n:param element_id: locator for the element :param password: password to be inputted\n\n", "tags": [], "source": null, "shortdoc": "Inserts the given password into the text field identified by locator.", "lineno": 94}, {"name": "Generic Input Text", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Inserts the given text into the text field identified by locator. Use keyword `input password` to insert a password in a text field.\n\n\nThis keyword does NOT depend on the type of the element. Will set text to the element's 'text' attribute if possible.\n\n\n:param element_id: locator for the element :param text: text to be inputted\n\n", "tags": [], "source": null, "shortdoc": "Inserts the given text into the text field identified by locator. Use keyword `input password` to insert a password in a text field.", "lineno": 107}, {"name": "Get Cell Value", "args": [{"name": "table_id", "kind": "POSITIONAL_OR_NAMED", "repr": "table_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "row_num", "kind": "POSITIONAL_OR_NAMED", "repr": "row_num", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "col_id", "kind": "POSITIONAL_OR_NAMED", "repr": "col_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Returns the cell value for the specified cell.\n\n\n:param table_id: locator for the table element :param row_num: table row number :param col_id: table cell id :return: text in the specified cell\n\n", "tags": [], "source": null, "shortdoc": "Returns the cell value for the specified cell.", "lineno": 179}, {"name": "Get Element Location", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Returns the Sap element location for the given element.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Returns the Sap element location for the given element.", "lineno": 288}, {"name": "Get Element Type", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Returns the Sap element type for the given element.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Returns the Sap element type for the given element.", "lineno": 296}, {"name": "Get Element Type Of Object", "args": [{"name": "element", "kind": "POSITIONAL_OR_NAMED", "repr": "element", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Returns the Sap element type for the given element.\n\n\n:param element: SAP element :return: type of the SAP element\n\n", "tags": [], "source": null, "shortdoc": "Returns the Sap element type for the given element.", "lineno": 119}, {"name": "Get Row Count", "args": [{"name": "table_id", "kind": "POSITIONAL_OR_NAMED", "repr": "table_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Returns the number of rows found in the specified table.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Returns the number of rows found in the specified table.", "lineno": 307}, {"name": "Get Scroll Position", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Returns the scroll position of the scrollbar of an element 'element_id' that is contained within a shell object.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Returns the scroll position of the scrollbar of an element 'element_id' that is contained within a shell object.", "lineno": 314}, {"name": "Get Statusbar Type", "args": [{"name": "window", "kind": "POSITIONAL_OR_NAMED", "repr": "window: str | None = wnd[0]", "required": true, "defaultValue": "wnd[0]", "types": ["Union"], "typedocs": []}], "doc": "Retrieves the messageType in the statusbar the given window.\n\n\nTakes screenshot on error.\n\n\n:param window: locator for the statusbar, default 'wnd[0]' :return: messageType of the /sbar element or empty string\n\n", "tags": [], "source": null, "shortdoc": "Retrieves the messageType in the statusbar the given window.", "lineno": 43}, {"name": "Get Value", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Gets the value of the given element. The possible return values depend on the type of element (see Return values).\n\n\nReturn values:\n\n\n|  |  |\n| :--- | :--- |\n| **Element type** | **Return values** |\n| textfield | text |\n| label | text |\n| checkbox | checked / unchecked |\n| radiobutton | checked / unchecked |\n| combobox | text of the selected option |\n| guibutton | text |\n| guititlebar | text |\n| guistatusbar | text |\n| guitab | text |\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Gets the value of the given element. The possible return values depend on the type of element (see Return values).", "lineno": 321}, {"name": "Get Window Title", "args": [{"name": "locator", "kind": "POSITIONAL_OR_NAMED", "repr": "locator", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Retrieves the window title of the given window.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Retrieves the window title of the given window.", "lineno": 369}, {"name": "Input Password", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "password", "kind": "POSITIONAL_OR_NAMED", "repr": "password", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Inserts the given password into the text field identified by locator. The password is not recorded in the log.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Inserts the given password into the text field identified by locator. The password is not recorded in the log.", "lineno": 382}, {"name": "Input Text", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Inserts the given text into the text field identified by locator. Use keyword `input password` to insert a password in a text field.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Inserts the given text into the text field identified by locator. Use keyword `input password` to insert a password in a text field.", "lineno": 399}, {"name": "Maximize Window", "args": [{"name": "window", "kind": "POSITIONAL_OR_NAMED", "repr": "window=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Maximizes the SapGui window.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Maximizes the SapGui window.", "lineno": 416}, {"name": "Open Connection", "args": [{"name": "connection_name", "kind": "POSITIONAL_OR_NAMED", "repr": "connection_name", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.", "lineno": 430}, {"name": "Press F1", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Calls the PressF1 function on the passed element id. The element can be a textfield or a GridView inside a shell.\n\n\n:param element_id: id of the SAP element\n\n", "tags": [], "source": null, "shortdoc": "Calls the PressF1 function on the passed element id. The element can be a textfield or a GridView inside a shell.", "lineno": 197}, {"name": "Press F4", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Calls the PressF4 function on the passed element id. The element can be a textfield or a GridView inside a shell.\n\n\n:param element_id: id of the SAP element\n\n", "tags": [], "source": null, "shortdoc": "Calls the PressF4 function on the passed element id. The element can be a textfield or a GridView inside a shell.", "lineno": 210}, {"name": "Run Transaction", "args": [{"name": "transaction", "kind": "POSITIONAL_OR_NAMED", "repr": "transaction", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Runs a Sap transaction. An error is given when an unknown transaction is specified.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Runs a Sap transaction. An error is given when an unknown transaction is specified.", "lineno": 449}, {"name": "Scroll", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "position", "kind": "POSITIONAL_OR_NAMED", "repr": "position", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Scrolls the scrollbar of an element 'element_id' that is contained within a shell object. 'Position' is the number of rows to scroll.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Scrolls the scrollbar of an element 'element_id' that is contained within a shell object. 'Position' is the number of rows to scroll.", "lineno": 467}, {"name": "Select Checkbox", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Selects checkbox identified by locator. Does nothing if the checkbox is already selected.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects checkbox identified by locator. Does nothing if the checkbox is already selected.", "lineno": 475}, {"name": "Select Context Menu Item", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "menu_or_button_id", "kind": "POSITIONAL_OR_NAMED", "repr": "menu_or_button_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "item_id", "kind": "POSITIONAL_OR_NAMED", "repr": "item_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Selects an item from the context menu by clicking a button or right-clicking in the node context menu.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects an item from the context menu by clicking a button or right-clicking in the node context menu.", "lineno": 488}, {"name": "Select From List By Label", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "value", "kind": "POSITIONAL_OR_NAMED", "repr": "value", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Selects the specified option from the selection list.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects the specified option from the selection list.", "lineno": 507}, {"name": "Select Node", "args": [{"name": "tree_id", "kind": "POSITIONAL_OR_NAMED", "repr": "tree_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "node_id", "kind": "POSITIONAL_OR_NAMED", "repr": "node_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "expand", "kind": "POSITIONAL_OR_NAMED", "repr": "expand=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}], "doc": "Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.\n\n\nUse the Scripting tracker recorder to find the 'node_id' of the node. Expand can be set to True to expand the node. If the node cannot be expanded, no error is given.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.", "lineno": 519}, {"name": "Select Node Link", "args": [{"name": "tree_id", "kind": "POSITIONAL_OR_NAMED", "repr": "tree_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "link_id1", "kind": "POSITIONAL_OR_NAMED", "repr": "link_id1", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "link_id2", "kind": "POSITIONAL_OR_NAMED", "repr": "link_id2", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Selects a link of a TableTreeControl 'tree_id' which is contained within a shell object.\n\n\nUse the Scripting tracker recorder to find the 'link_id1' and 'link_id2' of the link to select.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects a link of a TableTreeControl 'tree_id' which is contained within a shell object.", "lineno": 535}, {"name": "Select Radio Button", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sets radio button to the specified value.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Sets radio button to the specified value.", "lineno": 545}, {"name": "Select Table Column", "args": [{"name": "table_id", "kind": "POSITIONAL_OR_NAMED", "repr": "table_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "column_id", "kind": "POSITIONAL_OR_NAMED", "repr": "column_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Selects an entire column of a GridView 'table_id' which is contained within a shell object.\n\n\nUse the Scripting tracker recorder to find the 'column_id' of the column to select.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects an entire column of a GridView 'table_id' which is contained within a shell object.", "lineno": 557}, {"name": "Select Table Row", "args": [{"name": "table_id", "kind": "POSITIONAL_OR_NAMED", "repr": "table_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "row_num", "kind": "POSITIONAL_OR_NAMED", "repr": "row_num", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id' which is contained within a shell object. The row is an index to select the row, starting from 0.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id' which is contained within a shell object. The row is an index to select the row, starting from 0.", "lineno": 571}, {"name": "Send Vkey", "args": [{"name": "vkey_id", "kind": "POSITIONAL_OR_NAMED", "repr": "vkey_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "window", "kind": "POSITIONAL_OR_NAMED", "repr": "window=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Sends a SAP virtual key combination to the window, not into an element. If you want to send a value to a text field, use `input text` instead.\n\n\nTo send a vkey, you can either use te **VKey ID** or the **Key combination**.\n\n\nSap Virtual Keys (on Windows)\n\n\n|  |  |  |  |  |  |\n| :--- | :--- | :--- | :--- | :--- | :--- |\n| **VKey ID** | **Key combination** | **VKey ID** | **Key combination** | **VKey ID** | **Key combination** |\n| **0** | Enter | **26** | Ctrl + F2 | **72** | Ctrl + A |\n| **1** | F1 | **27** | Ctrl + F3 | **73** | Ctrl + D |\n| **2** | F2 | **28** | Ctrl + F4 | **74** | Ctrl + N |\n| **3** | F3 | **29** | Ctrl + F5 | **75** | Ctrl + O |\n| **4** | F4 | **30** | Ctrl + F6 | **76** | Shift + Del |\n| **5** | F5 | **31** | Ctrl + F7 | **77** | Ctrl + Ins |\n| **6** | F6 | **32** | Ctrl + F8 | **78** | Shift + Ins |\n| **7** | F7 | **33** | Ctrl + F9 | **79** | Alt + Backspace |\n| **8** | F8 | **34** | Ctrl + F10 | **80** | Ctrl + Page Up |\n| **9** | F9 | **35** | Ctrl + F11 | **81** | Page Up |\n| **10** | F10 | **36** | Ctrl + F12 | **82** | Page Down |\n| **11** | F11 or Ctrl + S | **37** | Ctrl + Shift + F1 | **83** | Ctrl + Page Down |\n| **12** | F12 or ESC | **38** | Ctrl + Shift + F2 | **84** | Ctrl + G |\n| **14** | Shift + F2 | **39** | Ctrl + Shift + F3 | **85** | Ctrl + R |\n| **15** | Shift + F3 | **40** | Ctrl + Shift + F4 | **86** | Ctrl + P |\n| **16** | Shift + F4 | **41** | Ctrl + Shift + F5 | **87** | Ctrl + B |\n| **17** | Shift + F5 | **42** | Ctrl + Shift + F6 | **88** | Ctrl + K |\n| **18** | Shift + F6 | **43** | Ctrl + Shift + F7 | **89** | Ctrl + T |\n| **19** | Shift + F7 | **44** | Ctrl + Shift + F8 | **90** | Ctrl + Y |\n| **20** | Shift + F8 | **45** | Ctrl + Shift + F9 | **91** | Ctrl + X |\n| **21** | Shift + F9 | **46** | Ctrl + Shift + F10 | **92** | Ctrl + C |\n| **22** | Ctrl + Shift + 0 | **47** | Ctrl + Shift + F11 | **93** | Ctrl + V |\n| **23** | Shift + F11 | **48** | Ctrl + Shift + F12 | **94** | Shift + F10 |\n| **24** | Shift + F12 | **70** | Ctrl + E | **97** | Ctrl + \\# |\n| **25** | Ctrl + F1 | **71** | Ctrl + F |  |  |\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| **Keyword** | **Attributes** |  |\n| send_vkey | 8 |  |\n| send_vkey | Ctrl + Shift + F1 |  |\n| send_vkey | Ctrl + F7 | window=1 |\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Sends a SAP virtual key combination to the window, not into an element. If you want to send a value to a text field, use `input text` instead.", "lineno": 588}, {"name": "Set Cell Value", "args": [{"name": "table_id", "kind": "POSITIONAL_OR_NAMED", "repr": "table_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "row_num", "kind": "POSITIONAL_OR_NAMED", "repr": "row_num", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "col_id", "kind": "POSITIONAL_OR_NAMED", "repr": "col_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sets the cell value for the specified cell of a GridView 'table_id' which is contained within a shell object.\n\n\nUse the Scripting tracker recorder to find the 'col_id' of the cell to set.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Sets the cell value for the specified cell of a GridView 'table_id' which is contained within a shell object.", "lineno": 669}, {"name": "Set Explicit Wait", "args": [{"name": "speed", "kind": "POSITIONAL_OR_NAMED", "repr": "speed", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sets the delay time that is waited after each SapGui keyword.\n\n\nThe value can be given as a number that is considered to be seconds or as a human-readable string like 1 second or 700 ms.\n\n\nThis functionality is designed to be used for demonstration and debugging purposes. It is not advised to use this keyword to wait for an element to appear or function to finish.\n\n\n**Possible time formats:**\n\n\n|  |  |\n| :--- | :--- |\n| miliseconds | milliseconds, millisecond, millis, ms |\n| seconds | seconds, second, secs, sec, s |\n| minutes | minutes, minute, mins, min, m |\n\n\n**Example:**\n\n\n|  |  |\n| :--- | :--- |\n| **Keyword** | **Attributes** |\n| Set explicit wait | 1 |\n| Set explicit wait | 3 seconds |\n| Set explicit wait | 500 ms |\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Sets the delay time that is waited after each SapGui keyword.", "lineno": 685}, {"name": "Set Focus", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sets the focus to the given element.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Sets the focus to the given element.", "lineno": 739}, {"name": "Take Screenshot", "args": [{"name": "screenshot_name", "kind": "POSITIONAL_OR_NAMED", "repr": "screenshot_name=sap-screenshot", "required": true, "defaultValue": "sap-screenshot", "types": [], "typedocs": []}], "doc": "Takes a screenshot, only if 'screenshots on error' has been enabled, either at import of with keyword `enable screenshots on error`.\n\n\nThis keyword uses Robots' internal `Screenshot` library.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Takes a screenshot, only if 'screenshots on error' has been enabled, either at import of with keyword `enable screenshots on error`.", "lineno": 748}, {"name": "Unselect Checkbox", "args": [{"name": "element_id", "kind": "POSITIONAL_OR_NAMED", "repr": "element_id", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Removes selection of checkbox identified by locator. Does nothing if the checkbox is not selected.\n\n", "tags": [], "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\SapGuiLibrary\\SapGuiLibrary.py", "shortdoc": "Removes selection of checkbox identified by locator. Does nothing if the checkbox is not selected.", "lineno": 757}], "dataTypes": {}, "typedocs": []}