mtime:1744200504.9642768
{"name": "RPA.Images", "doc": "Images is a library for general image manipulation.\nFor image-based desktop automation, use the `RPA.Desktop` library.\n\n**Coordinates**\n\nThe coordinates used in the library are pairs of x and y values that\nrepresent pixels. The upper left corner of the image or screen\nis (0, 0). The x-coordinate increases towards the right, and the y-coordinate\nincreases towards the bottom.\n\nRegions are represented as tuples of (left, top, right, bottom). For example,\na 400 by 200-pixel region in the upper left corner would be (0, 0, 400, 200).\n\n**Template matching**\n\nTemplate matching refers to an operation where the (potential) location of\na smaller image is searched from a larger image. It can be used for verifying\ncertain conditions or locating UI elements for desktop or web automation.\n\n**Requirements**\n\nThe default installation depends on [Pillow](https://python-pillow.org/)\nlibrary, which is used for general image manipulation operations.\n\nFor more robust and faster template matching, the library can use a combination\nof [NumPy](https://numpy.org/) and [OpenCV](https://opencv.org/).\nThey can be installed by opting in to the recognition dependency:\n\n`pip install rpaframework rpaframework-recognition`\n\n**Examples**\n\n**Robot Framework**\n\nThe Images library can be imported and used directly in Robot Framework,\nfor instance, for capturing screenshots or verifying something on the screen.\n\nDesktop automation based on images should be done using the corresponding\ndesktop library, i.e. `RPA.Desktop`.\n\n```robotframework\n*** Settings ***\nLibrary    RPA.Images\n\n*** Keywords ***\nShould show success\n    [Documentation]    Raises ImageNotFoundError if success image is not on screen\n    Find template on screen    ${CURDIR}${/}success.png\n\nSave screenshot to results\n    [Documentation]    Saves screenshot of desktop with unique name\n    ${timestamp}=      Get current date    result_format=%H%M%S\n    Take screenshot    filename=${OUTPUT_DIR}${/}desktop_${timestamp}.png\n```\n\n**Python**\n\n```python\nfrom RPA.Images import Images\n\ndef draw_matches_on_image(source, template):\n    matches = lib.find_template_in_image(source, template)\n    for match in matches:\n        lib.show_region_in_image(source, match)\n\n    source.save(\"matches.png\")\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\RPA\\Images.py", "lineno": 68, "tags": [], "inits": [], "keywords": [{"name": "Crop Image", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "filename", "kind": "POSITIONAL_OR_NAMED", "repr": "filename=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Crop an existing image.\n\nparam image\n\n:   Image to crop\n\nparam region\n\n:   Region to crop image to\n\nparam filename\n\n:   Save cropped image to filename\n", "tags": [], "source": null, "shortdoc": "Crop an existing image.", "lineno": 145}, {"name": "Find Template In Image", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "template", "kind": "POSITIONAL_OR_NAMED", "repr": "template", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "limit", "kind": "POSITIONAL_OR_NAMED", "repr": "limit=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "tolerance", "kind": "POSITIONAL_OR_NAMED", "repr": "tolerance=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Attempt to find the template from the given image.\n\nparam image\n\n:   Path to image or Image instance, used to search from\n\nparam template\n\n:   Path to image or Image instance, used to search with\n\nparam limit\n\n:   Limit returned results to maximum of limit.\n\nparam region\n\n:   Area to search from. Can speed up search significantly.\n\nparam tolerance\n\n:   Tolerance for matching, value between 0.1 and 1.0\n\nreturn\n\n:   List of matching regions\n\nraises ImageNotFoundError\n\n:   No match was found\n\nraises ValueError\n\n:   Template is larger than search region\n", "tags": [], "source": null, "shortdoc": "Attempt to find the template from the given image.", "lineno": 163}, {"name": "Get Pixel Color In Image", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "point", "kind": "POSITIONAL_OR_NAMED", "repr": "point", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Get the RGB value of a pixel in the image.\n\nparam image\n\n:   image to get pixel from\n\nparam point\n\n:   coordinates for pixel or Point object\n\nreturn\n\n:   RGB value of pixel in image\n", "tags": [], "source": null, "shortdoc": "Get the RGB value of a pixel in the image.", "lineno": 227}, {"name": "Show Region In Image", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "color", "kind": "POSITIONAL_OR_NAMED", "repr": "color=red", "required": true, "defaultValue": "red", "types": [], "typedocs": []}, {"name": "width", "kind": "POSITIONAL_OR_NAMED", "repr": "width=5", "required": true, "defaultValue": "5", "types": [], "typedocs": []}], "doc": "Draw a rectangle onto the image around the given region.\n\nparam image\n\n:   image to draw onto\n\nparam region\n\n:   coordinates for region or Region object\n\nparam color\n\n:   color of rectangle\n\nparam width\n\n:   line width of rectangle\n\nreturn\n\n:   Image of the selected region\n", "tags": [], "source": null, "shortdoc": "Draw a rectangle onto the image around the given region.", "lineno": 211}], "dataTypes": {}, "typedocs": []}