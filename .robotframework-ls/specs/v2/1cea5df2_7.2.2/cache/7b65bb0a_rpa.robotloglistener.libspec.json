mtime:1744200509.1185334
{"name": "RPA.RobotLogListener", "doc": "RobotLogListener is a library for controlling logging during\na Robot Framework execution using the listener API.\n\n**About keyword parameters**\n\nParameters names and keywords for keywords Mute Run On Failure and Register Protected Keywords\ndo not need to be full names of keywords, ie. all keywords matching even partially will be affected.\nRun Keyword would match all BuiltIn library keywords (17 keywords in RF 3.2.1) and of course all\nRun Keyword named keywords in any resource and/or library file which are imported would be matched also.\n\n**Mute Run On Failure**\n\nThis keyword is to be used specifically with RPA.Browser.Selenium library, which extends\nSeleniumLibrary.  Normally most of the SeleniumLibrary keywords execute run\\_on\\_failure\nbehaviour, which can be set at library initialization. By default this behaviour is running\nCapture Page Screenshot keyword on failure.\n\nIn the example task Check the official website below the keyword Run Keyword is muted and when\nit runs the keyword Element Should Be Visible then those failures do not create page screenshots\ninto log file.\n\nIt is also possible to change default failure behaviour by giving parameter\noptional\\_keyword\\_to\\_run for Mute Run On Failure, see task Check the official website with error log.\nThis optional keyword would be then executed on failure. Due to the underlying SeleniumLibrary\nimplementation this keyword can't have arguments.\n\nExample of using Mute Run On Failure without and with optional keyword to run.\n\n```robotframework\n*** Settings ***\nLibrary         RPA.Browser.Selenium\nLibrary         RPA.RobotLogListener\nTask Setup      Set Task Variable   ${TRIES}   1\nTask Teardown   Close All Browsers\n\n*** Tasks ***\nCheck the official website\n   Mute Run On Failure   Run Keyword\n   Open Available Browser   https://www.robocorp.com\n   Check for visible element\n   Capture Page Screenshot\n\nCheck the official website with error log\n   Mute Run On Failure   Run Keyword  optional_keyword_to_run=Log tries\n   Open Available Browser   https://www.robocorp.com\n   Check for visible element\n   Capture Page Screenshot\n\n*** Keywords ***\nCheck for visible element\n   FOR  ${idx}  IN RANGE  1   20\n      Set Task Variable   ${TRIES}   ${idx}\n      ${status}   Run Keyword And Return Status   Element Should Be Visible  id:xyz\n      Exit For Loop If   '${status}' == 'PASS'\n      Sleep  2s\n   END\n\nLog tries\n   Log  Checked element visibility ${TRIES} times\n```\n\n**Register Protected Keywords**\n\nThis keyword is used to totally disable logging for named keywords. In the example below\nthe keyword This will not output is protected and it will not be logging into Robot Framework\nlog files.\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary         RPA.RobotLogListener\n\n*** Tasks ***\nProtecting keywords\n   This will not output        # will output because called before register\n   Register Protected Keywords    This will not output\n   This will not output        # is now registered\n   This will output\n\n*** Keywords ***\nThis will not output\n   Log   1\n\nThis will output\n   Log   2\n```\n\n**Python**\n\n```python\nfrom robot.libraries.BuiltIn import BuiltIn, RobotNotRunningError\nfrom RPA.RobotLogListener import RobotLogListener\n\ntry:\n   BuiltIn().import_library(\"RPA.RobotLogListener\")\nexcept RobotNotRunningError:\n   pass\n\nclass CustomLibrary:\n\n   def __init__(self):\n      listener = RobotLogListener()\n      listener.register_protected_keywords(\n            [\"CustomLibrary.special_keyword\"]\n      )\n\n   def special_keyword(self):\n      print('will not be written to log')\n      return 'not shown in the log'\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "C:\\Users\\Gustavo Zanotto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\RPA\\core\\logger.py", "lineno": 24, "tags": [], "inits": [], "keywords": [{"name": "End Keyword", "args": [{"name": "name", "kind": "POSITIONAL_OR_NAMED", "repr": "name", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "attributes", "kind": "POSITIONAL_OR_NAMED", "repr": "attributes", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Listener method for keyword end.\n\nparam name\n\n:   keyword name\n\nparam attributes\n\n:   keyword attributes\n\nIf name exists in the protected keywords list then log level is\nrestored back to level it was before settings to NONE.\n", "tags": [], "source": null, "shortdoc": "Listener method for keyword end.", "lineno": 266}, {"name": "Mute Run On Failure", "args": [{"name": "keywords", "kind": "POSITIONAL_OR_NAMED", "repr": "keywords: str | List | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "optional_keyword_to_run", "kind": "POSITIONAL_OR_NAMED", "repr": "optional_keyword_to_run: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set keywords which should not execute SeleniumLibrary\ndefault behaviour of running keyword on failure.\n\nparam keywords\n\n:   list of keywords to mute\n\nparam optional_keyword_to_run\n\n:   name of the keyword to execute\n    if keyword defined by keywords fail\n\nKeyword names do not need to be full names of keywords, ie. all keywords\nmatching even partially will be affected. Run Keyword would match all\nBuiltIn library keywords (17 keywords in RF 3.2.1) and of course all\nRun Keyword named keywords in any resource and/or library file which\nare imported would be matched also.\n\nBy default SeleniumLibrary executes Capture Page Screenshot\non failure.\n\nIf optional\\_keyword\\_to\\_run is not given then nothing is done\non failure, but this can be set to override SeleniumLibrary\ndefault behaviour for a set of keywords.\n", "tags": [], "source": null, "shortdoc": "Set keywords which should not execute SeleniumLibrary default behaviour of running keyword on failure.", "lineno": 184}, {"name": "Only Info Level", "args": [{"name": "names", "kind": "POSITIONAL_OR_NAMED", "repr": "names: str | List | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Register keywords that are allowed only INFO level logging\n\nparam names\n\n:   list of keywords to protect\n", "tags": [], "source": null, "shortdoc": "Register keywords that are allowed only INFO level logging", "lineno": 156}, {"name": "Register Protected Keywords", "args": [{"name": "names", "kind": "POSITIONAL_OR_NAMED", "repr": "names: str | List | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Register keywords that are not going to be logged into Robot Framework logs.\n\nparam names\n\n:   list of keywords to protect\n", "tags": [], "source": null, "shortdoc": "Register keywords that are not going to be logged into Robot Framework logs.", "lineno": 170}, {"name": "Start Keyword", "args": [{"name": "name", "kind": "POSITIONAL_OR_NAMED", "repr": "name", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "attributes", "kind": "POSITIONAL_OR_NAMED", "repr": "attributes", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Listener method for keyword start.\n\nparam name\n\n:   keyword name\n\nparam attributes\n\n:   keyword attributes\n\nIf name exists in the protected keywords list then log level is\ntemporarily set to NONE.\n", "tags": [], "source": null, "shortdoc": "Listener method for keyword start.", "lineno": 226}], "dataTypes": {}, "typedocs": []}