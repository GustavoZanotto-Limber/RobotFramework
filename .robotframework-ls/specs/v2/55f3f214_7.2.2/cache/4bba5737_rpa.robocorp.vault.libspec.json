mtime:1744373151.0233796
{"name": "RPA.Robocorp.Vault", "doc": "Vault is a library for interacting with secrets stored in the [Robocorp\nControl Room Vault](https://robocorp.com/docs-robot-framework/development-guide/variables-and-secrets/vault) (by default) or file-based secrets, which can be taken\ninto use by setting some environment variables.\n\nRobocorp Vault relies on environment variables, which are normally set\nautomatically by the Robocorp Work Agent or Assistant when a run is\ninitialized by the Robocorp Control Room. When developing robots locally\nin VSCode, you can use the [Robocorp Code Extension](https://sema4.ai/docs/automation/visual-studio-code/extension-features#connecting-to-control-room-vault) to set these\nvariables automatically as well.\n\nAlternatively, you may set these environment variable manually using\n[rcc](https://robocorp.com/docs/rcc/workflow) or directly in some other fashion. The specific variables which\nmust exist are:\n\n* `RC_API_SECRET_HOST`: URL to Robocorp Vault API\n\n* `RC_API_SECRET_TOKEN`: API Token for Robocorp Vault API\n\n* `RC_WORKSPACE_ID`: Control Room Workspace ID\n\nFile-based secrets can be set by defining two environment variables.\n\n* `RPA_SECRET_MANAGER`: RPA.Robocorp.Vault.FileSecrets\n\n* `RPA_SECRET_FILE`: Absolute path to the secrets database file\n\nExample content of local secrets file:\n\n```json\n{\n    \"swaglabs\": {\n        \"username\": \"standard_user\",\n        \"password\": \"secret_sauce\"\n    }\n}\n```\n\nOR\n\n```YAML\nswaglabs:\n    username: standard_user\n    password: secret_sauce\n```\n\n**Examples of Using Secrets in a Robot**\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary    Collections\nLibrary    RPA.Robocorp.Vault\n\n*** Tasks ***\nReading secrets\n    ${secret}=    Get Secret  swaglabs\n    Log Many      ${secret}\n\nModifying secrets\n    ${secret}=          Get Secret      swaglabs\n    ${level}=           Set Log Level   NONE\n    Set To Dictionary   ${secret}       username    nobody\n    Set Log Level       ${level}\n    Set Secret          ${secret}\n```\n\n**Python**\n\n```python\nfrom RPA.Robocorp.Vault import Vault\n\nVAULT = Vault()\n\ndef reading_secrets():\n    print(f\"My secrets: {VAULT.get_secret('swaglabs')}\")\n\ndef modifying_secrets():\n    secret = VAULT.get_secret(\"swaglabs\")\n    secret[\"username\"] = \"nobody\"\n    VAULT.set_secret(secret)\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\Robocorp\\Vault.py", "lineno": 477, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "The selected adapter can be set with the environment variable\n`RPA_SECRET_MANAGER`, or the keyword argument `default_adapter`.\nDefaults to Robocorp Vault if not defined.\n\nAll other library arguments are passed to the adapter.\n\nparam default_adapter\n\n:   Override default secret adapter\n", "tags": [], "source": null, "shortdoc": "The selected adapter can be set with the environment variable `RPA_SECRET_MANAGER`, or the keyword argument `default_adapter`. Defaults to Robocorp Vault if not defined.", "lineno": 568}], "keywords": [{"name": "Get Secret", "args": [{"name": "secret_name", "kind": "POSITIONAL_OR_NAMED", "repr": "secret_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Read a secret from the configured source, e.g. Robocorp Vault,\nand return it as a `Secret` object.\n\nparam secret_name\n\n:   Name of secret\n", "tags": [], "source": null, "shortdoc": "Read a secret from the configured source, e.g. Robocorp Vault, and return it as a `Secret` object.", "lineno": 611}, {"name": "Set Secret", "args": [{"name": "secret", "kind": "POSITIONAL_OR_NAMED", "repr": "secret: Secret", "required": true, "defaultValue": null, "types": ["Secret"], "typedocs": []}], "doc": "Overwrite an existing secret with new values.\n\nNote: Only allows modifying existing secrets, and replaces\n\n:   all values contained within it.\n\nparam secret\n\n:   Secret as a `Secret` object, from e.g. `Get Secret`\n", "tags": [], "source": null, "shortdoc": "Overwrite an existing secret with new values.", "lineno": 619}], "dataTypes": {}, "typedocs": []}