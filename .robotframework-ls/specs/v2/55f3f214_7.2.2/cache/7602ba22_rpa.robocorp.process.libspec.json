mtime:1744373164.1492658
{"name": "RPA.Robocorp.Process", "doc": "A library for interacting with Control Room (CR) Process API endpoints.\n\nSee [Unattended processes](https://robocorp.com/docs/control-room/unattended) for information about process run, step run and work\nitem states.\n\nSee [APIs and webhooks](https://robocorp.com/docs/control-room/apis-and-webhooks) for information about Control Room APIs.\n\nThe Process API endpoint is defined by RC\\_API\\_PROCESS\\_HOST environment variable,\nwhich is available during Robocorp Workforce Agent runs.\n\n**Examples**\n\n**Robot Framework**\n\nIn the following example a task creates two input work items,\nand starts a process with those items. This results in 2 different\nprocess runs in the Control Room.\n\n```robotframework\n*** Settings ***\nLibrary    RPA.Robocorp.Process\nLibrary    RPA.Robocorp.Vault\n\n*** Keywords ***\nInitialize Process Library\n    ${secrets}=  Get Secret  ProcessAPI\n    Set Credentials\n    ...   ${secrets}[workspace_id]\n    ...   ${secrets}[process_id]\n    ...   ${secrets}[apikey]\n\n*** Tasks ***\nStart process with work items\n    [Setup]   Initialize Process Library\n    &{item1}=  Create Dictionary  fname=Mark  lname=Monkey\n    &{item2}=  Create Dictionary  fname=John  lname=Doe\n    @{items}=  Create List  ${item1}   ${item2}\n    Start Process  work_items=${items}  batch=True\n```\n\n**Robot Framework**\n\nIn the following example a task creates work item with files.\nTo include files in a work item, the item needs to be created\nbefore starting the process (note. different start keyword than above).\n\nIn this example I am using same keywords and settings from above example.\n\n```robotframework\n*** Tasks ***\nStart process with work items\n    [Setup]   Initialize Process Library\n    &{data}=  Create Dictionary  fname=Mark  lname=Monkey\n    @{files}=  Create List\n    ...   ${CURDIR}${/}workdata.xlsx\n    ...   ${CURDIR}${/}other.csv\n    ${item_id}=    Create Input Work Item\n    ...   payload=${data}\n    ...   files=${files}\n    Start Configured Process\n    ...  config_type=work_items\n    ...  extra_info=${item_id}\n```\n\nDownload from process runs artifacts all matching files\n\n```robotframework\n*** Settings ***\nLibrary      RPA.Robocorp.Process\nLibrary      RPA.Robocorp.Vault\nLibrary      RPA.HTTP\nTask Setup   Set Control Room Variables\n\n*** Keywords ***\nDownload Artifacts Matching\n    [Arguments]   ${filematch}\n    @{workitems}=   List Process Work Items\n    FOR  ${item}  IN  @{workitems}\n        @{artifacts}=   List Run Artifacts\n        ...  process_run_id=${item}[processRunId]\n        ...  step_run_id=${item}[activityRunId]\n        FOR  ${artifact}  IN  @{artifacts}\n            IF  \"${filematch}\"  IN   \"${artifact}[fileName]\"\n                ${download_link}=   Get Robot Run Artifact\n                ...  process_run_id=${item}[processRunId]\n                ...  step_run_id=${item}[activityRunId]\n                ...  artifact_id=${artifact}[id]\n                ...  filename=${artifact}[fileName]\n                Download\n                ...  url=${download_link}\n                ...  target=%{ROBOT_ARTIFACTS}${/}${artifact}[fileName]\n                ...  overwrite=${TRUE}\n                ...  stream=${TRUE}\n            END\n        END\n    END\n```\n\n**Python**\n\nList work items in Control Room and retry failed items.\n\n```python\nfrom RPA.Robocorp.Process import Process\nfrom RPA.Robocorp.Vault import Vault\n\nsecrets = Vault().get_secret(\"ProcessAPI\")\nprocess = Process(\n    secrets[\"workspace_id\"],\n    secrets[\"process_id\"],\n    secrets[\"apikey\"]\n)\n\n\ndef retry_failed_items():\n    items = process.list_process_work_items()\n    for item in items:\n        if item[\"state\"] == \"FAILED\":\n            print(\"FAILED work item: %s\" % item[\"id\"])\n            result = process.retry_work_item(item[\"id\"])\n            print(result)\n\nif __name__ == \"__main__\":\n    retry_failed_items()\n```\n\nDownload from process runs artifacts all \".xlsx\" files\n\n```python\nfrom RPA.Robocorp.Process import Process\nfrom RPA.HTTP import HTTP\n\ndef download_artifacts_matching(filematch=\".xlsx\"):\n    work_items = process.list_process_work_items()\n    for item in work_items:\n        artifacts = process.list_run_artifacts(\n            process_run_id=item[\"processRunId\"],\n            step_run_id=item[\"activityRunId\"]\n        )\n        for artifact in artifacts:\n            if filematch in artifact[\"fileName\"]:\n                download_link = process.get_robot_run_artifact(\n                    process_run_id=item[\"processRunId\"],\n                    step_run_id=item[\"activityRunId\"],\n                    artifact_id=artifact[\"id\"],\n                    filename=artifact[\"fileName\"]\n                )\n                target_filepath = os.path.join(\n                    os.getenv(\"ROBOT_ARTIFACTS\"),\n                    f\"{artifact['fileName']}\"\n                )\n                HTTP().download(\n                    url=download_link,\n                    target_file=target_filepath,\n                    overwrite=True,\n                    stream=True\n                )\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\Robocorp\\Process.py", "lineno": 42, "tags": ["post", "process", "work item", "get", "process", "get", "process", "runs", "artifacts", "get", "process", "runs", "get", "process", "work item", "get", "process", "work item", "get", "process", "runs", "get", "process", "runs", "get", "process", "work item", "get", "process", "artifacts", "get", "process", "runs", "post", "process", "retry", "work item", "set", "set", "set", "set", "post", "process", "start", "work item", "post", "process", "start", "work item"], "inits": [{"name": "__init__", "args": [{"name": "workspace_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "workspace_api_key", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_api_key: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Initialize self.  See help(type(self)) for accurate signature.\n", "tags": [], "source": null, "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.", "lineno": 211}], "keywords": [{"name": "Create Input Work Item", "args": [{"name": "payload", "kind": "POSITIONAL_OR_NAMED", "repr": "payload: Any | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "files", "kind": "POSITIONAL_OR_NAMED", "repr": "files: str | List | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Create an input work item for a process\n\nparam payload\n\n:   work item data\n\nparam files\n\n:   absolute filepaths as single string or list\n\nparam process_id\n\n:   specific process to which item belongs to\n\nreturn\n\n:   The integer that represents the work item id\n", "tags": ["post", "process", "work item"], "source": null, "shortdoc": "Create an input work item for a process", "lineno": 370}, {"name": "Get Process Id By Name", "args": [{"name": "process_name", "kind": "POSITIONAL_OR_NAMED", "repr": "process_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "workspace_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Get a process id of the process by name\n\nparam process_name\n\n:   name of the process in the Control Room\n\nparam workspace_id\n\n:   specific Control Room workspace to which process belongs to\n\nreturn\n\n:   the next iteration id or None\n", "tags": ["get", "process"], "source": null, "shortdoc": "Get a process id of the process by name", "lineno": 612}, {"name": "Get Process Run Status", "args": [{"name": "process_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_run_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "step_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "step_run_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Get a process run status by run id\n\nparam process_run_id\n\n:   id of the process run\n\nparam step_run_id\n\n:   id of the process step run\n\nparam process_id\n\n:   specific process to which runs belongs to\n\nreturn\n\n:   the response JSON\n", "tags": ["get", "process", "runs"], "source": null, "shortdoc": "Get a process run status by run id", "lineno": 588}, {"name": "Get Robot Run Artifact", "args": [{"name": "process_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_run_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "step_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "step_run_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "artifact_id", "kind": "POSITIONAL_OR_NAMED", "repr": "artifact_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "filename", "kind": "POSITIONAL_OR_NAMED", "repr": "filename: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Get a download URL for a process run artifact\n\nparam process_run_id\n\n:   id of the process run\n\nparam step_run_id\n\n:   id of the process step run\n\nparam artifact_id\n\n:   id of the run artifact\n\nparam filename\n\n:   filename of the run artifact\n\nparam process_id\n\n:   specific process to which runs belongs to\n\nreturn\n\n:   url for file download\n", "tags": ["artifacts", "get", "process", "runs"], "source": null, "shortdoc": "Get a download URL for a process run artifact", "lineno": 668}, {"name": "Get Work Item", "args": [{"name": "workitem_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workitem_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "include_data", "kind": "POSITIONAL_OR_NAMED", "repr": "include_data: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Get work item from Control Room\n\nparam workitem_id\n\n:   id of the work item\n\nparam include_data\n\n:   include work item payload and files in\n    the response (default False)\n\nparam process_id\n\n:   specific process to which runs belongs to\n\nreturn\n\n:   the JSON of the work items associated with a given process\n", "tags": ["get", "process", "work item"], "source": null, "shortdoc": "Get work item from Control Room", "lineno": 511}, {"name": "List Process Run Work Items", "args": [{"name": "process_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_run_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "include_data", "kind": "POSITIONAL_OR_NAMED", "repr": "include_data: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "item_state", "kind": "POSITIONAL_OR_NAMED", "repr": "item_state: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "List work items belonging to a specific process run\n\nparam process_run_id\n\n:   specific process step run to which items\n    belongs to\n\nparam process_id\n\n:   specific process to which items belongs to\n\nparam include_data\n\n:   include work item payload and files in\n    the response (default False)\n\nparam item_state\n\n:   state of work items to return (default all)\n", "tags": ["get", "process", "work item"], "source": null, "shortdoc": "List work items belonging to a specific process run", "lineno": 477}, {"name": "List Process Runs", "args": [{"name": "run_state", "kind": "POSITIONAL_OR_NAMED", "repr": "run_state: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "limit", "kind": "POSITIONAL_OR_NAMED", "repr": "limit: int | None = 10", "required": true, "defaultValue": "10", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "List of runs related to a process\n\nparam run_state\n\n:   state of runs to return (default all)\n\nparam limit\n\n:   number of runs to return (default 10)\n\nparam process_id\n\n:   specific process to which runs belongs to\n\nreturn\n\n:   the JSON data of the process runs based on the provided parameters\n", "tags": ["get", "process", "runs"], "source": null, "shortdoc": "List of runs related to a process", "lineno": 534}, {"name": "List Process Runs In Workspace", "args": [{"name": "run_state", "kind": "POSITIONAL_OR_NAMED", "repr": "run_state: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "limit", "kind": "POSITIONAL_OR_NAMED", "repr": "limit: int | None = 10", "required": true, "defaultValue": "10", "types": ["Union"], "typedocs": []}, {"name": "workspace_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "List all process runs in a workspace\n\nparam run_state\n\n:   state of runs to return (default all)\n\nparam limit\n\n:   number of runs to return (default 10)\n\nparam workspace_id\n\n:   specific Control Room workspace to which process belongs to\n\nreturn\n\n:   the JSON data of the process runs based on the provided parameters\n", "tags": ["get", "process", "runs"], "source": null, "shortdoc": "List all process runs in a workspace", "lineno": 561}, {"name": "List Process Work Items", "args": [{"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "include_data", "kind": "POSITIONAL_OR_NAMED", "repr": "include_data: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "item_state", "kind": "POSITIONAL_OR_NAMED", "repr": "item_state: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "List work items belonging to a process\n\nparam include_data\n\n:   include work item payload and files in\n    the response (default False)\n\nparam item_state\n\n:   state of work items to return (default all)\n\nparam process_id\n\n:   specific process to which items belongs to\n\nreturn\n\n:   the JSON data of the process runs based on the provided parameters\n", "tags": ["get", "process", "work item"], "source": null, "shortdoc": "List work items belonging to a process", "lineno": 449}, {"name": "List Processes", "args": [{"name": "workspace_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "List all processes in a workspace\n\nparam workspace_id\n\n:   specific Control Room workspace to which process belongs to\n\nreturn\n\n:   the JSON data of the process runs based on the provided parameters\n", "tags": ["get", "process"], "source": null, "shortdoc": "List all processes in a workspace", "lineno": 435}, {"name": "List Run Artifacts", "args": [{"name": "process_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_run_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "step_run_id", "kind": "POSITIONAL_OR_NAMED", "repr": "step_run_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "List Robot run artifacts\n\nparam process_run_id\n\n:   id of the process run\n\nparam step_run_id\n\n:   id of the process step run\n\nparam process_id\n\n:   specific process to which runs belongs to\n\nreturn\n\n:   the response JSON\n", "tags": ["artifacts", "get", "process", "runs"], "source": null, "shortdoc": "List Robot run artifacts", "lineno": 644}, {"name": "Retry Work Item", "args": [{"name": "work_item_id", "kind": "POSITIONAL_OR_NAMED", "repr": "work_item_id: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Retry processing of work item in FAILED state\n\nparam work_item_id\n\n:   ID of the work item to retry\n\nparam process_id\n\n:   specific process to start\n\nreturn\n\n:   the response JSON\n", "tags": ["post", "process", "retry", "work item"], "source": null, "shortdoc": "Retry processing of work item in FAILED state", "lineno": 625}, {"name": "Set Apikey", "args": [{"name": "apikey", "kind": "POSITIONAL_OR_NAMED", "repr": "apikey: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set Workspace API access key\n\nparam apikey\n\n:   workspace API access key\n", "tags": ["set"], "source": null, "shortdoc": "Set Workspace API access key", "lineno": 260}, {"name": "Set Credentials", "args": [{"name": "workspace_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "apikey", "kind": "POSITIONAL_OR_NAMED", "repr": "apikey: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set credentials needed by the Process API\n\nparam workspace_id\n\n:   ID of the Control Room workspace\n\nparam process_id\n\n:   ID of the Control Room process\n\nparam apikey\n\n:   workspace API access key\n", "tags": ["set"], "source": null, "shortdoc": "Set credentials needed by the Process API", "lineno": 269}, {"name": "Set Process Id", "args": [{"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set Control Room process ID\n\nparam process_id\n\n:   ID of the Control Room process\n", "tags": ["set"], "source": null, "shortdoc": "Set Control Room process ID", "lineno": 251}, {"name": "Set Workspace Id", "args": [{"name": "workspace_id", "kind": "POSITIONAL_OR_NAMED", "repr": "workspace_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Set Control Room workspace ID\n\nparam workspace_id\n\n:   ID of the Control Room workspace\n", "tags": ["set"], "source": null, "shortdoc": "Set Control Room workspace ID", "lineno": 242}, {"name": "Start Configured Process", "args": [{"name": "config_type", "kind": "POSITIONAL_OR_NAMED", "repr": "config_type: ConfigurationType = default", "required": true, "defaultValue": "default", "types": ["ConfigurationType"], "typedocs": []}, {"name": "extra_info", "kind": "POSITIONAL_OR_NAMED", "repr": "extra_info: str | List | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Start a Control Room process with the provided configuration\n\nparam config_type\n\n:   type of the start, (ConfigurationType.default)\n\nparam extra_info\n\n:   data to be sent with the start, for example. work item IDs\n\nparam process_id\n\n:   specific process to start\n\nreturn\n\n:   string of the request response\n", "tags": ["post", "process", "start", "work item"], "source": null, "shortdoc": "Start a Control Room process with the provided configuration", "lineno": 340}, {"name": "Start Process", "args": [{"name": "work_items", "kind": "POSITIONAL_OR_NAMED", "repr": "work_items: Dict | List[Dict] | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "batch", "kind": "POSITIONAL_OR_NAMED", "repr": "batch: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "process_id", "kind": "POSITIONAL_OR_NAMED", "repr": "process_id: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Start a Control Room process\n\nparam work_items\n\n:   input work items for the process (default empty)\n\nparam batch\n\n:   set to True if sending list of workitems to start each\n    as a separate run\n\nparam process_id\n\n:   specific process to start\n\nreturn\n\n:   JSON of the request response\n\nTable showing different results depending on parameter\nvalues.\n\n\n\n\n\n\n\nwork\\_items\n\nbatch\n\nresult\n\nNone\n\nFalse\n\nTrigger a process with empty a work item\n\nNone\n\nTrue\n\nError. work\\_items needs to be a list\n\ndict\n\nFalse\n\nTrigger a process with a work item containing payload of a dict\n\ndict\n\nTrue\n\nError. work\\_items needs to be a list\n\nlist\n\nFalse\n\nTrigger a process with a work item containing payload of a list\n\nlist\n\nTrue\n\nTrigger multiple process runs with work items each containing payload of a dict\n", "tags": ["post", "process", "start", "work item"], "source": null, "shortdoc": "Start a Control Room process", "lineno": 302}], "dataTypes": {}, "typedocs": []}