mtime:1744373459.7812667
{"name": "SikuliLibrary", "doc": "Documentation for library `SikuliLibrary`.\n\n", "version": "2.0.3", "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\SikuliLibrary\\sikuli.py", "lineno": 34, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "port", "kind": "POSITIONAL_OR_NAMED", "repr": "port=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=3.0", "required": true, "defaultValue": "3.0", "types": [], "typedocs": []}, {"name": "mode", "kind": "POSITIONAL_OR_NAMED", "repr": "mode=OLD", "required": true, "defaultValue": "OLD", "types": [], "typedocs": []}], "doc": "@port: sikuli java process socket port @timeout: Timeout of waiting java process started @mode: if set as 'DOC',  will stop java process automatically, if set as 'PYTHON', means library is running out of robot environment if set as 'CREATE', it is only for mvn package usage, will create keywords.py file if set as 'OLD'(default), sikuli java process will be started when library is inited if set as 'NEW', user should use 'start_sikuli_process' to start java process\n\n", "tags": [], "source": null, "shortdoc": "@port: sikuli java process socket port @timeout: Timeout of waiting java process started @mode: if set as 'DOC',  will stop java process automatically, if set as 'PYTHON', means library is running out of robot environment if set as 'CREATE', it is only for mvn package usage, will create keywords.py file if set as 'OLD'(default), sikuli java process will be started when library is inited if set as 'NEW', user should use 'start_sikuli_process' to start java process", "lineno": 38}], "keywords": [{"name": "Add Image Path", "args": [{"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Add image path\n\n", "tags": [], "source": null, "shortdoc": "Add image path", "lineno": -1}, {"name": "Capture Region", "args": [{"name": "coordinates", "kind": "POSITIONAL_OR_NAMED", "repr": "coordinates", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Capture region\n\n\nCapture region passed Examples:\n\n\n|  |  |  |  |  |  |\n| :--- | :--- | :--- | :--- | :--- | :--- |\n| ${coor} | Create List | x | y | w | h |\n| ${screenshotname}= | Capture region | ${coor} |  |  |  |\n\n", "tags": [], "source": null, "shortdoc": "Capture region", "lineno": -1}, {"name": "Capture Roi", "args": [], "doc": "Capture Roi\n\n", "tags": [], "source": null, "shortdoc": "Capture Roi", "lineno": -1}, {"name": "Capture Screen", "args": [], "doc": "Capture whole screen, file name is returned\n\n", "tags": [], "source": null, "shortdoc": "Capture whole screen, file name is returned", "lineno": -1}, {"name": "Change Screen Id", "args": [{"name": "screenId", "kind": "POSITIONAL_OR_NAMED", "repr": "screenId", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Change screen id For multi display, user could use this keyword to switch to the correct screen\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Change screen id | 1 |\n\n", "tags": [], "source": null, "shortdoc": "Change screen id For multi display, user could use this keyword to switch to the correct screen", "lineno": -1}, {"name": "Clear All Highlights", "args": [], "doc": "Clear all highlights from screen\n\n", "tags": [], "source": null, "shortdoc": "Clear all highlights from screen", "lineno": -1}, {"name": "Clear Highlight", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Clear highlight from screen\n\n", "tags": [], "source": null, "shortdoc": "Clear highlight from screen", "lineno": -1}, {"name": "Click", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "xOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "xOffset=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "yOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "yOffset=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Click\n\n\nClick on an image with similarity and offset. Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Click | hello.png |\n\n", "tags": [], "source": null, "shortdoc": "Click", "lineno": -1}, {"name": "Click In", "args": [{"name": "areaImage", "kind": "POSITIONAL_OR_NAMED", "repr": "areaImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "targetImage", "kind": "POSITIONAL_OR_NAMED", "repr": "targetImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Click in. Click target image in area image.\n\n", "tags": [], "source": null, "shortdoc": "Click in. Click target image in area image.", "lineno": -1}, {"name": "Click Nth", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "index", "kind": "POSITIONAL_OR_NAMED", "repr": "index", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "sortByColumn", "kind": "POSITIONAL_OR_NAMED", "repr": "sortByColumn=true", "required": true, "defaultValue": "true", "types": [], "typedocs": []}], "doc": "Click nth\n\n\nClick on specific image. Optionally pass similarity and sort by column or row.\n\n\nExamples:\n\n\n|  |  |  |  |\n| :--- | :--- | :--- | :--- |\n| Click on nth image in region | image.png | 1 |  |\n| Click on nth image in region | image.png | 1 | ${FALSE} |\n\n", "tags": [], "source": null, "shortdoc": "Click nth", "lineno": -1}, {"name": "Click On Match", "args": [{"name": "match", "kind": "POSITIONAL_OR_NAMED", "repr": "match", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Click On Match there's no offset to be configured works with the keyword Return Match From Region\n\n", "tags": [], "source": null, "shortdoc": "Click On Match there's no offset to be configured works with the keyword Return Match From Region", "lineno": -1}, {"name": "Click On Region", "args": [{"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Click On Region there's no offset to be configured works with the keyword Get Extended Region From\n\n", "tags": [], "source": null, "shortdoc": "Click On Region there's no offset to be configured works with the keyword Get Extended Region From", "lineno": -1}, {"name": "Click Region", "args": [{"name": "coordinates", "kind": "POSITIONAL_OR_NAMED", "repr": "coordinates", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "waitChange", "kind": "POSITIONAL_OR_NAMED", "repr": "waitChange=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Click region\n\n\nClick on defined region cooridinates. Optionally Wait for specified time to ensure region has changed. Also, optionally set highlight\n\n\nExamples:\n\n\n|  |  |  |  |  |  |\n| :--- | :--- | :--- | :--- | :--- | :--- |\n| ${coor} | Create List | 0 | 0 | 100 | 100 |\n| Click Region | ${coor} |  |  |  |  |\n| Click Region | ${coor} | 0 |  |  |  |\n| Click Region | ${coor} | 0 | 2 |  |  |\n\n", "tags": [], "source": null, "shortdoc": "Click region", "lineno": -1}, {"name": "Click Text", "args": [{"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Click Text\n\n\nClick on text. Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Click Text | Hello |\n\n", "tags": [], "source": null, "shortdoc": "Click Text", "lineno": -1}, {"name": "Close Application", "args": [{"name": "name", "kind": "POSITIONAL_OR_NAMED", "repr": "name", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Close application\n\n", "tags": [], "source": null, "shortdoc": "Close application", "lineno": -1}, {"name": "Double Click", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "xOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "xOffset=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "yOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "yOffset=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Double click\n\n", "tags": [], "source": null, "shortdoc": "Double click", "lineno": -1}, {"name": "Double Click In", "args": [{"name": "areaImage", "kind": "POSITIONAL_OR_NAMED", "repr": "areaImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "targetImage", "kind": "POSITIONAL_OR_NAMED", "repr": "targetImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Double click in. Double click target image in area image.\n\n", "tags": [], "source": null, "shortdoc": "Double click in. Double click target image in area image.", "lineno": -1}, {"name": "Double Click On Match", "args": [{"name": "match", "kind": "POSITIONAL_OR_NAMED", "repr": "match", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Double Click On Match there's no offset to be configured works with the keyword Return Match From Region\n\n", "tags": [], "source": null, "shortdoc": "Double Click On Match there's no offset to be configured works with the keyword Return Match From Region", "lineno": -1}, {"name": "Double Click On Region", "args": [{"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Double Click On Region there's no offset to be configured works with the keyword Get Extended Region From\n\n", "tags": [], "source": null, "shortdoc": "Double Click On Region there's no offset to be configured works with the keyword Get Extended Region From", "lineno": -1}, {"name": "Drag And Drop", "args": [{"name": "srcImage", "kind": "POSITIONAL_OR_NAMED", "repr": "srcImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "targetImage", "kind": "POSITIONAL_OR_NAMED", "repr": "targetImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Drag the source image to target image. If source image is empty, drag the last match and drop at given target\n\n", "tags": [], "source": null, "shortdoc": "Drag the source image to target image. If source image is empty, drag the last match and drop at given target", "lineno": -1}, {"name": "Drag And Drop By Offset", "args": [{"name": "srcImage", "kind": "POSITIONAL_OR_NAMED", "repr": "srcImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "xOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "xOffset", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "yOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "yOffset", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Drag the source image to target by offset. If source image is empty, drag the last match and drop at given target\n\n", "tags": [], "source": null, "shortdoc": "Drag the source image to target by offset. If source image is empty, drag the last match and drop at given target", "lineno": -1}, {"name": "Exists", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Exists\n\n\nCheck whether image exists in screen @image: expected image in screen @timeout: wait seconds\n\n\nExamples:\n\n\n|  |  |  |  |\n| :--- | :--- | :--- | :--- |\n| ${is_exist}= | Exists | image.png | 0 |\n\n", "tags": [], "source": null, "shortdoc": "Exists", "lineno": -1}, {"name": "From Region Jump To", "args": [{"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "direction", "kind": "POSITIONAL_OR_NAMED", "repr": "direction", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "jumps", "kind": "POSITIONAL_OR_NAMED", "repr": "jumps", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "margin", "kind": "POSITIONAL_OR_NAMED", "repr": "margin", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "From Region Jump To Create a region and translate it related to the given region, the created region will have the exactly same height and width as the passed one ${jumps} = number of 'jumps' to move, like on a chess game, jumps will be the number of squares a piece moves ${direction} = | below | above | left | right | ${margem} = add a space between jumps, must be >= 1 |${translated_region} =    |    From Region Jump To  |  ${original_region}  |    below   |   4   |    1   |\n\n", "tags": [], "source": null, "shortdoc": "From Region Jump To Create a region and translate it related to the given region, the created region will have the exactly same height and width as the passed one ${jumps} = number of 'jumps' to move, like on a chess game, jumps will be the number of squares a piece moves ${direction} = | below | above | left | right | ${margem} = add a space between jumps, must be >= 1 |${translated_region} =    |    From Region Jump To  |  ${original_region}  |    below   |   4   |    1   |", "lineno": -1}, {"name": "Get Current Screen Id", "args": [], "doc": "Get current screen id\n\n", "tags": [], "source": null, "shortdoc": "Get current screen id", "lineno": -1}, {"name": "Get Extended Region From", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "direction", "kind": "POSITIONAL_OR_NAMED", "repr": "direction", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "number_of_times_to_repeat", "kind": "POSITIONAL_OR_NAMED", "repr": "number_of_times_to_repeat", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Get extended region from Extended the given image creating a region above or below with the same width The height can change using the multiplier @number_of_times_to_repeat, if 2 is given the new region will have twice the height of the orignalge\n\n", "tags": [], "source": null, "shortdoc": "Get extended region from Extended the given image creating a region above or below with the same width The height can change using the multiplier @number_of_times_to_repeat, if 2 is given the new region will have twice the height of the orignalge", "lineno": -1}, {"name": "Get Extended Region From Image", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "direction", "kind": "POSITIONAL_OR_NAMED", "repr": "direction", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "number of times to repeat", "kind": "POSITIONAL_OR_NAMED", "repr": "number of times to repeat", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Get Extended Region From Image Extended the given image creating a new region above, below, on the left or on the right side, with the same height and width The height and width can change using the multiplier @number_of_times_to_repeat If orginal if giver as arguments, the region will be exactly the same location as the image, last argument is ignored Ex: If 2 is given and direction = below the new region will have twice the height of the given image and will be located right below it |${region} =    |    Get Extended Region From Image  |  image.png  |    below   |   1   | |${region} =    |    Get Extended Region From Image  |  image.png  |    original   |   1 \\#this argument is ignored   |\n\n", "tags": [], "source": null, "shortdoc": "Get Extended Region From Image Extended the given image creating a new region above, below, on the left or on the right side, with the same height and width The height and width can change using the multiplier @number_of_times_to_repeat If orginal if giver as arguments, the region will be exactly the same location as the image, last argument is ignored Ex: If 2 is given and direction = below the new region will have twice the height of the given image and will be located right below it |${region} =    |    Get Extended Region From Image  |  image.png  |    below   |   1   | |${region} =    |    Get Extended Region From Image  |  image.png  |    original   |   1 \\#this argument is ignored   |", "lineno": -1}, {"name": "Get Extended Region From Region", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "direction", "kind": "POSITIONAL_OR_NAMED", "repr": "direction", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "number of times to repeat", "kind": "POSITIONAL_OR_NAMED", "repr": "number of times to repeat", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Get Extended Region From Region Extended the given image creating a region above, below, in the left side or on the right, with the same height and width The height and width can change using the multiplier @number_of_times_to_repeat If 2 is given and direction = below the new region will have twice the height of the orignal and will be located right below it |${below_region} =    |    Get Extended Region From Region  |  ${another_region}  |    below   |   1   |\n\n", "tags": [], "source": null, "shortdoc": "Get Extended Region From Region Extended the given image creating a region above, below, in the left side or on the right, with the same height and width The height and width can change using the multiplier @number_of_times_to_repeat If 2 is given and direction = below the new region will have twice the height of the orignal and will be located right below it |${below_region} =    |    Get Extended Region From Region  |  ${another_region}  |    below   |   1   |", "lineno": -1}, {"name": "Get Image Coordinates", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "coordinates", "kind": "POSITIONAL_OR_NAMED", "repr": "coordinates=[]", "required": true, "defaultValue": "[]", "types": [], "typedocs": []}], "doc": "Get Image Coordinates\n\n\nReturn image coordinates, within region Examples:\n\n\n|  |  |  |  |\n| :--- | :--- | :--- | :--- |\n| ${imageCoordinates}= | Get Image Coordinates | image.png=0.75 |  |\n| ${imageCoordinates}= | Get Image Coordinates | image.png=0.75 | [x, y, w, z] |\n\n", "tags": [], "source": null, "shortdoc": "Get Image Coordinates", "lineno": -1}, {"name": "Get Match Score", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Get match scoreTries to find the image on the screen, returns accuracy score (0-1)\n\n\nExamples:\n\n\n|  |  |  |  |  |\n| :--- | :--- | :--- | :--- | :--- |\n| ${score} = | Get Match Score | somethingThatMayExist.png |  |  |\n| Run Keyword if | ${score} > 0.95 | keyword1 | ELSE | keyword2 |\n\n", "tags": [], "source": null, "shortdoc": "Get match scoreTries to find the image on the screen, returns accuracy score (0-1)", "lineno": -1}, {"name": "Get Number Of Screens", "args": [], "doc": "Get number of screens\n\n", "tags": [], "source": null, "shortdoc": "Get number of screens", "lineno": -1}, {"name": "Get Screen Coordinates", "args": [], "doc": "Get screen coordinates\n\n\nReturn screen coordinates for active screen\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| @{coordinates}= | Get Screen Coordinates | 0 |\n\n", "tags": [], "source": null, "shortdoc": "Get screen coordinates", "lineno": -1}, {"name": "Get Text", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image=", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Get text\n\n\nIf image is not given, keyword will get text from whole Screen If image is given, keyword will get text from matched region Call keyword setOcrTextRead to set OcrTextRead as true, before using text recognition keywords\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Set Ocr Text Read | true |\n| Get Text |  |\n| Get Text | test.png |\n\n", "tags": [], "source": null, "shortdoc": "Get text", "lineno": -1}, {"name": "Highlight", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "secs", "kind": "POSITIONAL_OR_NAMED", "repr": "secs=", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Highlight matched image. If secs is set, highlight will vanish automatically after setted seconds\n\n", "tags": [], "source": null, "shortdoc": "Highlight matched image. If secs is set, highlight will vanish automatically after setted seconds", "lineno": -1}, {"name": "Highlight Region", "args": [{"name": "coordinates", "kind": "POSITIONAL_OR_NAMED", "repr": "coordinates", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Highlight region\n\n", "tags": [], "source": null, "shortdoc": "Highlight region", "lineno": -1}, {"name": "Highlight Roi", "args": [{"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Highlight ROI\n\n", "tags": [], "source": null, "shortdoc": "Highlight ROI", "lineno": -1}, {"name": "Image Count", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Image Count Count how many times the same picture is detected in screen.\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| ${image_cnt}= | Image Count | test.png |\n\n", "tags": [], "source": null, "shortdoc": "Image Count Count how many times the same picture is detected in screen.", "lineno": -1}, {"name": "Input Text", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Input text. Image could be empty\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Input text | image.png | Sikuli |\n| Input text | ${EMPTY} | Sikuli |\n\n", "tags": [], "source": null, "shortdoc": "Input text. Image could be empty", "lineno": -1}, {"name": "Key Down", "args": [{"name": "keyConstant", "kind": "POSITIONAL_OR_NAMED", "repr": "keyConstant", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Key down Press keyboard key and hold it.\n\n\nFor a list of possible Keys view docs for org.sikuli.script.Key .\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Key down | CTRL |\n| Click | textFieldWithDefaultText.png |\n\n", "tags": [], "source": null, "shortdoc": "Key down Press keyboard key and hold it.", "lineno": -1}, {"name": "Key Up", "args": [{"name": "keyConstant", "kind": "POSITIONAL_OR_NAMED", "repr": "keyConstant", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Key up Release keyboard key.\n\n\nFor a list of possible Keys view docs for org.sikuli.script.Key .\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Click | textFieldWithDefaultText.png |\n| Key UP | CTRL |\n\n", "tags": [], "source": null, "shortdoc": "Key up Release keyboard key.", "lineno": -1}, {"name": "Mouse Down", "args": [{"name": "@mouseButtons", "kind": "VAR_POSITIONAL", "repr": "*mouseButtons", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Mouse down Press and hold the specified buttons\n\n\n@mouseButtons: Could be LEFT, MIDDLE, RIGHT\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Mouse Move | test.png |  |\n| Mouse Down | LEFT | RIGHT |\n| Mouse Up |  |  |\n\n", "tags": [], "source": null, "shortdoc": "Mouse down Press and hold the specified buttons", "lineno": -1}, {"name": "Mouse Move", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image=", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Mouse moveMove the mouse pointer to the target\n\n\n@image: if image is empty, will move mouse to the last matched.\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Mouse Move | test.png |\n| Screen Should Contain | test.png |\n| Mouse Move |  |\n\n", "tags": [], "source": null, "shortdoc": "Mouse moveMove the mouse pointer to the target", "lineno": -1}, {"name": "Mouse Move Location", "args": [{"name": "x", "kind": "POSITIONAL_OR_NAMED", "repr": "x=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "y", "kind": "POSITIONAL_OR_NAMED", "repr": "y=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Mouse move locationMove the mouse pointer to the target location\n\n\n@x: x cooridnate where mouse should move\n\n\n@y: y cooridnate where mouse should move\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Mouse Move Location | 20 | 20 |\n\n", "tags": [], "source": null, "shortdoc": "Mouse move locationMove the mouse pointer to the target location", "lineno": -1}, {"name": "Mouse Move Region", "args": [{"name": "coordinates", "kind": "POSITIONAL_OR_NAMED", "repr": "coordinates", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "highlight_timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "highlight_timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Mouse move regionMove the mouse pointer to the target region\n\n\n@coordinates: coordinates where mouse should move\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Mouse Move region | [20, 20, 20, 20] |\n\n", "tags": [], "source": null, "shortdoc": "Mouse move regionMove the mouse pointer to the target region", "lineno": -1}, {"name": "Mouse Up", "args": [{"name": "@mouseButtons", "kind": "VAR_POSITIONAL", "repr": "*mouseButtons", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Mouse up Release the specified mouse buttons\n\n\n@mouseButtons: Could be LEFT, MIDDLE, RIGHT. If empty, all currently held buttons are released\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Mouse Move | test.png |  |\n| Mouse Down | LEFT | RIGHT |\n| Mouse Up | LEFT | RIGHT |\n\n", "tags": [], "source": null, "shortdoc": "Mouse up Release the specified mouse buttons", "lineno": -1}, {"name": "Open Application", "args": [{"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Open application To open app with parameters, refer: [https://sikulix-2014.readthedocs.io/en/latest/appclass.html\\#App.App](https://sikulix-2014.readthedocs.io/en/latest/appclass.html\\#App.App)\n\n", "tags": [], "source": null, "shortdoc": "Open application To open app with parameters, refer: [https://sikulix-2014.readthedocs.io/en/latest/appclass.html\\#App.App](https://sikulix-2014.readthedocs.io/en/latest/appclass.html\\#App.App)", "lineno": -1}, {"name": "Paste Text", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Paste text. Image could be empty\n\n", "tags": [], "source": null, "shortdoc": "Paste text. Image could be empty", "lineno": -1}, {"name": "Press Special Key", "args": [{"name": "keyConstant", "kind": "POSITIONAL_OR_NAMED", "repr": "keyConstant", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Press special key Presses a special keyboard key.\n\n\nFor a list of possible Keys view docs for org.sikuli.script.Key .\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Double Click | textFieldWithDefaultText.png |\n| Press Special Key | DELETE |\n\n", "tags": [], "source": null, "shortdoc": "Press special key Presses a special keyboard key.", "lineno": -1}, {"name": "Read Text From Region", "args": [{"name": "reg", "kind": "POSITIONAL_OR_NAMED", "repr": "reg", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Read text from region\n\n", "tags": [], "source": null, "shortdoc": "Read text from region", "lineno": -1}, {"name": "Region Click Text", "args": [{"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Region Click Text\n\n\nClick on text in region. Set a region before. Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Region Click Text | Hello |\n\n", "tags": [], "source": null, "shortdoc": "Region Click Text", "lineno": -1}, {"name": "Remove Image Path", "args": [{"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Remove image path\n\n", "tags": [], "source": null, "shortdoc": "Remove image path", "lineno": -1}, {"name": "Reset Roi", "args": [], "doc": "Reset Roi Set Region of interest to full screen\n\n\nExamples:\n\n\n|  |\n| :--- |\n| Reset roi |\n\n", "tags": [], "source": null, "shortdoc": "Reset Roi Set Region of interest to full screen", "lineno": -1}, {"name": "Return Match From Region", "args": [{"name": "region", "kind": "POSITIONAL_OR_NAMED", "repr": "region", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "target", "kind": "POSITIONAL_OR_NAMED", "repr": "target", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Return Match From Region expect a region (from keyword Get Extended Region From) and a target to be search for (an image.png) returns the target as a object (string), it can be used with Click On Match keywords\n\n", "tags": [], "source": null, "shortdoc": "Return Match From Region expect a region (from keyword Get Extended Region From) and a target to be search for (an image.png) returns the target as a object (string), it can be used with Click On Match keywords", "lineno": -1}, {"name": "Right Click", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "xOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "xOffset=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "yOffset", "kind": "POSITIONAL_OR_NAMED", "repr": "yOffset=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Right click\n\n\nClick on an image with similarity and offset. Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Click | hello.png |\n\n", "tags": [], "source": null, "shortdoc": "Right click", "lineno": -1}, {"name": "Right Click In", "args": [{"name": "areaImage", "kind": "POSITIONAL_OR_NAMED", "repr": "areaImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "targetImage", "kind": "POSITIONAL_OR_NAMED", "repr": "targetImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Right click in. Right click target image in area image.\n\n", "tags": [], "source": null, "shortdoc": "Right click in. Right click target image in area image.", "lineno": -1}, {"name": "Screen Should Contain", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Screen should contain\n\n", "tags": [], "source": null, "shortdoc": "Screen should contain", "lineno": -1}, {"name": "Screen Should Not Contain", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Screen should not contain Screen should not contain image\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| Screen should not contain | image.png |\n\n", "tags": [], "source": null, "shortdoc": "Screen should not contain Screen should not contain image", "lineno": -1}, {"name": "Select Region", "args": [{"name": "message", "kind": "POSITIONAL_OR_NAMED", "repr": "message", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Select Region\n\n\nAllow user to select a region and capture it. Return array of [capturedImagePath, x, y, w, h]\n\n\nExamples:\n\n\n|  |  |\n| :--- | :--- |\n| @{SelectedRegion}= | Select region |\n\n", "tags": [], "source": null, "shortdoc": "Select Region", "lineno": -1}, {"name": "Set Always Resize", "args": [{"name": "resize", "kind": "POSITIONAL_OR_NAMED", "repr": "resize", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set Always Resize A decimal value greater 0 and not equal to 1 to switch the feature on. With this setting you can tell SikuliX to generally resize all given images before a search operation using the given factor, which is applied to both width and height. The implementation internally uses the standard behavior of resizing a Java-AWT-BufferedImage.\n\n\nTo switch the feature off again, just assign 0 or 1.\n\n", "tags": [], "source": null, "shortdoc": "Set Always Resize A decimal value greater 0 and not equal to 1 to switch the feature on. With this setting you can tell SikuliX to generally resize all given images before a search operation using the given factor, which is applied to both width and height. The implementation internally uses the standard behavior of resizing a Java-AWT-BufferedImage.", "lineno": -1}, {"name": "Set Capture Folder", "args": [{"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set captured folder\n\n\nSet folder for captured images Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Set captured folder | PATH |\n\n", "tags": [], "source": null, "shortdoc": "Set captured folder", "lineno": -1}, {"name": "Set Capture Matched Image", "args": [{"name": "value", "kind": "POSITIONAL_OR_NAMED", "repr": "value", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set capture matched image\n\n\nSet capture matched images, the default value is true Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Set Capture Matched Image | false |\n\n", "tags": [], "source": null, "shortdoc": "Set capture matched image", "lineno": -1}, {"name": "Set Min Similarity", "args": [{"name": "minSimilarity", "kind": "POSITIONAL_OR_NAMED", "repr": "minSimilarity", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set min similarity (accuracy of matching elements).\n\n\nminSimilarity can be a decimal number between 0 and 1\n\n\nExample:\n\n\n|  |  |\n| :--- | :--- |\n| Set Min Similarity | 0.85 |\n\n", "tags": [], "source": null, "shortdoc": "Set min similarity (accuracy of matching elements).", "lineno": -1}, {"name": "Set Move Mouse Delay", "args": [{"name": "delay", "kind": "POSITIONAL_OR_NAMED", "repr": "delay", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set move mouse delay\n\n", "tags": [], "source": null, "shortdoc": "Set move mouse delay", "lineno": -1}, {"name": "Set Ocr Language", "args": [{"name": "ocrTextLanguage", "kind": "POSITIONAL_OR_NAMED", "repr": "ocrTextLanguage", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set OCR language\n\n\nSet OCR language Three letters parameter Default : eng for English language Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Set OCR Language | eng |\n| Set OCR Language | fra |\n\n", "tags": [], "source": null, "shortdoc": "Set OCR language", "lineno": -1}, {"name": "Set Ocr Text Read", "args": [{"name": "ocrTextRead", "kind": "POSITIONAL_OR_NAMED", "repr": "ocrTextRead", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "OCR text read If needed use Set OCR Language before.` Default language : English (eng).\n\n", "tags": [], "source": null, "shortdoc": "OCR text read If needed use Set OCR Language before.` Default language : English (eng).", "lineno": -1}, {"name": "Set Roi", "args": [{"name": "coordinates", "kind": "POSITIONAL_OR_NAMED", "repr": "coordinates", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}], "doc": "Set ROI\n\n\nSet region of interest on screen Optionally pass highlight timeout.\n\n\nExamples:${coordinates} | set variable | @{x, y, w, h] |\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Set ROI | ${coordinates} |  |\n| Set ROI | ${coordinates} | 2 |\n\n", "tags": [], "source": null, "shortdoc": "Set ROI", "lineno": -1}, {"name": "Set Show Actions", "args": [{"name": "showActions", "kind": "POSITIONAL_OR_NAMED", "repr": "showActions", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set show actions\n\n", "tags": [], "source": null, "shortdoc": "Set show actions", "lineno": -1}, {"name": "Set Slow Motion Delay", "args": [{"name": "delay", "kind": "POSITIONAL_OR_NAMED", "repr": "delay", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set slow motion delay Control the duration of the visual effect (seconds).\n\n", "tags": [], "source": null, "shortdoc": "Set slow motion delay Control the duration of the visual effect (seconds).", "lineno": -1}, {"name": "Set Timeout", "args": [{"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set timeout\n\n\nSet Sikuli timeout(seconds) Examples:\n\n\n|  |  |\n| :--- | :--- |\n| Set timeout | 10 |\n\n", "tags": [], "source": null, "shortdoc": "Set timeout", "lineno": -1}, {"name": "Set Wait Scan Rate", "args": [{"name": "delay", "kind": "POSITIONAL_OR_NAMED", "repr": "delay", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Set wait scan rate Specify the number of times actual search operations are performed per second while waiting for a pattern to appear or vanish.\n\n", "tags": [], "source": null, "shortdoc": "Set wait scan rate Specify the number of times actual search operations are performed per second while waiting for a pattern to appear or vanish.", "lineno": -1}, {"name": "Start Sikuli Process", "args": [{"name": "port", "kind": "POSITIONAL_OR_NAMED", "repr": "port=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "This keyword is used to start sikuli java process. If library is inited with mode \"OLD\", sikuli java process is started automatically. If library is inited with mode \"NEW\", this keyword should be used.\n\n\n:param port: port of sikuli java process, if value is None or 0, a random free port will be used :return: None\n\n", "tags": [], "source": null, "shortdoc": "This keyword is used to start sikuli java process. If library is inited with mode \"OLD\", sikuli java process is started automatically. If library is inited with mode \"NEW\", this keyword should be used.", "lineno": -1}, {"name": "Stop Remote Server", "args": [], "doc": "Stops the remote server.\n\n\nThe server may be configured so that users cannot stop it.\n\n", "tags": [], "source": null, "shortdoc": "Stops the remote server.", "lineno": -1}, {"name": "Type With Modifiers", "args": [{"name": "text", "kind": "POSITIONAL_OR_NAMED", "repr": "text", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "@modifiers", "kind": "VAR_POSITIONAL", "repr": "*modifiers", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Type with modifiers\n\n\nExamples: |Type With Modifiers| A | CTRL |\n\n", "tags": [], "source": null, "shortdoc": "Type with modifiers", "lineno": -1}, {"name": "Wait For Image", "args": [{"name": "wantedImage", "kind": "POSITIONAL_OR_NAMED", "repr": "wantedImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "notWantedImage", "kind": "POSITIONAL_OR_NAMED", "repr": "notWantedImage", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Wait For Image\n\n\nCheck wantedImage exist. If notWantedImage appear or timeout happened, throw exception\n\n\n@wantedImage: expected image in screen\n\n\n@notWantedImage: unexpected image in screen\n\n\n@timeout: wait seconds\n\n\nExamples:\n\n\n|  |  |  |  |\n| :--- | :--- | :--- | :--- |\n| Wait For Image | wanted.png | notWanted.png | 5 |\n\n", "tags": [], "source": null, "shortdoc": "Wait For Image", "lineno": -1}, {"name": "Wait For Multiple Images", "args": [{"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "pollingInterval", "kind": "POSITIONAL_OR_NAMED", "repr": "pollingInterval", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "expectedImages", "kind": "POSITIONAL_OR_NAMED", "repr": "expectedImages", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "notExpectedImages", "kind": "POSITIONAL_OR_NAMED", "repr": "notExpectedImages", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Wait For Multiple Images\n\n\nCheck if images exists in expectedImages or notExpectedImages list. If image appears that is listed in notExpectedImages list or timeout happened, throw exception If image appears that is listed in expectedImageslist return succesfully.\n\n\n@timeout: wait seconds\n\n\n@pollingInterval: time in seconds between screen checks\n\n\n@expectedImages: list of expected images in screen\n\n\n@notExpectedImages: list of not expected images in screen\n\n\nExamples:\n\n\n|  |  |  |  |  |\n| :--- | :--- | :--- | :--- | :--- |\n| @{wanted_images} = | Create List | wanted_image1.png | wanted_image2.png |  |\n| @{not_wanted_images} = | Create List | not_wanted_image1.png | not_wanted_image2.png | not_wanted_image3.png |\n| Wait For Multiple Images | 900 | 10 | ${wanted_images} | ${not_wanted_images} |\n\n", "tags": [], "source": null, "shortdoc": "Wait For Multiple Images", "lineno": -1}, {"name": "Wait Until Screen Contain", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Wait until screen contain Wait until image shown in screen\n\n", "tags": [], "source": null, "shortdoc": "Wait until screen contain Wait until image shown in screen", "lineno": -1}, {"name": "Wait Until Screen Not Contain", "args": [{"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Wait until screen not contain Wait until image not in screen\n\n", "tags": [], "source": null, "shortdoc": "Wait until screen not contain Wait until image not in screen", "lineno": -1}, {"name": "Wheel Down", "args": [{"name": "steps", "kind": "POSITIONAL_OR_NAMED", "repr": "steps", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image=", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Wheel down Move mouse to the target, and wheel down with give steps\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Wheel Down | 5 |  |\n| Wheel Down | 5 | test.png |\n\n", "tags": [], "source": null, "shortdoc": "Wheel down Move mouse to the target, and wheel down with give steps", "lineno": -1}, {"name": "Wheel Up", "args": [{"name": "steps", "kind": "POSITIONAL_OR_NAMED", "repr": "steps", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "image", "kind": "POSITIONAL_OR_NAMED", "repr": "image=", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Wheel up Move mouse to the target, and wheel up with give steps\n\n\nExamples:\n\n\n|  |  |  |\n| :--- | :--- | :--- |\n| Wheel Up | 5 |  |\n| Wheel Up | 5 | test.png |\n\n", "tags": [], "source": null, "shortdoc": "Wheel up Move mouse to the target, and wheel up with give steps", "lineno": -1}], "dataTypes": {}, "typedocs": []}