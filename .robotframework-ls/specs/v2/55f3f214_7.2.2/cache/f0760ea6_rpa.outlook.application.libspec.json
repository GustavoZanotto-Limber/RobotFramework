mtime:1744373185.712145
{"name": "RPA.Outlook.Application", "doc": "Outlook.Application is a library for controlling the Outlook application.\n\n**About Email Filtering**\n\nEmails can be filtered according to specification set by Restrict method of the\nItem class [https://docs.microsoft.com/en-us/office/vba/api/outlook.items.restrict](https://docs.microsoft.com/en-us/office/vba/api/outlook.items.restrict).\n\nCouple of examples:\n\n```robotframework\nGet Emails\n...   email_filter=[Subject]='test email'\n\nMove Emails\n...   email_filter=[SenderEmailAddress]='hello@gmail.com'\n```\n\n**Examples**\n\n**Robot Framework**\n\n```robotframework\n*** Settings ***\nLibrary                 RPA.Outlook.Application\nTask Setup              Open Application\nSuite Teardown          Quit Application\n\n*** Variables ***\n${RECIPIENT}            address@domain.com\n\n*** Tasks ***\nSend email\n    Send Email         recipients=${RECIPIENT}\n    ...                subject=This is the subject\n    ...                body=This is the message body\n    ...                attachments=approved.png\n```\n\n**Python**\n\n```python\nfrom RPA.Outlook.Application import Application\n\ndef send_email():\n    app = Application()\n    app.open_application()\n    app.send_email(\n        recipients='EMAILADDRESS_1, EMAILADDRESS_2',\n        subject='email subject',\n        body='email body message',\n        attachments='../orders.csv'\n```\n\nFor more information, see: [https://docs.microsoft.com/en-us/previous-versions/office/developer/office-2007/bb219950(v=office.12](https://docs.microsoft.com/en-us/previous-versions/office/developer/office-2007/bb219950(v=office.12))\n\n**Caveats**\n\nThis library works on a Windows operating system with UI enabled only, and you must\nensure that you open the app first with `Open Application` before running any\nother relevant keyword which requires to operate on an open app. The application is\nautomatically closed at the end of the task execution, so this can be changed by\nimporting the library with the autoexit=${False} setting.\n\n```robotframework\n*** Settings ***\nLibrary     RPA.Excel|Outlook|Word.Application    autoexit=${False}\n```\n\nIf you're running the Process by Control Room through a custom self-hosted Worker\nservice, then please make sure that you enable an RDP session by ticking \"Use\nDesktop Connection\" under the Step configuration.\n\nIf you still encounter issues with opening a document, please ensure that file can\nbe opened first manually and dismiss any alert potentially blocking the process.\n\nCheck the documentation below for more info:\n\n* [https://robocorp.com/docs/control-room/unattended/worker-setups/windows-desktop](https://robocorp.com/docs/control-room/unattended/worker-setups/windows-desktop)\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\Outlook\\Application.py", "lineno": 18, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "autoexit", "kind": "POSITIONAL_OR_NAMED", "repr": "autoexit: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Initialize the library instance by wrapping the COM Windows app.\n\nparam autoexit\n\n:   Automatically close the app when the process finishes.\n", "tags": [], "source": null, "shortdoc": "Initialize the library instance by wrapping the COM Windows app.", "lineno": 121}], "keywords": [{"name": "Close Document", "args": [{"name": "save_changes", "kind": "POSITIONAL_OR_NAMED", "repr": "save_changes: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Close the active document and app (if open).\n\nparam save_changes\n\n:   Enable changes saving on quit. (False by default)\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\application.py", "shortdoc": "Close the active document and app (if open).", "lineno": 184}, {"name": "Get Emails", "args": [{"name": "account_name", "kind": "POSITIONAL_OR_NAMED", "repr": "account_name: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "folder_name", "kind": "POSITIONAL_OR_NAMED", "repr": "folder_name: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "email_filter", "kind": "POSITIONAL_OR_NAMED", "repr": "email_filter: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "save_attachments", "kind": "POSITIONAL_OR_NAMED", "repr": "save_attachments: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "attachment_folder", "kind": "POSITIONAL_OR_NAMED", "repr": "attachment_folder: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "sort", "kind": "POSITIONAL_OR_NAMED", "repr": "sort: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "sort_key", "kind": "POSITIONAL_OR_NAMED", "repr": "sort_key: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "sort_descending", "kind": "POSITIONAL_OR_NAMED", "repr": "sort_descending: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Get emails from a specified email folder. Can be used to save attachments.\n\nparam account_name\n\n:   needs to be given if there are shared accounts in use,\n    defaults to None\n\nparam folder_name\n\n:   target folder where to get emails from, default Inbox\n\nparam email_filter\n\n:   how to filter email, default no filter,\n    ie. all emails in folder\n\nparam save_attachments\n\n:   if attachments should be saved, defaults to False\n\nparam attachment_folder\n\n:   target folder where attachments are saved,\n    defaults to current directory\n\nparam sort\n\n:   if emails should be sorted, defaults to False\n\nparam sort_key\n\n:   needs to be given if emails are to be sorted\n\nparam sort_descending\n\n:   set to False for ascending sort, defaults to True\n\nreturn\n\n:   list of emails (list of dictionaries)\n\nExample:\n\n```robotframework\n${emails}=  Get Emails\n...    email_folder=priority\n...    email_filter=[Subject]='incoming order'\n...    save_attachments=True\n...    attachment_folder=%{ROBOT_ROOT}${/}attachments\n...    sort=True\n...    sort_key=Received\n...    sort_descending=False\n```\n", "tags": [], "source": null, "shortdoc": "Get emails from a specified email folder. Can be used to save attachments.", "lineno": 279}, {"name": "Mark Email As Read", "args": [{"name": "email", "kind": "POSITIONAL_OR_NAMED", "repr": "email: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}, {"name": "read", "kind": "POSITIONAL_OR_NAMED", "repr": "read: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Mark email 'read' property. Can be used to mark email as unread.\n\nparam email\n\n:   target email\n\nparam read\n\n:   True marks email as Read, False as Unread\n\nExample:\n\n```robotframework\n${emails}=  Get Emails\n# Mark all as read\nFOR  ${email}  IN  @{emails}\n    Mark Email As Read  ${email}\nEND\n\n# Mark all as unread\nFOR  ${email}  IN  @{emails}\n    Mark Email As Read  ${email}  False\nEND\n```\n", "tags": [], "source": null, "shortdoc": "Mark email 'read' property. Can be used to mark email as unread.", "lineno": 427}, {"name": "Move Emails", "args": [{"name": "account_name", "kind": "POSITIONAL_OR_NAMED", "repr": "account_name: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "source_folder", "kind": "POSITIONAL_OR_NAMED", "repr": "source_folder: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "email_filter", "kind": "POSITIONAL_OR_NAMED", "repr": "email_filter: Any | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "target_folder", "kind": "POSITIONAL_OR_NAMED", "repr": "target_folder: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "mark_as_read", "kind": "POSITIONAL_OR_NAMED", "repr": "mark_as_read: bool = True", "required": true, "defaultValue": "True", "types": ["bool"], "typedocs": []}], "doc": "Move emails from source folder to target folder.\n\nUse of \"account_name\" is recommended if there are shared accounts in use.\n\nparam account_name\n\n:   needs to be given if there are shared accounts in use,\n    defaults to None\n\nparam source_folder\n\n:   folder where source emails exist\n\nparam email_filter\n\n:   how to filter email, default no filter,\n    ie. all emails in folder\n\nparam target_folder\n\n:   folder where emails are moved into\n\nparam mark_as_read\n\n:   mark emails as read after move, defaults to True\n\nreturn\n\n:   True if move operation was success, False if not\n\nPython example.\n\n```python\noutlook = RPA.Outlook.Application()\n\n# moving messages from Inbox to target_folder\noutlook.move_emails(\n    target_folder='Processed Invoices',\n    email_filter=\"[Subject]='incoming invoice'\"\n)\n\n# moving messages from source_folder to target_folder\noutlook.move_emails(\n    source_folder='Incoming Invoices',\n    target_folder='Processed Invoices',\n    email_filter=\"[Subject]='incoming invoice'\"\n)\n\n# move message objects from `get_emails` result\nemails = outlook.get_emails(\"[Subject]='incoming invoice'\")\noutlook.move_emails(\n    target_folder='Processed Invoices',\n    email_filter=emails\n)\n```\n\nRobot Framework example.\n\n```robotframework\n# moving messages from Inbox to target_folder\nMove Emails\n...    target_folder=Processed Invoices\n...    email_filter=[Subject]='incoming invoice'\n\n# moving messages from source_folder to target_folder\nMove Emails\n...    source_folder=Incoming Invoices\n...    target_folder=Processed Invoices\n...    email_filter=[Subject]='incoming invoice'\n\n# moving message objects from `Get Emails` result\n${emails}=    Get Emails    [Subject]='incoming invoice'\nMove Emails\n...    target_folder=Processed Invoices\n...    email_filter=${emails}\n```\n", "tags": [], "source": null, "shortdoc": "Move emails from source folder to target folder.", "lineno": 456}, {"name": "Open Application", "args": [{"name": "visible", "kind": "POSITIONAL_OR_NAMED", "repr": "visible: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "display_alerts", "kind": "POSITIONAL_OR_NAMED", "repr": "display_alerts: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Open the application.\n\nparam visible\n\n:   Show the window on opening. (False by default)\n\nparam display_alerts\n\n:   Display alert popups. (False by default)\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\application.py", "shortdoc": "Open the application.", "lineno": 145}, {"name": "Quit Application", "args": [{"name": "save_changes", "kind": "POSITIONAL_OR_NAMED", "repr": "save_changes: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Quit the application.\n\nparam save_changes\n\n:   Enable to save changes on quit. (False by default)\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\application.py", "shortdoc": "Quit the application.", "lineno": 209}, {"name": "Save Email Attachments", "args": [{"name": "attachments", "kind": "POSITIONAL_OR_NAMED", "repr": "attachments: Any", "required": true, "defaultValue": null, "types": ["Any"], "typedocs": []}, {"name": "attachment_folder", "kind": "POSITIONAL_OR_NAMED", "repr": "attachment_folder: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "overwrite", "kind": "POSITIONAL_OR_NAMED", "repr": "overwrite: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Save email attachments.\n\nNote. Keyword \"Get Emails\" can be also used to save attachments.\n\nparam attachments\n\n:   all attachments from email or single attachment\n\nparam attachment_folder\n\n:   target folder where attachments are saved,\n    defaults to current directory\n\nparam overwrite\n\n:   overwrite existing file if True, defaults to False\n\nExample:\n\n```robotframework\n${emails} =  Get Emails\n...    email_folder=priority\nFOR  ${email}  IN   @{emails}\n    FOR  ${attachment}  IN  @{email}[Attachments]\n        IF  ${attachment}[size] < 100000   # bytes\n            Save Email Attachments\n            ...  ${attachment}\n            ...  ${CURDIR}${/}attachments\n        ELSE IF  \".pdf\" in \"${attachment}[filename]\"\n            Save Email Attachments\n            ...  ${attachment}\n            ...  ${CURDIR}${/}attachments${/}pdf\n        END\n    END\nEND\n```\n", "tags": [], "source": null, "shortdoc": "Save email attachments.", "lineno": 384}, {"name": "Send Email", "args": [{"name": "recipients", "kind": "POSITIONAL_OR_NAMED", "repr": "recipients: str | List[str]", "required": true, "defaultValue": null, "types": ["Union"], "typedocs": []}, {"name": "subject", "kind": "POSITIONAL_OR_NAMED", "repr": "subject: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "body", "kind": "POSITIONAL_OR_NAMED", "repr": "body: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "html_body", "kind": "POSITIONAL_OR_NAMED", "repr": "html_body: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "attachments", "kind": "POSITIONAL_OR_NAMED", "repr": "attachments: str | List[str] | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "save_as_draft", "kind": "POSITIONAL_OR_NAMED", "repr": "save_as_draft: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "cc_recipients", "kind": "POSITIONAL_OR_NAMED", "repr": "cc_recipients: str | List[str] | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "bcc_recipients", "kind": "POSITIONAL_OR_NAMED", "repr": "bcc_recipients: str | List[str] | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "reply_to", "kind": "POSITIONAL_OR_NAMED", "repr": "reply_to: str | List[str] | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "check_names", "kind": "POSITIONAL_OR_NAMED", "repr": "check_names: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}], "doc": "Send email with Outlook\n\nparam recipients\n\n:   list of addresses\n\nparam subject\n\n:   email subject\n\nparam body\n\n:   email body\n\nparam html_body\n\n:   True if body contains HTML, defaults to False\n\nparam attachments\n\n:   list of filepaths to include in the email, defaults to []\n\nparam save_as_draft\n\n:   email is saved as draft when True\n\nparam cc_recipients\n\n:   list of addresses for CC field, default None\n\nparam bcc_recipients\n\n:   list of addresses for BCC field, default None\n\nparam reply_to\n\n:   list of addresses for changing email's reply-to field,\n    default None\n\nparam check_names\n\n:   all recipients are checked if the email address is\n    recognized on True, default False\n\nreturn\n\n:   True if there were no errors\n\nExample:\n\n```python\nlibrary = Outlook()\nlibrary.open_application()\ncc_recipients = [\"recipient3@domain.com\",\"recipient4@domain.com\"]\nlibrary.send_email(\n    recipients=\"recipient1@domain.com\",\n    cc_recipients=cc_recipients,\n    bcc_recipients=\"recipient3@domain.com;recipient4@domain.com\",\n    subject=\"hello from Outlook\",\n    body=\"empty body\",\n    attachments=os.path.join(os.path.curdir, \"example.xslx\")\n)\n```\n\n```robotframework\n${cc}=  Create List   recipient3@domain.com   recipient4@domain.com\nSend Email\n...    recipients=recipient1@domain.com\n...    cc_repients=${cc}\n...    bcc_repients=recipient5@domain.com;recipient6@domain.com\n...    subject=hello from Outlook\n...    body=empty body\n...    attachments=${CURDIR}${/}example.xlsx\n```\n", "tags": [], "source": null, "shortdoc": "Send email with Outlook", "lineno": 78}, {"name": "Set Object Property", "args": [{"name": "object_instance", "kind": "POSITIONAL_OR_NAMED", "repr": "object_instance", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "property_name", "kind": "POSITIONAL_OR_NAMED", "repr": "property_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "value", "kind": "POSITIONAL_OR_NAMED", "repr": "value: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Set the property of any object.\n\nThis is a utility keyword for Robot Framework syntax to set object\nproperty values.\n\n```robotframework\n${new_value}=    Replace String    ${value}    10.132.    5511.11.\nSet Object Property    ${result}    Value    ${new_value}\n```\n\nparam object_instance\n\n:   object instance to set the property\n\nparam property_name\n\n:   property name to set\n\nparam value\n\n:   value to set\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\application.py", "shortdoc": "Set the property of any object.", "lineno": 224}, {"name": "Wait For Email", "args": [{"name": "criterion", "kind": "POSITIONAL_OR_NAMED", "repr": "criterion: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout: float = 5.0", "required": true, "defaultValue": "5.0", "types": ["float"], "typedocs": []}, {"name": "interval", "kind": "POSITIONAL_OR_NAMED", "repr": "interval: float = 1.0", "required": true, "defaultValue": "1.0", "types": ["float"], "typedocs": []}], "doc": "Wait for email matching criterion to arrive into mailbox.\n\nparam criterion\n\n:   email filter to wait for, defaults to \"\"\n\nparam timeout\n\n:   total time in seconds to wait for email, defaults to 5.0\n\nparam interval\n\n:   time in seconds for new check, defaults to 1.0\n\nreturn\n\n:   list of messages or False\n\nPossible wait criterias are: SUBJECT, SENDER and BODY\n\nExample:\n\n```robotframework\nWait for Email     SUBJECT:rpa task calling    timeout=300    interval=10\n```\n", "tags": [], "source": null, "shortdoc": "Wait for email matching criterion to arrive into mailbox.", "lineno": 237}], "dataTypes": {}, "typedocs": []}