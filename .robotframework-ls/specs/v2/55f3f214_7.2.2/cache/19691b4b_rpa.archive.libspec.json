mtime:1744373224.0797076
{"name": "RPA.Archive", "doc": "Archive is a library for operating with ZIP and TAR packages.\n\n**Examples**\n\n```robotframework\n*** Settings ***\nLibrary  RPA.Archive\n\n*** Tasks ***\nCreating a ZIP archive\n   Archive Folder With ZIP   ${CURDIR}${/}tasks  tasks.zip   recursive=True  include=*.robot  exclude=/.*\n   @{files}                  List Archive             tasks.zip\n   FOR  ${file}  IN  ${files}\n      Log  ${file}\n   END\n   Add To Archive            .${/}..${/}missing.robot  tasks.zip\n   &{info}                   Get Archive Info\n```\n\n```python\nfrom RPA.Archive import Archive\n\nlib = Archive()\nlib.archive_folder_with_tar('./tasks', 'tasks.tar', recursive=True)\nfiles = lib.list_archive('tasks.tar')\nfor file in files:\n   print(file)\n```\n", "version": null, "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\Archive.py", "lineno": 45, "tags": [], "inits": [], "keywords": [{"name": "Add To Archive", "args": [{"name": "files", "kind": "POSITIONAL_OR_NAMED", "repr": "files: List | str", "required": true, "defaultValue": null, "types": ["Union"], "typedocs": []}, {"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "folder", "kind": "POSITIONAL_OR_NAMED", "repr": "folder: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Add file(s) to the archive\n\nparam files\n\n:   name of the file, or list of files, to add\n\nparam archive_name\n\n:   filename of the archive\n\nparam folder\n\n:   name of the folder where the file will be added, relative path within the archive\n\nreturn\n\n:   None\n\nThis keyword adds a file or list of files into an existing archive. Files\ncan be added to archive structure with relative path using argument folder.\n\nExample:\n\n```robotframework\nAdd To Archive  extrafile.txt  myfiles.zip\nAdd To Archive  stat.png       archive.tar.gz  images\n@{files}        Create List    filename1.txt   filename2.txt\nAdd To Archive  ${files}       files.tar\n```\n", "tags": [], "source": null, "shortdoc": "Add file(s) to the archive", "lineno": 205}, {"name": "Archive Folder With Tar", "args": [{"name": "folder", "kind": "POSITIONAL_OR_NAMED", "repr": "folder: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "recursive", "kind": "POSITIONAL_OR_NAMED", "repr": "recursive: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "include", "kind": "POSITIONAL_OR_NAMED", "repr": "include: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "exclude", "kind": "POSITIONAL_OR_NAMED", "repr": "exclude: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Create a tar/tar.gz archive of a folder\n\nparam folder\n\n:   name of the folder to archive\n\nparam archive_name\n\n:   filename of the archive\n\nparam recursive\n\n:   should sub directories be included, default is False\n\nparam include\n\n:   define file pattern to include in the package, default is None which means all files are included\n\nparam exclude\n\n:   define file pattern to exclude from the package, default is None\n\nreturn\n\n:   None\n\nThis keyword creates an TAR or TAR.GZ archive of a local folder. Type of archive\nis determined by the file extension. By default subdirectories are not\nincluded, but they can included using recursive argument.\n\nTo include only certain files, like TXT files, the argument include can be used.\nSimilarly to exclude certain file, like dotfiles, the argument exclude can be used.\n\nExample:\n\n```robotframework\nArchive Folder With TAR  ${CURDIR}${/}documents  documents.tar\nArchive Folder With TAR  ${CURDIR}${/}tasks      tasks.tar.gz   include=*.robot\nArchive Folder With TAR  ${CURDIR}${/}tasks      tasks.tar      exclude=/.*\nArchive Folder With TAR  ${CURDIR}${/}documents  documents.tar  recursive=True\n```\n", "tags": [], "source": null, "shortdoc": "Create a tar/tar.gz archive of a folder", "lineno": 164}, {"name": "Archive Folder With Zip", "args": [{"name": "folder", "kind": "POSITIONAL_OR_NAMED", "repr": "folder: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "recursive", "kind": "POSITIONAL_OR_NAMED", "repr": "recursive: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "include", "kind": "POSITIONAL_OR_NAMED", "repr": "include: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "exclude", "kind": "POSITIONAL_OR_NAMED", "repr": "exclude: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "compression", "kind": "POSITIONAL_OR_NAMED", "repr": "compression: str = stored", "required": true, "defaultValue": "stored", "types": ["str"], "typedocs": []}], "doc": "Create a zip archive of a folder\n\nparam folder\n\n:   name of the folder to archive\n\nparam archive_name\n\n:   filename of the archive\n\nparam recursive\n\n:   should sub directories be included, default is False\n\nparam include\n\n:   define file pattern to include in the package, default is None which means all files are included\n\nparam exclude\n\n:   define file pattern to exclude from the package, default is None\n\nparam compression\n\n:   type of package compression method, default is \"stored\"\n\nreturn\n\n:   None\n\nThis keyword creates an ZIP archive of a local folder. By default subdirectories are not\nincluded, but they can be included using the recursive argument.\n\nTo include only certain files, like TXT files, the argument include can be used.\nSimilarly to exclude certain files, like dotfiles, the argument exclude can be used.\n\nCompression methods:\n\n* stored, default\n\n* deflated\n\n* bzip2\n\n* lzma\n\nExample:\n\n```robotframework\nArchive Folder With Zip  ${CURDIR}${/}documents  mydocs.zip\nArchive Folder With Zip  ${CURDIR}${/}tasks      robottasks.zip   include=*.robot\nArchive Folder With Zip  ${CURDIR}${/}tasks      no_dotfiles.zip  exclude=/.*\nArchive Folder With Zip  ${CURDIR}${/}documents  documents.zip    recursive=True\nArchive Folder With Zip  ${CURDIR}               packagelzma.zip  compression=lzma\nArchive Folder With Zip  ${CURDIR}               bzipped.zip      compression=bzip2\n```\n\n```python\nfrom RPA.Archive import Archive\n\nlib = Archive()\nlib.archive_folder_with_zip('./documents', 'mydocs.zip')\nlib.archive_folder_with_zip('./tasks', 'robottasks.zip', include='*.robot')\nlib.archive_folder_with_zip('./tasks', 'no_dotfiles.zip', exclude='/.*')\nlib.archive_folder_with_zip('./documents', 'documents.zip', recursive=True)\nlib.archive_folder_with_zip('./', 'packagelzma.zip', compression='lzma')\nlib.archive_folder_with_zip('./', 'bzipped.zip', compression='bzip2')\n```\n", "tags": [], "source": null, "shortdoc": "Create a zip archive of a folder", "lineno": 83}, {"name": "Extract Archive", "args": [{"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "members", "kind": "POSITIONAL_OR_NAMED", "repr": "members: List | str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Extract files from archive into local directory\n\nparam archive_name\n\n:   filename of the archive\n\nparam path\n\n:   filepath to extract file into, default is current working directory\n\nparam members\n\n:   list of files to extract from archive, by default\n    all files in archive are extracted\n\nreturn\n\n:   None\n\nThis keyword supports extracting files from zip, tar and tar.gz archives.\n\nBy default file is extracted into current working directory, but path argument\ncan be set to define extraction path.\n\nExample:\n\n```robotframework\nExtract Archive    myfiles.zip   ${CURDIR}${/}extracted\n@{files}           Create List   filename1.txt    filename2.txt\nExtract Archive    archive.tar   C:${/}myfiles${/}  ${files}\n```\n", "tags": [], "source": null, "shortdoc": "Extract files from archive into local directory", "lineno": 347}, {"name": "Extract File From Archive", "args": [{"name": "filename", "kind": "POSITIONAL_OR_NAMED", "repr": "filename: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}], "doc": "Extract a file from archive into local directory\n\nparam filename\n\n:   name of the file to extract\n\nparam archive_name\n\n:   filename of the archive\n\nparam path\n\n:   filepath to extract file into,\n    default is current working directory\n\nreturn\n\n:   None\n\nThis keyword supports extracting a file from zip, tar and tar.gz archives.\n\nBy default file is extracted into current working directory,\nbut path argument can be set to define extraction path.\n\nExample:\n\n```robotframework\nExtract File From Archive    extrafile.txt   myfiles.zip\nExtract File From Archive    background.png  images.tar.gz  ${CURDIR}${/}extracted\n```\n", "tags": [], "source": null, "shortdoc": "Extract a file from archive into local directory", "lineno": 388}, {"name": "Get Archive Info", "args": [{"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "Get information about the archive\n\nparam archive_name\n\n:   filename of the archive\n\nreturn\n\n:   dictionary variable containing the keys filename, filemode, size, mtime, modified\n\nReturns following file attributes in a dictionary:\n\n* filename\n\n* filemode\n\n* size\n\n* mtime\n\n* last modification time in format %d.%m.%Y %H:%M:%S\n\nExample:\n\n```robotframework\n&{archiveinfo}   Get Archive Info    myfiles.zip\n```\n", "tags": [], "source": null, "shortdoc": "Get information about the archive", "lineno": 305}, {"name": "List Archive", "args": [{"name": "archive_name", "kind": "POSITIONAL_OR_NAMED", "repr": "archive_name: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}], "doc": "List files in an archive\n\nparam archive_name\n\n:   filename of the archive\n\nreturn\n\n:   dictionary variable containing the keys name, size, mtime, modified\n\nReturns list of files, where each file in a list is a dictionary\nwith following attributes:\n\n* name\n\n* size\n\n* mtime\n\n* last modification time in format %d.%m.%Y %H:%M:%S\n\nExample:\n\n```robotframework\n@{files}   List Archive    myfiles.zip\nFOR  ${file}  IN   ${files}\n    Log  ${file}[filename]\n    Log  ${file}[size]\n    Log  ${file}[mtime]\nEND\n```\n", "tags": [], "source": null, "shortdoc": "List files in an archive", "lineno": 253}], "dataTypes": {}, "typedocs": []}