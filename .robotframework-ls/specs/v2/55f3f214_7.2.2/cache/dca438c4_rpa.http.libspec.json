mtime:1744373188.7784498
{"name": "RPA.HTTP", "doc": "The *RPA.HTTP* library extends functionality of the [RequestsLibrary](https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html).\nSee that documentation for several examples of how to issue `GET`\nrequests and utilize the returned `result` objects.\n\nThis extension provides helper keywords to get an HTTP resource on a\nsession. The `HTTP Get` and `Download` keywords will initiate a\nsession if one does not exist for the provided URL, or use an existing\nsession. When using these keywords, you do not need to manage\nsessions with `Create Session`. Session management is still\nrequired if you use the underlying session keywords, e.g.,\n`\\* On Session`.\n", "version": "0.9.7", "specversion": "6", "type": "LIBRARY", "scope": "GLOBAL", "docFormat": "markdown", "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RPA\\HTTP.py", "lineno": 71, "tags": [], "inits": [{"name": "__init__", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Initialize self.  See help(type(self)) for accurate signature.\n", "tags": [], "source": null, "shortdoc": "Initialize self.  See help(type(self)) for accurate signature.", "lineno": 91}], "keywords": [{"name": "Check Vulnerabilities", "args": [], "doc": "Check for possible vulnerabilities in the installed runtime\nenvironment packages.\n\nCurrently will check only for OpenSSL version and outputs warning message on any\ndiscovered vulnerability.\n\nreturn\n\n:   list of all check results\n\n```robotframework\n*** Tasks ***\nVulnerability Check\n    ${results}=    Check Vulnerabilities\n    FOR    ${result}    IN    @{results}\n        Log To Console    TYPE: ${result}[type]\n        Log To Console    VULNERABLE: ${result}[vulnerable]\n        Log To Console    MESSAGE: ${result}[message]\n    END\n```\n", "tags": [], "source": null, "shortdoc": "Check for possible vulnerabilities in the installed runtime environment packages.", "lineno": 262}, {"name": "Create Client Cert Session", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "cookies", "kind": "POSITIONAL_OR_NAMED", "repr": "cookies={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "client_certs", "kind": "POSITIONAL_OR_NAMED", "repr": "client_certs=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "proxies", "kind": "POSITIONAL_OR_NAMED", "repr": "proxies=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}, {"name": "debug", "kind": "POSITIONAL_OR_NAMED", "repr": "debug=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "max_retries", "kind": "POSITIONAL_OR_NAMED", "repr": "max_retries=3", "required": true, "defaultValue": "3", "types": [], "typedocs": []}, {"name": "backoff_factor", "kind": "POSITIONAL_OR_NAMED", "repr": "backoff_factor=0.1", "required": true, "defaultValue": "0.1", "types": [], "typedocs": []}, {"name": "disable_warnings", "kind": "POSITIONAL_OR_NAMED", "repr": "disable_warnings=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "retry_status_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_status_list=[]", "required": true, "defaultValue": "[]", "types": [], "typedocs": []}, {"name": "retry_method_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_method_list=['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "required": true, "defaultValue": "['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "types": [], "typedocs": []}], "doc": "Create Session: create a HTTP session to a server\n\n`url` Base url of the server\n\n`alias` Robot Framework alias to identify the session\n\n`headers` Dictionary of default headers\n\n`cookies` Dictionary of cookies\n\n`client_certs` ['client certificate', 'client key'] PEM files containing the client key and certificate\n\n`timeout` Connection timeout\n\n`proxies` Dictionary mapping protocol or protocol and host to the URL of the proxy\n\n:   (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})\n\n`verify` Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n\n:   Defaults to False.\n\n`debug` Enable http verbosity option more information\n\n:   [https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel](https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel)\n\n`max_retries` Number of maximum retries each connection should attempt.\n\n:   By default it will retry 3 times in case of connection errors only.\n    A 0 value will disable any kind of retries regardless of other retry settings.\n    In case the number of retries is reached a retry exception is raised.\n\n`disable_warnings` Disable requests warning useful when you have large number of testcases\n\n`backoff_factor` Introduces a delay time between retries that is longer after each retry.\n\n:   eg. if backoff_factor is set to 0.1\n    the sleep between attemps will be: 0.0, 0.2, 0.4\n    More info here: [https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html)\n\n`retry_method_list` List of uppercased HTTP method verbs where retries are allowed.\n\n:   By default retries are allowed only on HTTP requests methods that are considered to be\n    idempotent (multiple requests with the same parameters end with the same state).\n    eg. set to ['POST', 'GET'] to retry only those kind of requests.\n\n`retry_status_list` List of integer HTTP status codes that, if returned, a retry is attempted.\n\n:   eg. set to [502, 503] to retry requests if those status are returned.\n    Note that max_retries must be greater than 0.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Create Session: create a HTTP session to a server", "lineno": 191}, {"name": "Create Custom Session", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "auth", "kind": "POSITIONAL_OR_NAMED", "repr": "auth", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "cookies", "kind": "POSITIONAL_OR_NAMED", "repr": "cookies={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "proxies", "kind": "POSITIONAL_OR_NAMED", "repr": "proxies=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}, {"name": "debug", "kind": "POSITIONAL_OR_NAMED", "repr": "debug=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "max_retries", "kind": "POSITIONAL_OR_NAMED", "repr": "max_retries=3", "required": true, "defaultValue": "3", "types": [], "typedocs": []}, {"name": "backoff_factor", "kind": "POSITIONAL_OR_NAMED", "repr": "backoff_factor=0.1", "required": true, "defaultValue": "0.1", "types": [], "typedocs": []}, {"name": "disable_warnings", "kind": "POSITIONAL_OR_NAMED", "repr": "disable_warnings=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "retry_status_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_status_list=[]", "required": true, "defaultValue": "[]", "types": [], "typedocs": []}, {"name": "retry_method_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_method_list=['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "required": true, "defaultValue": "['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "types": [], "typedocs": []}], "doc": "Create Session: create a HTTP session to a server\n\n`url` Base url of the server\n\n`alias` Robot Framework alias to identify the session\n\n`headers` Dictionary of default headers\n\n`cookies` Dictionary of cookies\n\n`auth` A Custom Authentication object to be passed on to the requests library.\n\n:   [http://docs.python-requests.org/en/master/user/advanced/#custom-authentication](http://docs.python-requests.org/en/master/user/advanced/#custom-authentication)\n\n`timeout` Connection timeout\n\n`proxies` Dictionary mapping protocol or protocol and host to the URL of the proxy\n\n:   (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})\n\n`verify` Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n\n:   Defaults to False.\n\n`debug` Enable http verbosity option more information\n\n:   [https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel](https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel)\n\n`max_retries` Number of maximum retries each connection should attempt.\n\n:   By default it will retry 3 times in case of connection errors only.\n    A 0 value will disable any kind of retries regardless of other retry settings.\n    In case the number of retries is reached a retry exception is raised.\n\n`disable_warnings` Disable requests warning useful when you have large number of testcases\n\n`backoff_factor` Introduces a delay time between retries that is longer after each retry.\n\n:   eg. if backoff_factor is set to 0.1\n    the sleep between attemps will be: 0.0, 0.2, 0.4\n    More info here: [https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html)\n\n`retry_method_list` List of uppercased HTTP method verbs where retries are allowed.\n\n:   By default retries are allowed only on HTTP requests methods that are considered to be\n    idempotent (multiple requests with the same parameters end with the same state).\n    eg. set to ['POST', 'GET'] to retry only those kind of requests.\n\n`retry_status_list` List of integer HTTP status codes that, if returned, a retry is attempted.\n\n:   eg. set to [502, 503] to retry requests if those status are returned.\n    Note that max_retries must be greater than 0.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Create Session: create a HTTP session to a server", "lineno": 277}, {"name": "Create Digest Session", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "auth", "kind": "POSITIONAL_OR_NAMED", "repr": "auth", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "cookies", "kind": "POSITIONAL_OR_NAMED", "repr": "cookies={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "proxies", "kind": "POSITIONAL_OR_NAMED", "repr": "proxies=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}, {"name": "debug", "kind": "POSITIONAL_OR_NAMED", "repr": "debug=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "max_retries", "kind": "POSITIONAL_OR_NAMED", "repr": "max_retries=3", "required": true, "defaultValue": "3", "types": [], "typedocs": []}, {"name": "backoff_factor", "kind": "POSITIONAL_OR_NAMED", "repr": "backoff_factor=0.1", "required": true, "defaultValue": "0.1", "types": [], "typedocs": []}, {"name": "disable_warnings", "kind": "POSITIONAL_OR_NAMED", "repr": "disable_warnings=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "retry_status_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_status_list=[]", "required": true, "defaultValue": "[]", "types": [], "typedocs": []}, {"name": "retry_method_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_method_list=['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "required": true, "defaultValue": "['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "types": [], "typedocs": []}], "doc": "Create Session: create a HTTP session to a server\n\n`url` Base url of the server\n\n`alias` Robot Framework alias to identify the session\n\n`headers` Dictionary of default headers\n\n`cookies` Dictionary of cookies\n\n`auth` ['DOMAIN', 'username', 'password'] for NTLM Authentication\n\n`timeout` Connection timeout\n\n`proxies` Dictionary mapping protocol or protocol and host to the URL of the proxy\n\n:   (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})\n\n`verify` Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n\n:   Defaults to False.\n\n`debug` Enable http verbosity option more information\n\n:   [https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel](https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel)\n\n`max_retries` Number of maximum retries each connection should attempt.\n\n:   By default it will retry 3 times in case of connection errors only.\n    A 0 value will disable any kind of retries regardless of other retry settings.\n    In case the number of retries is reached a retry exception is raised.\n\n`disable_warnings` Disable requests warning useful when you have large number of testcases\n\n`backoff_factor` Introduces a delay time between retries that is longer after each retry.\n\n:   eg. if backoff_factor is set to 0.1\n    the sleep between attemps will be: 0.0, 0.2, 0.4\n    More info here: [https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html)\n\n`retry_method_list` List of uppercased HTTP method verbs where retries are allowed.\n\n:   By default retries are allowed only on HTTP requests methods that are considered to be\n    idempotent (multiple requests with the same parameters end with the same state).\n    eg. set to ['POST', 'GET'] to retry only those kind of requests.\n\n`retry_status_list` List of integer HTTP status codes that, if returned, a retry is attempted.\n\n:   eg. set to [502, 503] to retry requests if those status are returned.\n    Note that max_retries must be greater than 0.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Create Session: create a HTTP session to a server", "lineno": 361}, {"name": "Create Ntlm Session", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "auth", "kind": "POSITIONAL_OR_NAMED", "repr": "auth", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "cookies", "kind": "POSITIONAL_OR_NAMED", "repr": "cookies={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "proxies", "kind": "POSITIONAL_OR_NAMED", "repr": "proxies=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}, {"name": "debug", "kind": "POSITIONAL_OR_NAMED", "repr": "debug=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "max_retries", "kind": "POSITIONAL_OR_NAMED", "repr": "max_retries=3", "required": true, "defaultValue": "3", "types": [], "typedocs": []}, {"name": "backoff_factor", "kind": "POSITIONAL_OR_NAMED", "repr": "backoff_factor=0.1", "required": true, "defaultValue": "0.1", "types": [], "typedocs": []}, {"name": "disable_warnings", "kind": "POSITIONAL_OR_NAMED", "repr": "disable_warnings=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "retry_status_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_status_list=[]", "required": true, "defaultValue": "[]", "types": [], "typedocs": []}, {"name": "retry_method_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_method_list=['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "required": true, "defaultValue": "['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "types": [], "typedocs": []}], "doc": "Create Session: create a HTTP session to a server\n\n`url` Base url of the server\n\n`alias` Robot Framework alias to identify the session\n\n`headers` Dictionary of default headers\n\n`cookies` Dictionary of cookies\n\n`auth` ['DOMAIN', 'username', 'password'] for NTLM Authentication\n\n`timeout` Connection timeout\n\n`proxies` Dictionary mapping protocol or protocol and host to the URL of the proxy\n\n:   (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})\n\n`verify` Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n\n:   Defaults to False.\n\n`debug` Enable http verbosity option more information\n\n:   [https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel](https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel)\n\n`max_retries` Number of maximum retries each connection should attempt.\n\n:   By default it will retry 3 times in case of connection errors only.\n    A 0 value will disable any kind of retries regardless of other retry settings.\n    In case the number of retries is reached a retry exception is raised.\n\n`disable_warnings` Disable requests warning useful when you have large number of testcases\n\n`backoff_factor` Introduces a delay time between retries that is longer after each retry.\n\n:   eg. if backoff_factor is set to 0.1\n    the sleep between attemps will be: 0.0, 0.2, 0.4\n    More info here: [https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html)\n\n`retry_method_list` List of uppercased HTTP method verbs where retries are allowed.\n\n:   By default retries are allowed only on HTTP requests methods that are considered to be\n    idempotent (multiple requests with the same parameters end with the same state).\n    eg. set to ['POST', 'GET'] to retry only those kind of requests.\n\n`retry_status_list` List of integer HTTP status codes that, if returned, a retry is attempted.\n\n:   eg. set to [502, 503] to retry requests if those status are returned.\n    Note that max_retries must be greater than 0.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Create Session: create a HTTP session to a server", "lineno": 439}, {"name": "Create Session", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "cookies", "kind": "POSITIONAL_OR_NAMED", "repr": "cookies={}", "required": true, "defaultValue": "{}", "types": [], "typedocs": []}, {"name": "auth", "kind": "POSITIONAL_OR_NAMED", "repr": "auth=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "proxies", "kind": "POSITIONAL_OR_NAMED", "repr": "proxies=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}, {"name": "debug", "kind": "POSITIONAL_OR_NAMED", "repr": "debug=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "max_retries", "kind": "POSITIONAL_OR_NAMED", "repr": "max_retries=3", "required": true, "defaultValue": "3", "types": [], "typedocs": []}, {"name": "backoff_factor", "kind": "POSITIONAL_OR_NAMED", "repr": "backoff_factor=0.1", "required": true, "defaultValue": "0.1", "types": [], "typedocs": []}, {"name": "disable_warnings", "kind": "POSITIONAL_OR_NAMED", "repr": "disable_warnings=0", "required": true, "defaultValue": "0", "types": [], "typedocs": []}, {"name": "retry_status_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_status_list=[]", "required": true, "defaultValue": "[]", "types": [], "typedocs": []}, {"name": "retry_method_list", "kind": "POSITIONAL_OR_NAMED", "repr": "retry_method_list=['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "required": true, "defaultValue": "['GET', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE', 'PUT']", "types": [], "typedocs": []}], "doc": "Create Session: create a HTTP session to a server\n\n`alias` Robot Framework alias to identify the session\n\n`url` Base url of the server\n\n`headers` Dictionary of default headers\n\n`cookies` Dictionary of cookies\n\n`auth` List of username & password for HTTP Basic Auth\n\n`timeout` Connection timeout\n\n`proxies` Dictionary mapping protocol or protocol and host to the URL of the proxy\n\n:   (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'})\n\n`verify` Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n\n`debug` Enable http verbosity option more information\n\n:   [https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel](https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel)\n\n`max_retries` Number of maximum retries each connection should attempt.\n\n:   By default it will retry 3 times in case of connection errors only.\n    A 0 value will disable any kind of retries regardless of other retry settings.\n    In case the number of retries is reached a retry exception is raised.\n\n`disable_warnings` Disable requests warning useful when you have large number of testcases\n\n`backoff_factor` Introduces a delay time between retries that is longer after each retry.\n\n:   eg. if backoff_factor is set to 0.1\n    the sleep between attemps will be: 0.0, 0.2, 0.4\n    More info here: [https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html)\n\n`retry_method_list` List of uppercased HTTP method verbs where retries are allowed.\n\n:   By default retries are allowed only on HTTP requests methods that are considered to be\n    idempotent (multiple requests with the same parameters end with the same state).\n    eg. set to ['POST', 'GET'] to retry only those kind of requests.\n\n`retry_status_list` List of integer HTTP status codes that, if returned, a retry is attempted.\n\n:   eg. set to [502, 503] to retry requests if those status are returned.\n    Note that max_retries must be greater than 0.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Create Session: create a HTTP session to a server", "lineno": 109}, {"name": "DELETE", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a DELETE request.\n\nThe endpoint used to send the request is the `url` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a DELETE request.", "lineno": 136}, {"name": "DELETE On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a DELETE request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to send the request is the `url` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a DELETE request on a previously created HTTP Session.", "lineno": 149}, {"name": "Delete All Sessions", "args": [], "doc": "Removes all the session objects\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Removes all the session objects", "lineno": 544}, {"name": "Delete Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "data", "kind": "POSITIONAL_OR_NAMED", "repr": "data=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "json", "kind": "POSITIONAL_OR_NAMED", "repr": "json=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "params", "kind": "POSITIONAL_OR_NAMED", "repr": "params=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use DELETE On Session instead.\n\nSend a DELETE request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the DELETE request to\n\n`json` a value that will be json encoded\n\n:   and sent as request data if data is not specified\n\n`headers` a dictionary of headers to use with the request\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use DELETE On Session instead.", "lineno": 261}, {"name": "Download", "args": [{"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "target_file", "kind": "POSITIONAL_OR_NAMED", "repr": "target_file: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify: bool | str = True", "required": true, "defaultValue": "True", "types": ["Union"], "typedocs": []}, {"name": "force_new_session", "kind": "POSITIONAL_OR_NAMED", "repr": "force_new_session: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "overwrite", "kind": "POSITIONAL_OR_NAMED", "repr": "overwrite: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "stream", "kind": "POSITIONAL_OR_NAMED", "repr": "stream: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "An alias for the `HTTP Get` keyword.\n\nThe difference in use is that the URL is always downloaded based on\nthe URL path (even without `target_file`). If there is a filename\nin the path, then that is used as `target_file` to save to. By default,\nthe filename will be \"downloaded.html\".\n\n```robotframework\n*** Settings ***\nLibrary    RPA.HTTP\n\n*** Variables ***\n${DOWNLOAD_PATH}=   ${OUTPUT DIR}${/}downloads\n${WORD_EXAMPLE}=    https://file-examples.com/wp-content/uploads/2017/02/file-sample_100kB.doc\n${EXCEL_EXAMPLE}=   https://file-examples.com/wp-content/uploads/2017/02/file_example_XLS_10.xls\n\n*** Tasks ***\nDownload files with reused session with provided file names\n    # Starts a new session\n    Download    ${WORD_EXAMPLE}    target_file=${DOWNLOAD_PATH}\n    # Uses the previous session\n    Download    ${EXCEL_EXAMPLE}    target_file=${DOWNLOAD_PATH}\n    # Above files are downloaded using the same names as they have\n    # on the remote server.\n```\n\nparam url\n\n:   target URL for GET request\n\nparam target_file\n\n:   filepath to save request content, default `None`\n\nparam verify\n\n:   if SSL verification should be done, default `True`,\n    a CA_BUNDLE path can also be provided\n\nparam force_new_session\n\n:   if new HTTP session should be created,\n    default `False`\n\nparam overwrite\n\n:   used together with `target_file`, if `True` will overwrite\n    the target file, default `False`\n\nparam stream\n\n:   if `False` the response content will be immediately downloaded\n\nreturn\n\n:   request response as a dict\n", "tags": [], "source": null, "shortdoc": "An alias for the `HTTP Get` keyword.", "lineno": 188}, {"name": "GET", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a GET request.\n\nThe endpoint used to retrieve the resource is the `url`, while query\nstring parameters can be passed as string, dictionary (or list of tuples or bytes)\nthrough the `params`.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs` here is a list:\n\ndata     | Dictionary, list of tuples, bytes, or file-like object to send in the body of the request. |\n\njson     | A JSON serializable Python object to send in the body of the request. |\n\nheaders  | Dictionary of HTTP Headers to send with the request. |\n\ncookies  | Dict or CookieJar object to send with the request. |\n\nfiles    | Dictionary of file-like-objects (or {'name': file-tuple}) for multipart encoding upload. |\n\nfile-tuple | can be a 2-tuple ('filename', fileobj), 3-tuple ('filename', fileobj, 'content\\_type') or a 4-tuple ('filename', fileobj, 'content\\_type', custom\\_headers), where 'content-type' is a string defining the content type of the given file and custom\\_headers a dict-like object containing additional headers to add for the file. |\n\nauth | Auth tuple to enable Basic/Digest/Custom HTTP Auth. |\n\ntimeout | How many seconds to wait for the server to send data before giving up, as a float, or a (connect timeout, read timeout) tuple. |\n\nallow\\_redirects | Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ${True}. |\n\nproxies | Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'}) |\n\nverify  | Either a boolean, in which case it controls whether we verify the server's TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to ${True}. Warning: if a session has been created with verify=${False} any other requests will not verify the SSL certificate. |\n\nstream | if ${False}, the response content will be immediately downloaded. |\n\ncert | if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair. |For more updated and complete information verify the official Requests api documentation:\n[https://requests.readthedocs.io/en/latest/api/](https://requests.readthedocs.io/en/latest/api/)\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a GET request.", "lineno": 136}, {"name": "GET On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a GET request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to retrieve the resource is the `url`, while query\nstring parameters can be passed as string, dictionary (or list of tuples or bytes)\nthrough the `params`.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a GET request on a previously created HTTP Session.", "lineno": 149}, {"name": "Get Current Session Alias", "args": [], "doc": "Get request session alias that was used with the `HTTP Get` keyword.\n\nreturn\n\n:   name of session alias as a string\n", "tags": [], "source": null, "shortdoc": "Get request session alias that was used with the `HTTP Get` keyword.", "lineno": 181}, {"name": "Get File For Streaming Upload", "args": [{"name": "path", "kind": "POSITIONAL_OR_NAMED", "repr": "path", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Opens and returns a file descriptor of a specified file to be passed as `data` parameter\nto other requests keywords.\n\nThis allows streaming upload of large files without reading them into memory.\n\nFile descriptor is binary mode and read only. Requests keywords will automatically close the file,\nif used outside this library it's up to the caller to close it.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\RequestsKeywords.py", "shortdoc": "Opens and returns a file descriptor of a specified file to be passed as `data` parameter to other requests keywords.", "lineno": 142}, {"name": "Get Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "data", "kind": "POSITIONAL_OR_NAMED", "repr": "data=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "json", "kind": "POSITIONAL_OR_NAMED", "repr": "json=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "params", "kind": "POSITIONAL_OR_NAMED", "repr": "params=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use GET On Session instead.\n\nSend a GET request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the GET request to\n\n`params` url parameters to append to the uri\n\n`headers` a dictionary of headers to use with the request\n\n`data` a dictionary of key-value pairs that will be urlencoded\n\n:   and sent as GET data\n    or binary data that is sent as the raw body content\n\n`json` a value that will be json encoded\n\n:   and sent as GET data if data is not specified\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use GET On Session instead.", "lineno": 36}, {"name": "HEAD", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a HEAD request.\n\nThe endpoint used to retrieve the HTTP headers is the `url`.\n\n`allow_redirects` parameter is not provided, it will be set to False (as\nopposed to the default behavior).\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a HEAD request.", "lineno": 136}, {"name": "HEAD On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a HEAD request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to retrieve the HTTP headers is the `url`.\n\n`allow_redirects` parameter is not provided, it will be set to False (as\nopposed to the default behavior).\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a HEAD request on a previously created HTTP Session.", "lineno": 149}, {"name": "Head Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use HEAD On Session instead.\n\nSend a HEAD request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the HEAD request to\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`headers` a dictionary of headers to use with the request\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use HEAD On Session instead.", "lineno": 308}, {"name": "Http Get", "args": [{"name": "url", "kind": "POSITIONAL_OR_NAMED", "repr": "url: str", "required": true, "defaultValue": null, "types": ["str"], "typedocs": []}, {"name": "target_file", "kind": "POSITIONAL_OR_NAMED", "repr": "target_file: str | None = None", "required": true, "defaultValue": "None", "types": ["Union"], "typedocs": []}, {"name": "verify", "kind": "POSITIONAL_OR_NAMED", "repr": "verify: bool | str = True", "required": true, "defaultValue": "True", "types": ["Union"], "typedocs": []}, {"name": "force_new_session", "kind": "POSITIONAL_OR_NAMED", "repr": "force_new_session: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "overwrite", "kind": "POSITIONAL_OR_NAMED", "repr": "overwrite: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "stream", "kind": "POSITIONAL_OR_NAMED", "repr": "stream: bool = False", "required": true, "defaultValue": "False", "types": ["bool"], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "A helper method for `Get Request` that will create a session, perform GET\nrequest, and store the target file, if set by the `target_file` parameter.\n\nThe old session will be used if the URL scheme and the host are the same as\npreviously, e.g., '[https://www.google.fi](https://www.google.fi)' part of the URL.\n\n```robotframework\n*** Settings ***\nLibrary    RPA.HTTP\n\n*** Variables ***\n${DOWNLOAD_PATH}=   ${OUTPUT DIR}${/}downloads\n${WORD_EXAMPLE}=    https://file-examples.com/wp-content/uploads/2017/02/file-sample_100kB.doc\n${EXCEL_EXAMPLE}=   https://file-examples.com/wp-content/uploads/2017/02/file_example_XLS_10.xls\n\n*** Tasks ***\nDownload files with reused session\n    # Starts a new session\n    HTTP Get    ${WORD_EXAMPLE}    target_file=${DOWNLOAD_PATH}${/}word-example.doc\n    # Uses the previous session\n    HTTP Get    ${EXCEL_EXAMPLE}    target_file=${DOWNLOAD_PATH}${/}excel-example.xls\n```\n\nparam url\n\n:   target URL for GET request\n\nparam target_file\n\n:   filepath to save request content, default `None`\n\nparam verify\n\n:   if SSL verification should be done, default `True`,\n    a CA_BUNDLE path can also be provided\n\nparam force_new_session\n\n:   if new HTTP session should be created,\n    default `False`\n\nparam overwrite\n\n:   used together with `target_file`, if `True` will overwrite\n    the target file, default `False`\n\nparam stream\n\n:   if `False`, the response content will be immediately downloaded\n\nreturn\n\n:   request response as a dict\n", "tags": [], "source": null, "shortdoc": "A helper method for `Get Request` that will create a session, perform GET request, and store the target file, if set by the `target_file` parameter.", "lineno": 98}, {"name": "OPTIONS", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a OPTIONS request.\n\nThe endpoint used to retrieve the resource is the `url`.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a OPTIONS request.", "lineno": 136}, {"name": "OPTIONS On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a OPTIONS request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to retrieve the resource is the `url`.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a OPTIONS request on a previously created HTTP Session.", "lineno": 149}, {"name": "Options Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use OPTIONS On Session instead.\n\nSend an OPTIONS request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the OPTIONS request to\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`headers` a dictionary of headers to use with the request\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use OPTIONS On Session instead.", "lineno": 344}, {"name": "PATCH", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a PUT request.\n\nThe endpoint used to send the request is the `url` parameter, while its body\ncan be passed using `data` or `json` parameters.\n\n`data` can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as `json` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a PUT request.", "lineno": 136}, {"name": "PATCH On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a PATCH request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to send the request is the `url` parameter, while its body\ncan be passed using `data` or `json` parameters.\n\n`data` can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as `json` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a PATCH request on a previously created HTTP Session.", "lineno": 149}, {"name": "POST", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a POST request.\n\nThe endpoint used to send the request is the `url` parameter, while its body\ncan be passed using `data` or `json` parameters.\n\n`data` can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as `json` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a POST request.", "lineno": 136}, {"name": "POST On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a POST request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to send the request is the `url` parameter, while its body\ncan be passed using `data` or `json` parameters.\n\n`data` can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as `json` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a POST request on a previously created HTTP Session.", "lineno": 149}, {"name": "PUT", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a PUT request.\n\nThe endpoint used to send the request is the `url` parameter, while its body\ncan be passed using `data` or `json` parameters.\n\n`data` can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as `json` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a PUT request.", "lineno": 136}, {"name": "PUT On Session", "args": [{"name": "@args", "kind": "VAR_POSITIONAL", "repr": "*args", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "&kwargs", "kind": "VAR_NAMED", "repr": "**kwargs", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Sends a PUT request on a previously created HTTP Session.\n\nSession will be identified using the `alias` name.\nThe endpoint used to send the request is the `url` parameter, while its body\ncan be passed using `data` or `json` parameters.\n\n`data` can be a dictionary, list of tuples, bytes, or file-like object.\nIf you want to pass a json body pass a dictionary as `json` parameter.\n\nBy default this keyword fails if a status code with error values is returned in the response,\nthis behavior can be modified using the `expected_status` and `msg` parameters,\nread more about it in Status Should Be keyword documentation.\nIn order to disable this implicit assert mechanism you can pass as `expected_status` the values `any` or\n`anything`.\n\nOther optional requests arguments can be passed using `\\*\\*kwargs`\nsee the GET keyword for the complete list.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\utils.py", "shortdoc": "Sends a PUT request on a previously created HTTP Session.", "lineno": 149}, {"name": "Patch Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "data", "kind": "POSITIONAL_OR_NAMED", "repr": "data=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "json", "kind": "POSITIONAL_OR_NAMED", "repr": "json=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "params", "kind": "POSITIONAL_OR_NAMED", "repr": "params=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "files", "kind": "POSITIONAL_OR_NAMED", "repr": "files=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use PATCH On Session instead.\n\nSend a PATCH request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the PATCH request to\n\n`data` a dictionary of key-value pairs that will be urlencoded\n\n:   and sent as PATCH data\n    or binary data that is sent as the raw body content\n    or file descriptor retrieved by Get File For Streaming Upload\n\n`json` a value that will be json encoded\n\n:   and sent as PATCH data if data is not specified\n\n`headers` a dictionary of headers to use with the request\n\n`files` a dictionary of file names containing file data to PATCH to the server\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`params` url parameters to append to the uri\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use PATCH On Session instead.", "lineno": 147}, {"name": "Post Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "data", "kind": "POSITIONAL_OR_NAMED", "repr": "data=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "json", "kind": "POSITIONAL_OR_NAMED", "repr": "json=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "params", "kind": "POSITIONAL_OR_NAMED", "repr": "params=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "files", "kind": "POSITIONAL_OR_NAMED", "repr": "files=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use POST On Session instead.\n\nSend a POST request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the POST request to\n\n`data` a dictionary of key-value pairs that will be urlencoded\n\n:   and sent as POST data\n    or binary data that is sent as the raw body content\n    or passed as such for multipart form data if `files` is also defined\n    or file descriptor retrieved by Get File For Streaming Upload\n\n`json` a value that will be json encoded\n\n:   and sent as POST data if files or data is not specified\n\n`params` url parameters to append to the uri\n\n`headers` a dictionary of headers to use with the request\n\n`files` a dictionary of file names containing file data to POST to the server\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use POST On Session instead.", "lineno": 88}, {"name": "Put Request", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "uri", "kind": "POSITIONAL_OR_NAMED", "repr": "uri", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "data", "kind": "POSITIONAL_OR_NAMED", "repr": "data=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "json", "kind": "POSITIONAL_OR_NAMED", "repr": "json=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "params", "kind": "POSITIONAL_OR_NAMED", "repr": "params=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "files", "kind": "POSITIONAL_OR_NAMED", "repr": "files=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "allow_redirects", "kind": "POSITIONAL_OR_NAMED", "repr": "allow_redirects=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "timeout", "kind": "POSITIONAL_OR_NAMED", "repr": "timeout=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use PUT On Session instead.\n\nSend a PUT request on the session object found using the\ngiven alias\n\n`alias` that will be used to identify the Session object in the cache\n\n`uri` to send the PUT request to\n\n`data` a dictionary of key-value pairs that will be urlencoded\n\n:   and sent as PUT data\n    or binary data that is sent as the raw body content\n    or file descriptor retrieved by Get File For Streaming Upload\n\n`json` a value that will be json encoded\n\n:   and sent as PUT data if data is not specified\n\n`headers` a dictionary of headers to use with the request\n\n`allow_redirects` Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n\n`params` url parameters to append to the uri\n\n`timeout` connection timeout\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use PUT On Session instead.", "lineno": 205}, {"name": "Request Should Be Successful", "args": [{"name": "response", "kind": "POSITIONAL_OR_NAMED", "repr": "response=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Fails if response status code is a client or server error (4xx, 5xx).\n\n`response` is the output of other requests keywords like GET On Session.\nIf omitted the last response will be used.\n\nIn case of failure an HTTPError will be automatically raised.\n\nFor a more versatile assert keyword see Status Should Be.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\RequestsKeywords.py", "shortdoc": "Fails if response status code is a client or server error (4xx, 5xx).", "lineno": 125}, {"name": "Session Exists", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}], "doc": "Return True if the session has been already created\n\n`alias` that has been used to identify the Session object in the cache\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Return True if the session has been already created", "lineno": 532}, {"name": "Status Should Be", "args": [{"name": "expected_status", "kind": "POSITIONAL_OR_NAMED", "repr": "expected_status", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "response", "kind": "POSITIONAL_OR_NAMED", "repr": "response=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "msg", "kind": "POSITIONAL_OR_NAMED", "repr": "msg=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Fails if response status code is different than the expected.\n\n`expected_status` could be the code number as an integer or as string.\nBut it could also be a named status code like 'ok', 'created', 'accepted' or\n'bad request', 'not found' etc.\n\n`response` is the output of other requests keywords like GET or GET On Session.\nIf omitted the last response will be used.\n\nIn case of failure an HTTPError will be automatically raised.\nA custom failure message `msg` can be added like in built-in keywords.\n\nNew requests keywords like GET or GET On Session (starting from 0.8 version) already have an implicit assert\nmechanism that, by default, verifies the response status code.\nStatus Should Be keyword can be useful when you disable implicit assert using `expected_status=anything`.\n\nFor example when you have a nested keyword that is used for both OK and ERROR responses:\n\n\\* Test Cases \\*\n\n\n\nTest Get Request And Make Sure Is A 404 Response\n\n${resp}=            GET Custom Keyword That Returns OK or ERROR Response  case=notfound\n\nStatus Should Be    404    ${resp}\n\nShould Be Equal As Strings  NOT FOUND  ${resp.reason}\n\n\n\nTest Get Request And Make Sure Is OK\n\n${resp}=            GET Custom Keyword That Returns OK or ERROR Response  case=pass\n\nStatus Should Be    200    ${resp}\n\nShould Be Equal As Strings  OK  ${resp.reason}\n\n\n\n\\* Keywords \\*\n\n\n\nGET Custom Keyword That Returns OK or ERROR Response\n\n\\[Arguments\\]  $case\n\n\\[...\\]\n\nIF $case == notfound\n\n$resp=     GET \\[...\\] expected\\_status=Anything\n\n\\[Return\\]   $resp\n\nELSE\n\n\\[...\\]\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\RequestsKeywords.py", "shortdoc": "Fails if response status code is different than the expected.", "lineno": 77}, {"name": "To Json", "args": [{"name": "content", "kind": "POSITIONAL_OR_NAMED", "repr": "content", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "pretty_print", "kind": "POSITIONAL_OR_NAMED", "repr": "pretty_print=False", "required": true, "defaultValue": "False", "types": [], "typedocs": []}], "doc": "*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.\n\nConvert a string to a JSON object\n\n`content` String content to convert into JSON\n\n`pretty_print` If defined, will output JSON is pretty print format\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\DeprecatedKeywords.py", "shortdoc": "*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.", "lineno": 15}, {"name": "Update Session", "args": [{"name": "alias", "kind": "POSITIONAL_OR_NAMED", "repr": "alias", "required": true, "defaultValue": null, "types": [], "typedocs": []}, {"name": "headers", "kind": "POSITIONAL_OR_NAMED", "repr": "headers=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}, {"name": "cookies", "kind": "POSITIONAL_OR_NAMED", "repr": "cookies=None", "required": true, "defaultValue": "None", "types": [], "typedocs": []}], "doc": "Updates HTTP Session Headers and Cookies.\n\nSession will be identified using the `alias` name.\nDictionary of `headers` and `cookies` to be updated and merged into session data.\n", "tags": [], "source": "c:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Robot\\RobotFramework\\.venv\\lib\\site-packages\\RequestsLibrary\\SessionKeywords.py", "shortdoc": "Updates HTTP Session Headers and Cookies.", "lineno": 552}], "dataTypes": {}, "typedocs": []}